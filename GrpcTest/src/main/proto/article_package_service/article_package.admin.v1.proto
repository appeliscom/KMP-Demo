syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/article_package_service";

import "article_package_service/article_package.data.v1.proto";
import "identity_service/common.proto";

package appelis.article_package.admin.v1;

service ArticlePackageAdminService {
  // Gets all packages for current project.
  rpc GetPackages (GetPackagesRequest) returns (GetPackagesResponse) {}
  // Create and update array of packages for project.
  rpc SetPackages (SetPackagesRequest) returns (ErrorResponse) {}
  // Delete packages by ids.
  rpc DeletePackages (DeletePackagesRequest) returns (ErrorResponse) {}
  // Get all packages for one article identified by article id.
  rpc GetArticlePackages (GetArticlePackagesRequest) returns (GetArticlePackagesResponse) {}
  // Set packages to articles in map <article,[package ids]>. Deletes all previous and sets a new ones.
  rpc SetPackagesToArticles (SetPackagesToArticlesRequest) returns (ErrorResponse) {}
}

message GetPackagesRequest {
  appelis.identity.common.v1.Token token = 1;
}

message GetPackagesResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    appelis.identity.common.v1.PermissionError permErr = 2;
    PackagesArray data = 3;
  }
}

message BusinessPackagesArray {
  repeated BusinessPackageMap data = 1;
}

message BusinessPackageMap {
  string businessId = 1;
  repeated appelis.article_package.data.v1.Package packages = 2;
}

message PackagesArray {
  repeated appelis.article_package.data.v1.Package packages = 2;
}

message SetPackagesRequest {
  appelis.identity.common.v1.Token token = 1;
  repeated appelis.article_package.data.v1.Package packages = 2;
}

message ErrorResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    appelis.identity.common.v1.PermissionError permErr = 2;
  }
}

message DeletePackagesRequest {
  appelis.identity.common.v1.Token token = 1;
  repeated string ids = 2;
}

message GetArticlePackagesRequest {
  appelis.identity.common.v1.Token token = 1;
  string articleId = 2;
}

message GetArticlePackagesResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    appelis.identity.common.v1.PermissionError permErr = 2;
    BusinessPackagesArray data = 3;
  }
}

message SetPackagesToArticlesRequest {
  appelis.identity.common.v1.Token token = 1;
  repeated ArticlePackageMap data = 2;
}

message ArticlePackageMap {
  string articleId = 1;
  repeated BusinessPackageIdMap ids = 2;
}

message BusinessPackageIdMap {
  string businessId = 1;
  repeated string packageId = 2;
}