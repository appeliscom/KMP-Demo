syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/metro_starclub_v2";

import "identity_service/common.proto";
import "appelis/uuid.proto";
import "appelis/language.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

package metro.starclub.v2;

// Service for handling mobile api for starclub calls.
// all cals are working only when there is active campaign
// Api is working only with tokens with logged user. Otherwise api will return TOKEN_INVALID.
service StarClub {
  // Active campaign per company status detail... point balance...
  rpc GetStatus(GetStatusRequest) returns(GetStatusResponse) {}

  rpc GetCampaignDescription(GetCampaignDescriptionRequest) returns (GetCampaignDescriptionResponse) {}

  rpc GetPointsSummary(GetPointsSummaryRequest) returns (GetPointsSummaryResponse) {}
  // Point Movements for invoices for active campaign.
  rpc GetPointMovements(GetPointMovementsRequest) returns(GetPointMovementsResponse) {}
  // Coupon of active campaign + per company calculation of apply flag + per user usage of coupon
  rpc GetCoupons(GetCouponsRequest) returns (GetCouponsResponse) {}
  // Get coupon by id. If coupon doesn't exists returns payload null.
  rpc GetCouponById(GetCouponByIdRequest) returns (GetCouponByIdResponse) {}
  // Rpc will be called after swiping in app.
  rpc ApplyCoupon(ApplyCouponRequest) returns (ApplyCouponResponse) {}
}

message GetCampaignDescriptionRequest {
  appelis.identity.common.v1.Token token = 1;
  appelis.Language lang = 2;
}

message GetCampaignDescriptionResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    bytes data = 2;
  }
}

message GetPointsSummaryRequest {
  appelis.identity.common.v1.Token token = 1;
}

message GetPointsSummaryResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    PointsSummary summary = 2;
  }
}

message PointsSummary {
  uint32 totalCollectedPoints = 1;
  uint32 spentPoints = 2;
}


message ApplyCouponRequest {
  appelis.identity.common.v1.Token token = 1;
  appelis.UUID couponId = 2;
}

message ApplyCouponResponse {
  oneof payload{
    appelis.identity.common.v1.TokenError tokenErr = 1;
    ApplyError applyErr = 2;
    // When user swipe usage with ean code will be returned.
    Usage usage = 3;
  }
}

enum ApplyError {
  UNKNOWN = 0;
  INSUFFICIENT_POINTS = 1;
  USER_BLOCKED = 2;
  THRESHOLD_NOT_HIT = 3;
}

message GetCouponByIdRequest {
  appelis.identity.common.v1.Token token = 1;
  appelis.UUID couponId = 2;
}

message GetCouponByIdResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    CompanyCoupon data = 2;
  }
}


message GetCouponsRequest {
  appelis.identity.common.v1.Token token = 1;
}
message GetCouponsResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    CompanyCouponArray data = 2;
  }
}

message CompanyCouponArray {
  repeated CompanyCoupon data = 1;
}

message CompanyCoupon {
  Coupon coupon = 1;
  // This is valid usage of user logged in token, can be null.
  Usage usage = 2;
}

message Usage {
  google.protobuf.Timestamp createdAt = 1;
  google.protobuf.Timestamp validUntil = 2;
  // Ean will be populated only when now < validUntil
  string ean = 3;
}

message Coupon {
  appelis.UUID id = 1;
  string name = 2;
  google.protobuf.StringValue pictureUrl = 3;
  Price standardPrice = 4;
  Price starclubPrice = 5;
  string actionText = 6;
  uint32 starPointPrice = 7;
  bytes description = 8;
  google.protobuf.Timestamp validTo = 9;
  ApplicationIdentifier application = 10;
  CouponUsageType usageType = 11;
  uint32 maximalUse = 12;
  uint32 alreadyUsed = 13;
  // Optional usage place
  CouponUsagePlace usagePlace = 14;
}

message CouponUsagePlace {
  string pictureUrl = 1;
  string translation = 2;
}

enum CouponUsageType {
  UNKNOWN_COUPON_USAGE = 0;
  UNLIMITED = 1;
  LIMITED = 2;
  PERSISTENT = 3;
}

enum ApplicationIdentifier {
  UNKNOWN_APPLICATION_IDENTIFIER = 0;
  VOUCHER = 1;
  ITEM_DISCOUNT = 2;
  VOUCHER_AND_ITEM_DISCOUNT = 3;
}

message Price {
  double value = 1;
  double valueTax = 2;
}

message GetPointMovementsRequest {
  appelis.identity.common.v1.Token token = 1;
}

message GetPointMovementsResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    PointMovementArray data = 2;
  }
}

message GetStatusRequest {
  appelis.identity.common.v1.Token token = 1;
}

message GetStatusResponse {

  enum StatusError {
    STATUS_UNKNOWN = 0;
    USER_BLOCKED = 1;
  }

  oneof payload{
    appelis.identity.common.v1.TokenError tokenErr = 1;
    StatusError statusErr = 3;
    CampaignStatus status = 2;
  }
}

message CampaignStatus {
  Campaign campaign = 1;
  // Balance can be null.
  CompanyBalance balance = 2;
}

message Campaign {
  appelis.UUID id = 1;
  CampaignRange range = 2;
  string pictureUrl = 3;
  CampaignRule rule = 4;
  string fullRulesUrl = 5;
  google.protobuf.Timestamp updatedAt = 6;
  google.protobuf.Int64Value minCollectedThreshold = 7;
}

message CampaignRule {
  double invoiceAmount = 1;
  int32 clubPoints = 2;
  string description = 3;
}

message CampaignRange {
  google.protobuf.Timestamp start = 1;
  google.protobuf.Timestamp collectingStart = 4;
  google.protobuf.Timestamp collectingEnd = 2;
  google.protobuf.Timestamp end = 3;
}

message CompanyBalance {
  int64 companyId = 1;
  // Balance of starpoints...
  int32 actualBalance = 2;
  int64 totalCollected = 6;
  int32 movementsCount = 5;
  string companyName = 3;
  google.protobuf.Timestamp updatedAt = 4;
}

message PointMovementArray {
  repeated PointMovement data = 1;
}

message PointMovement {
  message CollectingData {
    int32 pointsCollected = 1;
    double amount = 2;
    message File {
      string fileName = 1;
      string fileRecordId = 2;
      string fileValue = 3;
    }

    message Invoice {
      string invoiceId = 2;
      // Optional, because invoice have user optional.
      google.protobuf.Int64Value invoiceUser = 4;
    }

    oneof Data {
      File fileData = 3;
      Invoice invoiceData = 4;
    }
  }

  message SpendingData {
    int32 pointsSpent = 1;
    appelis.UUID couponId = 2;
    string couponName = 3;
    int64 userId = 4;
  }

  message CorrectionData {
    int32 points = 1;
    string description = 2;
  }

  appelis.UUID id = 1;
  google.protobuf.Timestamp createdAt = 2;
  oneof data {
    CollectingData collect = 3;
    SpendingData spending = 4;
    CorrectionData correction = 5;
  }
}


