syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/wallet";

package metro.wallet.v1;

import "identity_service/common.proto";
import "google/protobuf/wrappers.proto";
import "wallet/wallet.data.v1.proto";

service WalletPublic {
    rpc GetWalletOverview(GetWalletOverviewRequest) returns (GetWalletOverviewResponse) {}
    rpc GetFundDetail(GetFundDetailRequest) returns (GetFundDetailResponse) {}
    rpc Spend(SpendRequest) returns (SpendResponse) {}
    rpc GetFundHistory(GetFundHistoryRequest) returns (GetFundHistoryResponse) {}
    rpc GetSpendingsReport(GetSpendingsReportRequest) returns (GetSpendingsReportResponse) {}
}

message GetWalletOverviewRequest {
    appelis.identity.common.v1.Token token = 1;
}

message GetWalletOverviewResponse {
    oneof payload {
        appelis.identity.common.v1.TokenError token_err = 1;
        wallet.data.v1.WalletOverview data = 2;
    }
}

message GetFundDetailRequest {
    appelis.identity.common.v1.Token token = 1;
    string fund_id = 2;
}

message GetFundDetailResponse {
    oneof payload {
        appelis.identity.common.v1.TokenError token_err = 1;
        wallet.data.v1.WalletFund data = 2;
    }
}

message SpendRequest {
    appelis.identity.common.v1.Token token = 1;
    string fund_id = 2;
    uint32 amount = 3;
    string id_business = 4; // external_id of the business
    string id_cash_register = 5;
}

message SpendResponse {
    oneof payload {
        appelis.identity.common.v1.TokenError token_err = 1;
        wallet.data.v1.SpendResultError spend_err = 2;
        wallet.data.v1.SpendResultData data = 3;
    }
}

message GetFundHistoryRequest {
    appelis.identity.common.v1.Token token = 1;
    google.protobuf.StringValue fund_id = 2;
    uint32 first = 3;
    string after = 4;
}

message GetFundHistoryResponse {
    message FundHistory {
        repeated wallet.data.v1.FundActivity data = 1;
        bool has_next = 2;
    }

    oneof payload {
        appelis.identity.common.v1.TokenError token_err = 1;
        FundHistory data = 2;
    }
}

message GetSpendingsReportRequest {
    appelis.identity.common.v1.Token token = 1;
    wallet.data.v1.SpendingReportOutputFormat output_format = 2;
}

message GetSpendingsReportResponse {
    message SpendingsReportRows {
        repeated wallet.data.v1.SpendingsReportRow data = 1;
    }
    
    oneof payload {
        appelis.identity.common.v1.TokenError token_err = 1;
        // output as a csv string
        string csv = 2;
        // output as a rows objets
        SpendingsReportRows rows = 3;
    }
}