syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/payment_gateway_service";

import "identity_service/common.proto";

package appelis.payment.gateway.v1;

// Service to setup csob config per project.
service CsobConfigService {
  // Rpc set csob config for project. If data exists for project, config will be overwritten.
  rpc SetCsobConfig(SetCsobConfigRequest) returns (SetCsobConfigResponse) {}
  // Gets config from database. If config is not found, empty response is returned.
  rpc GetCsobConfig(GetCsobConfigRequest) returns (GetCsobConfigResponse) {}
}

message SetCsobConfigRequest {
  appelis.identity.common.v1.Token token = 1;
  CsobConfiguration config = 2;
}

message SetCsobConfigResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError err = 1;
    appelis.identity.common.v1.PermissionError permErr = 2;
  }
}

message GetCsobConfigRequest {
  appelis.identity.common.v1.Token token = 1;
}

message GetCsobConfigResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError err = 1;
    appelis.identity.common.v1.PermissionError permErr = 2;
    CsobConfiguration config = 3;
  }
}

message CsobConfiguration {
  string merchantId = 1;
  bytes privateKey = 2;
  bytes publicKey = 3;
  repeated CsobCurrencies allowedCurrencies = 4;
  repeated CsobLanguage allowedLanguages = 5;
}

enum CsobCurrencies {
  UNKNOWN_CSOB_CURRENCY = 0;
  CZK = 1;
  EUR = 2;
  USD = 3;
  GBP = 4;
  HUF = 5;
  PLN = 6;
  HRK = 7;
  RON = 8;
  NOK = 9;
  SEK = 10;
}

enum CsobLanguage {
  UNKNOWN_CSOB_LANGUAGE = 0;
  CZ = 1;
  EN = 2;
  DE = 3;
  FR = 4;
  HU = 5;
  IT = 6;
  JP = 7;
  PL = 8;
  PT = 9;
  RO = 10;
  RU = 11;
  SK = 12;
  ES = 13;
  TR = 14;
  VN = 15;
  HR = 16;
  SI = 17;
}
