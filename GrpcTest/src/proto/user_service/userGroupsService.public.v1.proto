syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/user_service";
option java_package = "com.appelis.userservice.groups";

package appelis.userService.groups.v1;

import "identity_service/common.proto";

service UserGroups {
  rpc GetTokenUserGroupsMap(GetTokenUserGroupsMapRequest) returns (GetTokenUserGroupsMapResponse) {}
}

message GetTokenUserGroupsMapRequest {
  appelis.identity.common.v1.Token token = 1;
}

message  GetTokenUserGroupsMapResponse {
  oneof payload{
    appelis.identity.common.v1.TokenError err = 1;
    UserGroupMapArray data = 2;
  }
}

service UserGroupsPublicAdmin {
  rpc StreamUserGroupMap(appelis.identity.common.v1.Token) returns (stream StreamUserGroupMapResponse){
  }

  rpc SetUserGroupMap (UsersGroupMapRequest) returns (UsersGroupMapResponse) {
  }

  rpc DeleteUsersGroupMap (DeleteUsersGroupMapRequest) returns(UsersGroupMapResponse){

  }
}

message StreamUserGroupMapResponse{
  oneof payload {
    appelis.identity.common.v1.TokenError err = 1;
    UserGroupMapArray data = 2;
  }
}

message UserGroupMapArray {
  repeated UserGroupMap data = 1;
}

message UserGroupMap {
  int64 id = 1;
  int64 userId = 2;
  int64 groupId = 3;
}

message DeleteUsersGroupMapRequest {
  appelis.identity.common.v1.Token token = 1;
  repeated int64 data = 2;
}

message UsersGroupMapRequest {
  appelis.identity.common.v1.Token token = 1;
  UserGroupMapArray data = 2;
}

message UsersGroupMapResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError err = 1;
    appelis.identity.common.v1.PermissionError permErr = 2;
  }
}