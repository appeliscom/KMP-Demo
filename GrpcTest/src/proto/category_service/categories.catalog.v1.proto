syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/category_service";

package appelis.category.v1;

import "identity_service/common.proto";
import "google/protobuf/field_mask.proto";
import "category_service/categories.data.v1.proto";
import "appelis/paging.proto";

// Category catalog is meant for mobile devices so tokens will be validated for device claims.
service CategoryCatalog {
  // Rpc load categories by ids.
  rpc ByIds(ByIdsRequest) returns (ByIdsResponse) {}
  // Rpc will return category searched by category_key.
  // In case that category is not found, empty response will be returned.
  rpc ByCategoryKey(ByCategoryKeyRequest) returns (ByCategoryKeyResponse) {}
  // Rpc will return child categories of parent category.
  rpc ChildCategories(ChildCategoriesRequest) returns (ChildCategoriesResponse) {}
}

message ByIdsRequest {
  appelis.identity.common.v1.Token token = 1;
  repeated string ids = 2;
  google.protobuf.FieldMask fieldMask = 3;
}

message ByIdsResponse {
  message IdMap {
    map<string, Category> data = 2;
  }

  oneof payload {
    appelis.identity.common.v1.TokenError error = 1;
    IdMap data = 2;
  }
}

message ByCategoryKeyRequest {
  appelis.identity.common.v1.Token token = 1;
  string categoryKey = 2;
  google.protobuf.FieldMask fieldMask = 3;
}

message ByCategoryKeyResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError error = 1;
    Category category = 2;
  }
}

message ChildCategoriesRequest {
  appelis.identity.common.v1.Token token = 1;
  string parentId = 2;
  appelis.CursorForwardPagingParams paging = 3;
  google.protobuf.FieldMask fieldMask = 4;
}

message ChildCategoriesResponse {
  message CategoryNode {
    string cursor = 1;
    Category data = 2;
  }

  message CategoryPage {
    bool hasNext = 1;
    repeated CategoryNode nodes = 2;
  }

  oneof payload {
    appelis.identity.common.v1.TokenError tokenErr = 1;
    CategoryPage page = 2;
  }
}