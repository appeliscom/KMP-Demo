syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/registrations_analytics";

package appelis.registrations.v1;

import "identity_service/common.proto";
import "appelis/timerange.proto";

service Analytics {
    rpc GetRegistrationsByCompanyType(GetRegistrationsByCompanyTypeRequest) returns (GetRegistrationsByCompanyTypeResponse) {}
    rpc GetRegistrationsByStore(GetRegistrationsByStoreRequest) returns (GetRegistrationsByStoreResponse) {}
}

message GetRegistrationsByCompanyTypeRequest {
    appelis.identity.common.v1.Token token = 1;
    appelis.TimeRange timerange = 3;
}

message GetRegistrationsByCompanyTypeResponse {
    message CompanyTypeStats {
        int64 all = 1;
        int64 diff = 2;
        int64 salesforces = 3;
        int64 salesforces_diff = 4;
    }
    message RegisteredCompaniesStats {
        map<string, CompanyTypeStats> stats = 1; // all / horeca / sco / traders
    }
    oneof payload {
        appelis.identity.common.v1.TokenError tokenErr = 1;
        RegisteredCompaniesStats data = 2;
    }
}

message GetRegistrationsByStoreRequest {
    appelis.identity.common.v1.Token token = 1;
    appelis.TimeRange timerange = 3;
}

message GetRegistrationsByStoreResponse {
    message RegistrationsByStore {
        string name = 1;
        int64 all = 2;
        int64 diff = 3;
    }
    message RegisteredCompaniesStats {
        repeated RegistrationsByStore stats = 1;
    }
    oneof payload {
        appelis.identity.common.v1.TokenError tokenErr = 1;
        RegisteredCompaniesStats data = 2;
    }
}
