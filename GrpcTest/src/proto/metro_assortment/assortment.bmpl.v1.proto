syntax = "proto3";

option go_package = "GoServerCore/proto-storage/generated/go/metro_assortment";

package metro.assortment.v1;

import "identity_service/common.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "appelis/uuid.proto";

// Service for handling bmpl prices from administration
service BmplAdmin {
  // Getting all prices from database for comparing.
  rpc StreamAllPrices (StreamAllPricesRequest) returns (stream AllPricesResponse) {}
  rpc SetPrices (SetPricesRequest) returns (AllPricesResponse) {}
  rpc DeletePrices (DeletePricesRequest) returns (DeletePricesResponse) {}
}

message DeletePricesResponse {
  appelis.identity.common.v1.TokenError error = 1;
}

message DeletePricesRequest {
  appelis.identity.common.v1.Token token = 1;
  repeated appelis.UUID ids = 2;
}

message SetPricesRequest {
  appelis.identity.common.v1.Token token = 1;
  BmplPricesArray prices = 2;
}


message StreamAllPricesRequest {
  appelis.identity.common.v1.Token token = 1;
}

message AllPricesResponse {
  oneof payload {
    appelis.identity.common.v1.TokenError error = 1;
    BmplPricesArray data = 2;
  }
}

message BmplPricesArray {
  repeated BmplPrice price = 1;
}


enum ConditionType {
  UNKNOWN_CONDITION_TYPE = 0;
  ARTICLE_QUANTITY = 1;
}

enum DiscountType {
  UNKNOWN_DISCOUNT_TYPE = 0;
  PERCENT = 1;
  DISCOUNT = 2;
  FIXED = 3;
}

message PriceData {
  string idArticle = 2;
  google.protobuf.StringValue idBusiness = 5;
  google.protobuf.Timestamp validityFrom = 6;
  google.protobuf.Timestamp validityTo = 7;
  ConditionType conditionType = 8;
  double conditionValue = 9;
  DiscountType discountType = 10;
  double discountValue = 11;
}

message BmplPrice {
  // Uuid have null value or empty val for updating...
  appelis.UUID id = 1;
  PriceData data = 2;
}