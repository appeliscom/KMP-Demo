//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: identity_service/identity.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Public api for generating jwt tokens
///
/// Usage: instantiate `Appelis_Identity_V1_IdentityServiceClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Identity_V1_IdentityServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol? { get }

  func create(
    _ request: Appelis_Identity_V1_CreateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_V1_CreateRequest, Appelis_Identity_V1_CreateResponse>

  func refresh(
    _ request: Appelis_Identity_V1_RefreshRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_V1_RefreshRequest, Appelis_Identity_V1_RefreshResponse>
}

extension Appelis_Identity_V1_IdentityServiceClientProtocol {
  public var serviceName: String {
    return "appelis.identity.v1.IdentityService"
  }

  /// Creates tokenPayload. Creates jwt token with assigned claims + generates refresh token for assigned JWT.
  ///
  /// - Parameters:
  ///   - request: Request to send to Create.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func create(
    _ request: Appelis_Identity_V1_CreateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_V1_CreateRequest, Appelis_Identity_V1_CreateResponse> {
    return self.makeUnaryCall(
      path: Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.create.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateInterceptors() ?? []
    )
  }

  /// Use refresh token to regenerate jwt token with assigned claims.
  ///
  /// - Parameters:
  ///   - request: Request to send to Refresh.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func refresh(
    _ request: Appelis_Identity_V1_RefreshRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_V1_RefreshRequest, Appelis_Identity_V1_RefreshResponse> {
    return self.makeUnaryCall(
      path: Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.refresh.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRefreshInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Identity_V1_IdentityServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Identity_V1_IdentityServiceNIOClient")
public final class Appelis_Identity_V1_IdentityServiceClient: Appelis_Identity_V1_IdentityServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.identity.v1.IdentityService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Identity_V1_IdentityServiceNIOClient: Appelis_Identity_V1_IdentityServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.identity.v1.IdentityService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Public api for generating jwt tokens
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Identity_V1_IdentityServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol? { get }

  func makeCreateCall(
    _ request: Appelis_Identity_V1_CreateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_V1_CreateRequest, Appelis_Identity_V1_CreateResponse>

  func makeRefreshCall(
    _ request: Appelis_Identity_V1_RefreshRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_V1_RefreshRequest, Appelis_Identity_V1_RefreshResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Identity_V1_IdentityServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Identity_V1_IdentityServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeCreateCall(
    _ request: Appelis_Identity_V1_CreateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_V1_CreateRequest, Appelis_Identity_V1_CreateResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.create.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateInterceptors() ?? []
    )
  }

  public func makeRefreshCall(
    _ request: Appelis_Identity_V1_RefreshRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_V1_RefreshRequest, Appelis_Identity_V1_RefreshResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.refresh.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRefreshInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Identity_V1_IdentityServiceAsyncClientProtocol {
  public func create(
    _ request: Appelis_Identity_V1_CreateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Identity_V1_CreateResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.create.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateInterceptors() ?? []
    )
  }

  public func refresh(
    _ request: Appelis_Identity_V1_RefreshRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Identity_V1_RefreshResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.refresh.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRefreshInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Identity_V1_IdentityServiceAsyncClient: Appelis_Identity_V1_IdentityServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Identity_V1_IdentityServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'create'.
  func makeCreateInterceptors() -> [ClientInterceptor<Appelis_Identity_V1_CreateRequest, Appelis_Identity_V1_CreateResponse>]

  /// - Returns: Interceptors to use when invoking 'refresh'.
  func makeRefreshInterceptors() -> [ClientInterceptor<Appelis_Identity_V1_RefreshRequest, Appelis_Identity_V1_RefreshResponse>]
}

public enum Appelis_Identity_V1_IdentityServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "IdentityService",
    fullName: "appelis.identity.v1.IdentityService",
    methods: [
      Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.create,
      Appelis_Identity_V1_IdentityServiceClientMetadata.Methods.refresh,
    ]
  )

  public enum Methods {
    public static let create = GRPCMethodDescriptor(
      name: "Create",
      path: "/appelis.identity.v1.IdentityService/Create",
      type: GRPCCallType.unary
    )

    public static let refresh = GRPCMethodDescriptor(
      name: "Refresh",
      path: "/appelis.identity.v1.IdentityService/Refresh",
      type: GRPCCallType.unary
    )
  }
}

