//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: clickandcollect_metro_services/metroRegistrationService.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol? { get }

  func companyVerify(
    _ request: Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest, Appelis_Clickandcollect_Metro_V1_CompanyVerifyResponse>
}

extension Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientProtocol {
  public var serviceName: String {
    return "appelis.clickandcollect.metro.v1.RegistrationVerify"
  }

  /// Unary call to CompanyVerify
  ///
  /// - Parameters:
  ///   - request: Request to send to CompanyVerify.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func companyVerify(
    _ request: Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest, Appelis_Clickandcollect_Metro_V1_CompanyVerifyResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientMetadata.Methods.companyVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompanyVerifyInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Clickandcollect_Metro_V1_RegistrationVerifyNIOClient")
public final class Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClient: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.clickandcollect.metro.v1.RegistrationVerify service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Clickandcollect_Metro_V1_RegistrationVerifyNIOClient: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.clickandcollect.metro.v1.RegistrationVerify service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Clickandcollect_Metro_V1_RegistrationVerifyAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol? { get }

  func makeCompanyVerifyCall(
    _ request: Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest, Appelis_Clickandcollect_Metro_V1_CompanyVerifyResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_Metro_V1_RegistrationVerifyAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeCompanyVerifyCall(
    _ request: Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest, Appelis_Clickandcollect_Metro_V1_CompanyVerifyResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientMetadata.Methods.companyVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompanyVerifyInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_Metro_V1_RegistrationVerifyAsyncClientProtocol {
  public func companyVerify(
    _ request: Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_CompanyVerifyResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientMetadata.Methods.companyVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompanyVerifyInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Clickandcollect_Metro_V1_RegistrationVerifyAsyncClient: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'companyVerify'.
  func makeCompanyVerifyInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_CompanyVerifyRequest, Appelis_Clickandcollect_Metro_V1_CompanyVerifyResponse>]
}

public enum Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "RegistrationVerify",
    fullName: "appelis.clickandcollect.metro.v1.RegistrationVerify",
    methods: [
      Appelis_Clickandcollect_Metro_V1_RegistrationVerifyClientMetadata.Methods.companyVerify,
    ]
  )

  public enum Methods {
    public static let companyVerify = GRPCMethodDescriptor(
      name: "CompanyVerify",
      path: "/appelis.clickandcollect.metro.v1.RegistrationVerify/CompanyVerify",
      type: GRPCCallType.unary
    )
  }
}

/// Usage: instantiate `Appelis_Clickandcollect_Metro_V1_RegistrationAdminClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol? { get }

  func changeRegistrationStatus(
    _ request: Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest, Appelis_Clickandcollect_Metro_V1_ChangeRegistrationResponse>

  func pagedRegistrations(
    _ request: Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest, Appelis_Clickandcollect_Metro_V1_PagedRegistrationsResponse>

  func getFilterOptions(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetFilterOptionsResponse>

  func getRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_GetRegistrationResponse>

  func resetRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_ResetRegistrationResponse>

  func createAdminRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationResponse>
}

extension Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientProtocol {
  public var serviceName: String {
    return "appelis.clickandcollect.metro.v1.RegistrationAdmin"
  }

  /// Used by admin to change status of registration
  ///
  /// - Parameters:
  ///   - request: Request to send to ChangeRegistrationStatus.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func changeRegistrationStatus(
    _ request: Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest, Appelis_Clickandcollect_Metro_V1_ChangeRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.changeRegistrationStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangeRegistrationStatusInterceptors() ?? []
    )
  }

  /// Returns paged registration for project on token. Registrations will be ordered by id descending(creation_time).
  ///
  /// - Parameters:
  ///   - request: Request to send to PagedRegistrations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func pagedRegistrations(
    _ request: Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest, Appelis_Clickandcollect_Metro_V1_PagedRegistrationsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.pagedRegistrations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePagedRegistrationsInterceptors() ?? []
    )
  }

  /// Unary call to GetFilterOptions
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFilterOptions.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFilterOptions(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetFilterOptionsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getFilterOptions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFilterOptionsInterceptors() ?? []
    )
  }

  /// Unary call to GetRegistration
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRegistration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_GetRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRegistrationInterceptors() ?? []
    )
  }

  /// Unary call to ResetRegistration
  ///
  /// - Parameters:
  ///   - request: Request to send to ResetRegistration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func resetRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_ResetRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.resetRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetRegistrationInterceptors() ?? []
    )
  }

  /// Creates registration record with approved state.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateAdminRegistration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createAdminRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.createAdminRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAdminRegistrationInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Clickandcollect_Metro_V1_RegistrationAdminClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Clickandcollect_Metro_V1_RegistrationAdminNIOClient")
public final class Appelis_Clickandcollect_Metro_V1_RegistrationAdminClient: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.clickandcollect.metro.v1.RegistrationAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Clickandcollect_Metro_V1_RegistrationAdminNIOClient: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.clickandcollect.metro.v1.RegistrationAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Clickandcollect_Metro_V1_RegistrationAdminAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol? { get }

  func makeChangeRegistrationStatusCall(
    _ request: Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest, Appelis_Clickandcollect_Metro_V1_ChangeRegistrationResponse>

  func makePagedRegistrationsCall(
    _ request: Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest, Appelis_Clickandcollect_Metro_V1_PagedRegistrationsResponse>

  func makeGetFilterOptionsCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetFilterOptionsResponse>

  func makeGetRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_GetRegistrationResponse>

  func makeResetRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_ResetRegistrationResponse>

  func makeCreateAdminRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_Metro_V1_RegistrationAdminAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeChangeRegistrationStatusCall(
    _ request: Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest, Appelis_Clickandcollect_Metro_V1_ChangeRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.changeRegistrationStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangeRegistrationStatusInterceptors() ?? []
    )
  }

  public func makePagedRegistrationsCall(
    _ request: Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest, Appelis_Clickandcollect_Metro_V1_PagedRegistrationsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.pagedRegistrations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePagedRegistrationsInterceptors() ?? []
    )
  }

  public func makeGetFilterOptionsCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetFilterOptionsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getFilterOptions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFilterOptionsInterceptors() ?? []
    )
  }

  public func makeGetRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_GetRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRegistrationInterceptors() ?? []
    )
  }

  public func makeResetRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_ResetRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.resetRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetRegistrationInterceptors() ?? []
    )
  }

  public func makeCreateAdminRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.createAdminRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAdminRegistrationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_Metro_V1_RegistrationAdminAsyncClientProtocol {
  public func changeRegistrationStatus(
    _ request: Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_ChangeRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.changeRegistrationStatus.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChangeRegistrationStatusInterceptors() ?? []
    )
  }

  public func pagedRegistrations(
    _ request: Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_PagedRegistrationsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.pagedRegistrations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePagedRegistrationsInterceptors() ?? []
    )
  }

  public func getFilterOptions(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_GetFilterOptionsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getFilterOptions.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFilterOptionsInterceptors() ?? []
    )
  }

  public func getRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_GetRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRegistrationInterceptors() ?? []
    )
  }

  public func resetRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_ResetRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.resetRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeResetRegistrationInterceptors() ?? []
    )
  }

  public func createAdminRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.createAdminRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateAdminRegistrationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Clickandcollect_Metro_V1_RegistrationAdminAsyncClient: Appelis_Clickandcollect_Metro_V1_RegistrationAdminAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'changeRegistrationStatus'.
  func makeChangeRegistrationStatusInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_ChangeRegistrationStatusRequest, Appelis_Clickandcollect_Metro_V1_ChangeRegistrationResponse>]

  /// - Returns: Interceptors to use when invoking 'pagedRegistrations'.
  func makePagedRegistrationsInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_PagedRegistrationsRequest, Appelis_Clickandcollect_Metro_V1_PagedRegistrationsResponse>]

  /// - Returns: Interceptors to use when invoking 'getFilterOptions'.
  func makeGetFilterOptionsInterceptors() -> [ClientInterceptor<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetFilterOptionsResponse>]

  /// - Returns: Interceptors to use when invoking 'getRegistration'.
  func makeGetRegistrationInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_GetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_GetRegistrationResponse>]

  /// - Returns: Interceptors to use when invoking 'resetRegistration'.
  func makeResetRegistrationInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_ResetRegistrationRequest, Appelis_Clickandcollect_Metro_V1_ResetRegistrationResponse>]

  /// - Returns: Interceptors to use when invoking 'createAdminRegistration'.
  func makeCreateAdminRegistrationInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateAdminRegistrationResponse>]
}

public enum Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "RegistrationAdmin",
    fullName: "appelis.clickandcollect.metro.v1.RegistrationAdmin",
    methods: [
      Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.changeRegistrationStatus,
      Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.pagedRegistrations,
      Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getFilterOptions,
      Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.getRegistration,
      Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.resetRegistration,
      Appelis_Clickandcollect_Metro_V1_RegistrationAdminClientMetadata.Methods.createAdminRegistration,
    ]
  )

  public enum Methods {
    public static let changeRegistrationStatus = GRPCMethodDescriptor(
      name: "ChangeRegistrationStatus",
      path: "/appelis.clickandcollect.metro.v1.RegistrationAdmin/ChangeRegistrationStatus",
      type: GRPCCallType.unary
    )

    public static let pagedRegistrations = GRPCMethodDescriptor(
      name: "PagedRegistrations",
      path: "/appelis.clickandcollect.metro.v1.RegistrationAdmin/PagedRegistrations",
      type: GRPCCallType.unary
    )

    public static let getFilterOptions = GRPCMethodDescriptor(
      name: "GetFilterOptions",
      path: "/appelis.clickandcollect.metro.v1.RegistrationAdmin/GetFilterOptions",
      type: GRPCCallType.unary
    )

    public static let getRegistration = GRPCMethodDescriptor(
      name: "GetRegistration",
      path: "/appelis.clickandcollect.metro.v1.RegistrationAdmin/GetRegistration",
      type: GRPCCallType.unary
    )

    public static let resetRegistration = GRPCMethodDescriptor(
      name: "ResetRegistration",
      path: "/appelis.clickandcollect.metro.v1.RegistrationAdmin/ResetRegistration",
      type: GRPCCallType.unary
    )

    public static let createAdminRegistration = GRPCMethodDescriptor(
      name: "CreateAdminRegistration",
      path: "/appelis.clickandcollect.metro.v1.RegistrationAdmin/CreateAdminRegistration",
      type: GRPCCallType.unary
    )
  }
}

/// Should be used by executives, to create request for entering click and collect module.
///
/// Usage: instantiate `Appelis_Clickandcollect_Metro_V1_RegistrationClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Clickandcollect_Metro_V1_RegistrationClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol? { get }

  func getCompanyRegistration(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetCompanyRegistrationResponse>

  func canManageRegistration(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_CanManageRegistrationResponse>

  func createRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse>

  func updateRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse>
}

extension Appelis_Clickandcollect_Metro_V1_RegistrationClientProtocol {
  public var serviceName: String {
    return "appelis.clickandcollect.metro.v1.Registration"
  }

  /// If registration was created, returns data. If there is no registration yet, returns null for data.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCompanyRegistration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCompanyRegistration(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetCompanyRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.getCompanyRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanyRegistrationInterceptors() ?? []
    )
  }

  /// Can be used to determine if calling user can create registration.
  ///
  /// - Parameters:
  ///   - request: Request to send to CanManageRegistration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func canManageRegistration(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_CanManageRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.canManageRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanManageRegistrationInterceptors() ?? []
    )
  }

  /// Should create registration if calling user is executive.
  /// If there is already created registration, return stored data.
  /// Always will send email with link verification.
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateRegistration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.createRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRegistrationInterceptors() ?? []
    )
  }

  /// Used by executive to update autoApprove flag.
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateRegistration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.updateRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRegistrationInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Clickandcollect_Metro_V1_RegistrationClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Clickandcollect_Metro_V1_RegistrationNIOClient")
public final class Appelis_Clickandcollect_Metro_V1_RegistrationClient: Appelis_Clickandcollect_Metro_V1_RegistrationClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.clickandcollect.metro.v1.Registration service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Clickandcollect_Metro_V1_RegistrationNIOClient: Appelis_Clickandcollect_Metro_V1_RegistrationClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.clickandcollect.metro.v1.Registration service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Should be used by executives, to create request for entering click and collect module.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Clickandcollect_Metro_V1_RegistrationAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol? { get }

  func makeGetCompanyRegistrationCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetCompanyRegistrationResponse>

  func makeCanManageRegistrationCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_CanManageRegistrationResponse>

  func makeCreateRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse>

  func makeUpdateRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_Metro_V1_RegistrationAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetCompanyRegistrationCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetCompanyRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.getCompanyRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanyRegistrationInterceptors() ?? []
    )
  }

  public func makeCanManageRegistrationCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_CanManageRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.canManageRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanManageRegistrationInterceptors() ?? []
    )
  }

  public func makeCreateRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.createRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRegistrationInterceptors() ?? []
    )
  }

  public func makeUpdateRegistrationCall(
    _ request: Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.updateRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRegistrationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_Metro_V1_RegistrationAsyncClientProtocol {
  public func getCompanyRegistration(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_GetCompanyRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.getCompanyRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanyRegistrationInterceptors() ?? []
    )
  }

  public func canManageRegistration(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_CanManageRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.canManageRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanManageRegistrationInterceptors() ?? []
    )
  }

  public func createRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.createRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateRegistrationInterceptors() ?? []
    )
  }

  public func updateRegistration(
    _ request: Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.updateRegistration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateRegistrationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Clickandcollect_Metro_V1_RegistrationAsyncClient: Appelis_Clickandcollect_Metro_V1_RegistrationAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Clickandcollect_Metro_V1_RegistrationClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getCompanyRegistration'.
  func makeGetCompanyRegistrationInterceptors() -> [ClientInterceptor<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_GetCompanyRegistrationResponse>]

  /// - Returns: Interceptors to use when invoking 'canManageRegistration'.
  func makeCanManageRegistrationInterceptors() -> [ClientInterceptor<Appelis_Identity_Common_V1_Token, Appelis_Clickandcollect_Metro_V1_CanManageRegistrationResponse>]

  /// - Returns: Interceptors to use when invoking 'createRegistration'.
  func makeCreateRegistrationInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_CreateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse>]

  /// - Returns: Interceptors to use when invoking 'updateRegistration'.
  func makeUpdateRegistrationInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_Metro_V1_UpdateRegistrationRequest, Appelis_Clickandcollect_Metro_V1_CreateRegistrationResponse>]
}

public enum Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Registration",
    fullName: "appelis.clickandcollect.metro.v1.Registration",
    methods: [
      Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.getCompanyRegistration,
      Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.canManageRegistration,
      Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.createRegistration,
      Appelis_Clickandcollect_Metro_V1_RegistrationClientMetadata.Methods.updateRegistration,
    ]
  )

  public enum Methods {
    public static let getCompanyRegistration = GRPCMethodDescriptor(
      name: "GetCompanyRegistration",
      path: "/appelis.clickandcollect.metro.v1.Registration/GetCompanyRegistration",
      type: GRPCCallType.unary
    )

    public static let canManageRegistration = GRPCMethodDescriptor(
      name: "CanManageRegistration",
      path: "/appelis.clickandcollect.metro.v1.Registration/CanManageRegistration",
      type: GRPCCallType.unary
    )

    public static let createRegistration = GRPCMethodDescriptor(
      name: "CreateRegistration",
      path: "/appelis.clickandcollect.metro.v1.Registration/CreateRegistration",
      type: GRPCCallType.unary
    )

    public static let updateRegistration = GRPCMethodDescriptor(
      name: "UpdateRegistration",
      path: "/appelis.clickandcollect.metro.v1.Registration/UpdateRegistration",
      type: GRPCCallType.unary
    )
  }
}

