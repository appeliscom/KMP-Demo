//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: loyalty/loyalty.public.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Metro_Loyalty_V1_LoyaltyPublicClient`, then call methods of this protocol to make API calls.
public protocol Metro_Loyalty_V1_LoyaltyPublicClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol? { get }

  func getOverview(
    _ request: Metro_Loyalty_V1_GetLoyaltyOverviewRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Loyalty_V1_GetLoyaltyOverviewRequest, Metro_Loyalty_V1_GetLoyaltyOverviewResponse>

  func getPointExpirations(
    _ request: Metro_Loyalty_V1_GetPointExpirationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Loyalty_V1_GetPointExpirationsRequest, Metro_Loyalty_V1_GetPointExpirationsResponse>

  func getPointMovementsPaged(
    _ request: Metro_Loyalty_V1_GetPointMovementsPagedRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Loyalty_V1_GetPointMovementsPagedRequest, Metro_Loyalty_V1_GetPointMovementsPagedResponse>

  func getReward(
    _ request: Metro_Loyalty_V1_GetRewardRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Loyalty_V1_GetRewardRequest, Metro_Loyalty_V1_GetRewardResponse>

  func applyRewardCoupon(
    _ request: Metro_Loyalty_V1_ApplyRewardCouponRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Loyalty_V1_ApplyRewardCouponRequest, Metro_Loyalty_V1_ApplyRewardCouponResponse>

  func streamAccountsDetails(
    _ request: Metro_Loyalty_V1_StreamAccountsDetailsRequest,
    callOptions: CallOptions?,
    handler: @escaping (Metro_Loyalty_V1_StreamAccountsDetailsResponse) -> Void
  ) -> ServerStreamingCall<Metro_Loyalty_V1_StreamAccountsDetailsRequest, Metro_Loyalty_V1_StreamAccountsDetailsResponse>

  func streamSpendingMovements(
    _ request: Metro_Loyalty_V1_StreamSpendingMovementsRequest,
    callOptions: CallOptions?,
    handler: @escaping (Metro_Loyalty_V1_StreamSpendingMovementsResponse) -> Void
  ) -> ServerStreamingCall<Metro_Loyalty_V1_StreamSpendingMovementsRequest, Metro_Loyalty_V1_StreamSpendingMovementsResponse>
}

extension Metro_Loyalty_V1_LoyaltyPublicClientProtocol {
  public var serviceName: String {
    return "metro.loyalty.v1.LoyaltyPublic"
  }

  /// Unary call to GetOverview
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOverview.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getOverview(
    _ request: Metro_Loyalty_V1_GetLoyaltyOverviewRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Loyalty_V1_GetLoyaltyOverviewRequest, Metro_Loyalty_V1_GetLoyaltyOverviewResponse> {
    return self.makeUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOverviewInterceptors() ?? []
    )
  }

  /// Unary call to GetPointExpirations
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPointExpirations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPointExpirations(
    _ request: Metro_Loyalty_V1_GetPointExpirationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Loyalty_V1_GetPointExpirationsRequest, Metro_Loyalty_V1_GetPointExpirationsResponse> {
    return self.makeUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointExpirations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPointExpirationsInterceptors() ?? []
    )
  }

  /// Unary call to GetPointMovementsPaged
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPointMovementsPaged.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPointMovementsPaged(
    _ request: Metro_Loyalty_V1_GetPointMovementsPagedRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Loyalty_V1_GetPointMovementsPagedRequest, Metro_Loyalty_V1_GetPointMovementsPagedResponse> {
    return self.makeUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointMovementsPaged.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPointMovementsPagedInterceptors() ?? []
    )
  }

  /// Unary call to GetReward
  ///
  /// - Parameters:
  ///   - request: Request to send to GetReward.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getReward(
    _ request: Metro_Loyalty_V1_GetRewardRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Loyalty_V1_GetRewardRequest, Metro_Loyalty_V1_GetRewardResponse> {
    return self.makeUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRewardInterceptors() ?? []
    )
  }

  /// Unary call to ApplyRewardCoupon
  ///
  /// - Parameters:
  ///   - request: Request to send to ApplyRewardCoupon.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func applyRewardCoupon(
    _ request: Metro_Loyalty_V1_ApplyRewardCouponRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Loyalty_V1_ApplyRewardCouponRequest, Metro_Loyalty_V1_ApplyRewardCouponResponse> {
    return self.makeUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.applyRewardCoupon.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeApplyRewardCouponInterceptors() ?? []
    )
  }

  /// Server streaming call to StreamAccountsDetails
  ///
  /// - Parameters:
  ///   - request: Request to send to StreamAccountsDetails.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func streamAccountsDetails(
    _ request: Metro_Loyalty_V1_StreamAccountsDetailsRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Metro_Loyalty_V1_StreamAccountsDetailsResponse) -> Void
  ) -> ServerStreamingCall<Metro_Loyalty_V1_StreamAccountsDetailsRequest, Metro_Loyalty_V1_StreamAccountsDetailsResponse> {
    return self.makeServerStreamingCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamAccountsDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamAccountsDetailsInterceptors() ?? [],
      handler: handler
    )
  }

  /// Server streaming call to StreamSpendingMovements
  ///
  /// - Parameters:
  ///   - request: Request to send to StreamSpendingMovements.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func streamSpendingMovements(
    _ request: Metro_Loyalty_V1_StreamSpendingMovementsRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Metro_Loyalty_V1_StreamSpendingMovementsResponse) -> Void
  ) -> ServerStreamingCall<Metro_Loyalty_V1_StreamSpendingMovementsRequest, Metro_Loyalty_V1_StreamSpendingMovementsResponse> {
    return self.makeServerStreamingCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamSpendingMovements.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamSpendingMovementsInterceptors() ?? [],
      handler: handler
    )
  }
}

@available(*, deprecated)
extension Metro_Loyalty_V1_LoyaltyPublicClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Metro_Loyalty_V1_LoyaltyPublicNIOClient")
public final class Metro_Loyalty_V1_LoyaltyPublicClient: Metro_Loyalty_V1_LoyaltyPublicClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the metro.loyalty.v1.LoyaltyPublic service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Metro_Loyalty_V1_LoyaltyPublicNIOClient: Metro_Loyalty_V1_LoyaltyPublicClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol?

  /// Creates a client for the metro.loyalty.v1.LoyaltyPublic service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Metro_Loyalty_V1_LoyaltyPublicAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol? { get }

  func makeGetOverviewCall(
    _ request: Metro_Loyalty_V1_GetLoyaltyOverviewRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetLoyaltyOverviewRequest, Metro_Loyalty_V1_GetLoyaltyOverviewResponse>

  func makeGetPointExpirationsCall(
    _ request: Metro_Loyalty_V1_GetPointExpirationsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetPointExpirationsRequest, Metro_Loyalty_V1_GetPointExpirationsResponse>

  func makeGetPointMovementsPagedCall(
    _ request: Metro_Loyalty_V1_GetPointMovementsPagedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetPointMovementsPagedRequest, Metro_Loyalty_V1_GetPointMovementsPagedResponse>

  func makeGetRewardCall(
    _ request: Metro_Loyalty_V1_GetRewardRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetRewardRequest, Metro_Loyalty_V1_GetRewardResponse>

  func makeApplyRewardCouponCall(
    _ request: Metro_Loyalty_V1_ApplyRewardCouponRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_ApplyRewardCouponRequest, Metro_Loyalty_V1_ApplyRewardCouponResponse>

  func makeStreamAccountsDetailsCall(
    _ request: Metro_Loyalty_V1_StreamAccountsDetailsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Metro_Loyalty_V1_StreamAccountsDetailsRequest, Metro_Loyalty_V1_StreamAccountsDetailsResponse>

  func makeStreamSpendingMovementsCall(
    _ request: Metro_Loyalty_V1_StreamSpendingMovementsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Metro_Loyalty_V1_StreamSpendingMovementsRequest, Metro_Loyalty_V1_StreamSpendingMovementsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Loyalty_V1_LoyaltyPublicAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Metro_Loyalty_V1_LoyaltyPublicClientMetadata.serviceDescriptor
  }

  public var interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetOverviewCall(
    _ request: Metro_Loyalty_V1_GetLoyaltyOverviewRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetLoyaltyOverviewRequest, Metro_Loyalty_V1_GetLoyaltyOverviewResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOverviewInterceptors() ?? []
    )
  }

  public func makeGetPointExpirationsCall(
    _ request: Metro_Loyalty_V1_GetPointExpirationsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetPointExpirationsRequest, Metro_Loyalty_V1_GetPointExpirationsResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointExpirations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPointExpirationsInterceptors() ?? []
    )
  }

  public func makeGetPointMovementsPagedCall(
    _ request: Metro_Loyalty_V1_GetPointMovementsPagedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetPointMovementsPagedRequest, Metro_Loyalty_V1_GetPointMovementsPagedResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointMovementsPaged.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPointMovementsPagedInterceptors() ?? []
    )
  }

  public func makeGetRewardCall(
    _ request: Metro_Loyalty_V1_GetRewardRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_GetRewardRequest, Metro_Loyalty_V1_GetRewardResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRewardInterceptors() ?? []
    )
  }

  public func makeApplyRewardCouponCall(
    _ request: Metro_Loyalty_V1_ApplyRewardCouponRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Loyalty_V1_ApplyRewardCouponRequest, Metro_Loyalty_V1_ApplyRewardCouponResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.applyRewardCoupon.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeApplyRewardCouponInterceptors() ?? []
    )
  }

  public func makeStreamAccountsDetailsCall(
    _ request: Metro_Loyalty_V1_StreamAccountsDetailsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Metro_Loyalty_V1_StreamAccountsDetailsRequest, Metro_Loyalty_V1_StreamAccountsDetailsResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamAccountsDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamAccountsDetailsInterceptors() ?? []
    )
  }

  public func makeStreamSpendingMovementsCall(
    _ request: Metro_Loyalty_V1_StreamSpendingMovementsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Metro_Loyalty_V1_StreamSpendingMovementsRequest, Metro_Loyalty_V1_StreamSpendingMovementsResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamSpendingMovements.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamSpendingMovementsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Loyalty_V1_LoyaltyPublicAsyncClientProtocol {
  public func getOverview(
    _ request: Metro_Loyalty_V1_GetLoyaltyOverviewRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Loyalty_V1_GetLoyaltyOverviewResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOverviewInterceptors() ?? []
    )
  }

  public func getPointExpirations(
    _ request: Metro_Loyalty_V1_GetPointExpirationsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Loyalty_V1_GetPointExpirationsResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointExpirations.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPointExpirationsInterceptors() ?? []
    )
  }

  public func getPointMovementsPaged(
    _ request: Metro_Loyalty_V1_GetPointMovementsPagedRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Loyalty_V1_GetPointMovementsPagedResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointMovementsPaged.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPointMovementsPagedInterceptors() ?? []
    )
  }

  public func getReward(
    _ request: Metro_Loyalty_V1_GetRewardRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Loyalty_V1_GetRewardResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getReward.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRewardInterceptors() ?? []
    )
  }

  public func applyRewardCoupon(
    _ request: Metro_Loyalty_V1_ApplyRewardCouponRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Loyalty_V1_ApplyRewardCouponResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.applyRewardCoupon.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeApplyRewardCouponInterceptors() ?? []
    )
  }

  public func streamAccountsDetails(
    _ request: Metro_Loyalty_V1_StreamAccountsDetailsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Metro_Loyalty_V1_StreamAccountsDetailsResponse> {
    return self.performAsyncServerStreamingCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamAccountsDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamAccountsDetailsInterceptors() ?? []
    )
  }

  public func streamSpendingMovements(
    _ request: Metro_Loyalty_V1_StreamSpendingMovementsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Metro_Loyalty_V1_StreamSpendingMovementsResponse> {
    return self.performAsyncServerStreamingCall(
      path: Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamSpendingMovements.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamSpendingMovementsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Metro_Loyalty_V1_LoyaltyPublicAsyncClient: Metro_Loyalty_V1_LoyaltyPublicAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Metro_Loyalty_V1_LoyaltyPublicClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getOverview'.
  func makeGetOverviewInterceptors() -> [ClientInterceptor<Metro_Loyalty_V1_GetLoyaltyOverviewRequest, Metro_Loyalty_V1_GetLoyaltyOverviewResponse>]

  /// - Returns: Interceptors to use when invoking 'getPointExpirations'.
  func makeGetPointExpirationsInterceptors() -> [ClientInterceptor<Metro_Loyalty_V1_GetPointExpirationsRequest, Metro_Loyalty_V1_GetPointExpirationsResponse>]

  /// - Returns: Interceptors to use when invoking 'getPointMovementsPaged'.
  func makeGetPointMovementsPagedInterceptors() -> [ClientInterceptor<Metro_Loyalty_V1_GetPointMovementsPagedRequest, Metro_Loyalty_V1_GetPointMovementsPagedResponse>]

  /// - Returns: Interceptors to use when invoking 'getReward'.
  func makeGetRewardInterceptors() -> [ClientInterceptor<Metro_Loyalty_V1_GetRewardRequest, Metro_Loyalty_V1_GetRewardResponse>]

  /// - Returns: Interceptors to use when invoking 'applyRewardCoupon'.
  func makeApplyRewardCouponInterceptors() -> [ClientInterceptor<Metro_Loyalty_V1_ApplyRewardCouponRequest, Metro_Loyalty_V1_ApplyRewardCouponResponse>]

  /// - Returns: Interceptors to use when invoking 'streamAccountsDetails'.
  func makeStreamAccountsDetailsInterceptors() -> [ClientInterceptor<Metro_Loyalty_V1_StreamAccountsDetailsRequest, Metro_Loyalty_V1_StreamAccountsDetailsResponse>]

  /// - Returns: Interceptors to use when invoking 'streamSpendingMovements'.
  func makeStreamSpendingMovementsInterceptors() -> [ClientInterceptor<Metro_Loyalty_V1_StreamSpendingMovementsRequest, Metro_Loyalty_V1_StreamSpendingMovementsResponse>]
}

public enum Metro_Loyalty_V1_LoyaltyPublicClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "LoyaltyPublic",
    fullName: "metro.loyalty.v1.LoyaltyPublic",
    methods: [
      Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getOverview,
      Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointExpirations,
      Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getPointMovementsPaged,
      Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.getReward,
      Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.applyRewardCoupon,
      Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamAccountsDetails,
      Metro_Loyalty_V1_LoyaltyPublicClientMetadata.Methods.streamSpendingMovements,
    ]
  )

  public enum Methods {
    public static let getOverview = GRPCMethodDescriptor(
      name: "GetOverview",
      path: "/metro.loyalty.v1.LoyaltyPublic/GetOverview",
      type: GRPCCallType.unary
    )

    public static let getPointExpirations = GRPCMethodDescriptor(
      name: "GetPointExpirations",
      path: "/metro.loyalty.v1.LoyaltyPublic/GetPointExpirations",
      type: GRPCCallType.unary
    )

    public static let getPointMovementsPaged = GRPCMethodDescriptor(
      name: "GetPointMovementsPaged",
      path: "/metro.loyalty.v1.LoyaltyPublic/GetPointMovementsPaged",
      type: GRPCCallType.unary
    )

    public static let getReward = GRPCMethodDescriptor(
      name: "GetReward",
      path: "/metro.loyalty.v1.LoyaltyPublic/GetReward",
      type: GRPCCallType.unary
    )

    public static let applyRewardCoupon = GRPCMethodDescriptor(
      name: "ApplyRewardCoupon",
      path: "/metro.loyalty.v1.LoyaltyPublic/ApplyRewardCoupon",
      type: GRPCCallType.unary
    )

    public static let streamAccountsDetails = GRPCMethodDescriptor(
      name: "StreamAccountsDetails",
      path: "/metro.loyalty.v1.LoyaltyPublic/StreamAccountsDetails",
      type: GRPCCallType.serverStreaming
    )

    public static let streamSpendingMovements = GRPCMethodDescriptor(
      name: "StreamSpendingMovements",
      path: "/metro.loyalty.v1.LoyaltyPublic/StreamSpendingMovements",
      type: GRPCCallType.serverStreaming
    )
  }
}

