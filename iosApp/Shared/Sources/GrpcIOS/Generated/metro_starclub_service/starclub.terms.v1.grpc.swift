//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: metro_starclub_service/starclub.terms.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Metro_Starclub_V1_StarClubPolicyClient`, then call methods of this protocol to make API calls.
public protocol Metro_Starclub_V1_StarClubPolicyClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol? { get }

  func canManagePolicy(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Metro_Starclub_V1_CanManagePolicyResponse>

  func getUnapprovedPolicyFlag(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest, Metro_Starclub_V1_GetUnapprovedPolicyFlagResponse>

  func getUnapprovedPolicy(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyRequest, Metro_Starclub_V1_GetUnApprovedPolicyResponse>

  func approvePolicy(
    _ request: Metro_Starclub_V1_ApprovePolicyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Starclub_V1_ApprovePolicyRequest, Metro_Starclub_V1_ApprovePolicyResponse>
}

extension Metro_Starclub_V1_StarClubPolicyClientProtocol {
  public var serviceName: String {
    return "metro.starclub.v1.StarClubPolicy"
  }

  /// Can be used to determine if calling user can create registration.
  ///
  /// - Parameters:
  ///   - request: Request to send to CanManagePolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func canManagePolicy(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Metro_Starclub_V1_CanManagePolicyResponse> {
    return self.makeUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.canManagePolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanManagePolicyInterceptors() ?? []
    )
  }

  /// Rpc check if there are unapproved policy ... to save transfer of data from GetUnApprovedPolicy.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUnapprovedPolicyFlag.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUnapprovedPolicyFlag(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest, Metro_Starclub_V1_GetUnapprovedPolicyFlagResponse> {
    return self.makeUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicyFlag.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUnapprovedPolicyFlagInterceptors() ?? []
    )
  }

  /// Unary call to GetUnapprovedPolicy
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUnapprovedPolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUnapprovedPolicy(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyRequest, Metro_Starclub_V1_GetUnApprovedPolicyResponse> {
    return self.makeUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUnapprovedPolicyInterceptors() ?? []
    )
  }

  /// Unary call to ApprovePolicy
  ///
  /// - Parameters:
  ///   - request: Request to send to ApprovePolicy.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func approvePolicy(
    _ request: Metro_Starclub_V1_ApprovePolicyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Starclub_V1_ApprovePolicyRequest, Metro_Starclub_V1_ApprovePolicyResponse> {
    return self.makeUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.approvePolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeApprovePolicyInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Metro_Starclub_V1_StarClubPolicyClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Metro_Starclub_V1_StarClubPolicyNIOClient")
public final class Metro_Starclub_V1_StarClubPolicyClient: Metro_Starclub_V1_StarClubPolicyClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the metro.starclub.v1.StarClubPolicy service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Metro_Starclub_V1_StarClubPolicyNIOClient: Metro_Starclub_V1_StarClubPolicyClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol?

  /// Creates a client for the metro.starclub.v1.StarClubPolicy service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Metro_Starclub_V1_StarClubPolicyAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol? { get }

  func makeCanManagePolicyCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Metro_Starclub_V1_CanManagePolicyResponse>

  func makeGetUnapprovedPolicyFlagCall(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest, Metro_Starclub_V1_GetUnapprovedPolicyFlagResponse>

  func makeGetUnapprovedPolicyCall(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyRequest, Metro_Starclub_V1_GetUnApprovedPolicyResponse>

  func makeApprovePolicyCall(
    _ request: Metro_Starclub_V1_ApprovePolicyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Starclub_V1_ApprovePolicyRequest, Metro_Starclub_V1_ApprovePolicyResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Starclub_V1_StarClubPolicyAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Metro_Starclub_V1_StarClubPolicyClientMetadata.serviceDescriptor
  }

  public var interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeCanManagePolicyCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Metro_Starclub_V1_CanManagePolicyResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.canManagePolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanManagePolicyInterceptors() ?? []
    )
  }

  public func makeGetUnapprovedPolicyFlagCall(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest, Metro_Starclub_V1_GetUnapprovedPolicyFlagResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicyFlag.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUnapprovedPolicyFlagInterceptors() ?? []
    )
  }

  public func makeGetUnapprovedPolicyCall(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Starclub_V1_GetUnApprovedPolicyRequest, Metro_Starclub_V1_GetUnApprovedPolicyResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUnapprovedPolicyInterceptors() ?? []
    )
  }

  public func makeApprovePolicyCall(
    _ request: Metro_Starclub_V1_ApprovePolicyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Starclub_V1_ApprovePolicyRequest, Metro_Starclub_V1_ApprovePolicyResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.approvePolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeApprovePolicyInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Starclub_V1_StarClubPolicyAsyncClientProtocol {
  public func canManagePolicy(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Starclub_V1_CanManagePolicyResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.canManagePolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCanManagePolicyInterceptors() ?? []
    )
  }

  public func getUnapprovedPolicyFlag(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Starclub_V1_GetUnapprovedPolicyFlagResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicyFlag.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUnapprovedPolicyFlagInterceptors() ?? []
    )
  }

  public func getUnapprovedPolicy(
    _ request: Metro_Starclub_V1_GetUnApprovedPolicyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Starclub_V1_GetUnApprovedPolicyResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUnapprovedPolicyInterceptors() ?? []
    )
  }

  public func approvePolicy(
    _ request: Metro_Starclub_V1_ApprovePolicyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Starclub_V1_ApprovePolicyResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.approvePolicy.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeApprovePolicyInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Metro_Starclub_V1_StarClubPolicyAsyncClient: Metro_Starclub_V1_StarClubPolicyAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Metro_Starclub_V1_StarClubPolicyClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'canManagePolicy'.
  func makeCanManagePolicyInterceptors() -> [ClientInterceptor<Appelis_Identity_Common_V1_Token, Metro_Starclub_V1_CanManagePolicyResponse>]

  /// - Returns: Interceptors to use when invoking 'getUnapprovedPolicyFlag'.
  func makeGetUnapprovedPolicyFlagInterceptors() -> [ClientInterceptor<Metro_Starclub_V1_GetUnApprovedPolicyFlagRequest, Metro_Starclub_V1_GetUnapprovedPolicyFlagResponse>]

  /// - Returns: Interceptors to use when invoking 'getUnapprovedPolicy'.
  func makeGetUnapprovedPolicyInterceptors() -> [ClientInterceptor<Metro_Starclub_V1_GetUnApprovedPolicyRequest, Metro_Starclub_V1_GetUnApprovedPolicyResponse>]

  /// - Returns: Interceptors to use when invoking 'approvePolicy'.
  func makeApprovePolicyInterceptors() -> [ClientInterceptor<Metro_Starclub_V1_ApprovePolicyRequest, Metro_Starclub_V1_ApprovePolicyResponse>]
}

public enum Metro_Starclub_V1_StarClubPolicyClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "StarClubPolicy",
    fullName: "metro.starclub.v1.StarClubPolicy",
    methods: [
      Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.canManagePolicy,
      Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicyFlag,
      Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.getUnapprovedPolicy,
      Metro_Starclub_V1_StarClubPolicyClientMetadata.Methods.approvePolicy,
    ]
  )

  public enum Methods {
    public static let canManagePolicy = GRPCMethodDescriptor(
      name: "CanManagePolicy",
      path: "/metro.starclub.v1.StarClubPolicy/CanManagePolicy",
      type: GRPCCallType.unary
    )

    public static let getUnapprovedPolicyFlag = GRPCMethodDescriptor(
      name: "GetUnapprovedPolicyFlag",
      path: "/metro.starclub.v1.StarClubPolicy/GetUnapprovedPolicyFlag",
      type: GRPCCallType.unary
    )

    public static let getUnapprovedPolicy = GRPCMethodDescriptor(
      name: "GetUnapprovedPolicy",
      path: "/metro.starclub.v1.StarClubPolicy/GetUnapprovedPolicy",
      type: GRPCCallType.unary
    )

    public static let approvePolicy = GRPCMethodDescriptor(
      name: "ApprovePolicy",
      path: "/metro.starclub.v1.StarClubPolicy/ApprovePolicy",
      type: GRPCCallType.unary
    )
  }
}

