//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: metro_registration_metadata/blockcodes.private.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Metro_Blockcodes_V1_BlockCodesServiceClient`, then call methods of this protocol to make API calls.
public protocol Metro_Blockcodes_V1_BlockCodesServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol? { get }

  func getCardholderBlockCodes(
    _ request: Metro_Blockcodes_V1_GetCardholderBlockCodesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Blockcodes_V1_GetCardholderBlockCodesRequest, Metro_Blockcodes_V1_GetCardholderBlockCodesResponse>
}

extension Metro_Blockcodes_V1_BlockCodesServiceClientProtocol {
  public var serviceName: String {
    return "metro.blockcodes.v1.BlockCodesService"
  }

  /// Unary call to GetCardholderBlockCodes
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCardholderBlockCodes.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCardholderBlockCodes(
    _ request: Metro_Blockcodes_V1_GetCardholderBlockCodesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Blockcodes_V1_GetCardholderBlockCodesRequest, Metro_Blockcodes_V1_GetCardholderBlockCodesResponse> {
    return self.makeUnaryCall(
      path: Metro_Blockcodes_V1_BlockCodesServiceClientMetadata.Methods.getCardholderBlockCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCardholderBlockCodesInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Metro_Blockcodes_V1_BlockCodesServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Metro_Blockcodes_V1_BlockCodesServiceNIOClient")
public final class Metro_Blockcodes_V1_BlockCodesServiceClient: Metro_Blockcodes_V1_BlockCodesServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the metro.blockcodes.v1.BlockCodesService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Metro_Blockcodes_V1_BlockCodesServiceNIOClient: Metro_Blockcodes_V1_BlockCodesServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the metro.blockcodes.v1.BlockCodesService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Metro_Blockcodes_V1_BlockCodesServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol? { get }

  func makeGetCardholderBlockCodesCall(
    _ request: Metro_Blockcodes_V1_GetCardholderBlockCodesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Blockcodes_V1_GetCardholderBlockCodesRequest, Metro_Blockcodes_V1_GetCardholderBlockCodesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Blockcodes_V1_BlockCodesServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Metro_Blockcodes_V1_BlockCodesServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetCardholderBlockCodesCall(
    _ request: Metro_Blockcodes_V1_GetCardholderBlockCodesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Blockcodes_V1_GetCardholderBlockCodesRequest, Metro_Blockcodes_V1_GetCardholderBlockCodesResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Blockcodes_V1_BlockCodesServiceClientMetadata.Methods.getCardholderBlockCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCardholderBlockCodesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Blockcodes_V1_BlockCodesServiceAsyncClientProtocol {
  public func getCardholderBlockCodes(
    _ request: Metro_Blockcodes_V1_GetCardholderBlockCodesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Blockcodes_V1_GetCardholderBlockCodesResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Blockcodes_V1_BlockCodesServiceClientMetadata.Methods.getCardholderBlockCodes.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCardholderBlockCodesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Metro_Blockcodes_V1_BlockCodesServiceAsyncClient: Metro_Blockcodes_V1_BlockCodesServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Metro_Blockcodes_V1_BlockCodesServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getCardholderBlockCodes'.
  func makeGetCardholderBlockCodesInterceptors() -> [ClientInterceptor<Metro_Blockcodes_V1_GetCardholderBlockCodesRequest, Metro_Blockcodes_V1_GetCardholderBlockCodesResponse>]
}

public enum Metro_Blockcodes_V1_BlockCodesServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "BlockCodesService",
    fullName: "metro.blockcodes.v1.BlockCodesService",
    methods: [
      Metro_Blockcodes_V1_BlockCodesServiceClientMetadata.Methods.getCardholderBlockCodes,
    ]
  )

  public enum Methods {
    public static let getCardholderBlockCodes = GRPCMethodDescriptor(
      name: "GetCardholderBlockCodes",
      path: "/metro.blockcodes.v1.BlockCodesService/GetCardholderBlockCodes",
      type: GRPCCallType.unary
    )
  }
}

