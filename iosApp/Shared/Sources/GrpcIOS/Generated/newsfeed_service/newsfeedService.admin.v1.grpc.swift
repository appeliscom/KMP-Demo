//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: newsfeed_service/newsfeedService.admin.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Newsfeed_V1_AdminClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Newsfeed_V1_AdminClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol? { get }

  func getNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_GetNewsFeedItemsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Newsfeed_V1_GetNewsFeedItemsRequest, Appelis_Newsfeed_V1_GetNewsFeedItemsResponse>

  func setNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_SetNewsFeedItemsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Newsfeed_V1_SetNewsFeedItemsRequest, Appelis_Newsfeed_V1_SetNewsFeedItemsResponse>

  func deleteNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest, Appelis_Newsfeed_V1_DeleteNewsFeedItemsResponse>
}

extension Appelis_Newsfeed_V1_AdminClientProtocol {
  public var serviceName: String {
    return "appelis.newsfeed.v1.Admin"
  }

  /// Unary call to GetNewsFeedItems
  ///
  /// - Parameters:
  ///   - request: Request to send to GetNewsFeedItems.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_GetNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Newsfeed_V1_GetNewsFeedItemsRequest, Appelis_Newsfeed_V1_GetNewsFeedItemsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.getNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsFeedItemsInterceptors() ?? []
    )
  }

  /// Unary call to SetNewsFeedItems
  ///
  /// - Parameters:
  ///   - request: Request to send to SetNewsFeedItems.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_SetNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Newsfeed_V1_SetNewsFeedItemsRequest, Appelis_Newsfeed_V1_SetNewsFeedItemsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.setNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNewsFeedItemsInterceptors() ?? []
    )
  }

  /// Unary call to DeleteNewsFeedItems
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteNewsFeedItems.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest, Appelis_Newsfeed_V1_DeleteNewsFeedItemsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.deleteNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNewsFeedItemsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Newsfeed_V1_AdminClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Newsfeed_V1_AdminNIOClient")
public final class Appelis_Newsfeed_V1_AdminClient: Appelis_Newsfeed_V1_AdminClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.newsfeed.v1.Admin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Newsfeed_V1_AdminNIOClient: Appelis_Newsfeed_V1_AdminClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.newsfeed.v1.Admin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Newsfeed_V1_AdminAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol? { get }

  func makeGetNewsFeedItemsCall(
    _ request: Appelis_Newsfeed_V1_GetNewsFeedItemsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Newsfeed_V1_GetNewsFeedItemsRequest, Appelis_Newsfeed_V1_GetNewsFeedItemsResponse>

  func makeSetNewsFeedItemsCall(
    _ request: Appelis_Newsfeed_V1_SetNewsFeedItemsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Newsfeed_V1_SetNewsFeedItemsRequest, Appelis_Newsfeed_V1_SetNewsFeedItemsResponse>

  func makeDeleteNewsFeedItemsCall(
    _ request: Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest, Appelis_Newsfeed_V1_DeleteNewsFeedItemsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Newsfeed_V1_AdminAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Newsfeed_V1_AdminClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetNewsFeedItemsCall(
    _ request: Appelis_Newsfeed_V1_GetNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Newsfeed_V1_GetNewsFeedItemsRequest, Appelis_Newsfeed_V1_GetNewsFeedItemsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.getNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsFeedItemsInterceptors() ?? []
    )
  }

  public func makeSetNewsFeedItemsCall(
    _ request: Appelis_Newsfeed_V1_SetNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Newsfeed_V1_SetNewsFeedItemsRequest, Appelis_Newsfeed_V1_SetNewsFeedItemsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.setNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNewsFeedItemsInterceptors() ?? []
    )
  }

  public func makeDeleteNewsFeedItemsCall(
    _ request: Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest, Appelis_Newsfeed_V1_DeleteNewsFeedItemsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.deleteNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNewsFeedItemsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Newsfeed_V1_AdminAsyncClientProtocol {
  public func getNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_GetNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Newsfeed_V1_GetNewsFeedItemsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.getNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetNewsFeedItemsInterceptors() ?? []
    )
  }

  public func setNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_SetNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Newsfeed_V1_SetNewsFeedItemsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.setNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetNewsFeedItemsInterceptors() ?? []
    )
  }

  public func deleteNewsFeedItems(
    _ request: Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Newsfeed_V1_DeleteNewsFeedItemsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Newsfeed_V1_AdminClientMetadata.Methods.deleteNewsFeedItems.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteNewsFeedItemsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Newsfeed_V1_AdminAsyncClient: Appelis_Newsfeed_V1_AdminAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Newsfeed_V1_AdminClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getNewsFeedItems'.
  func makeGetNewsFeedItemsInterceptors() -> [ClientInterceptor<Appelis_Newsfeed_V1_GetNewsFeedItemsRequest, Appelis_Newsfeed_V1_GetNewsFeedItemsResponse>]

  /// - Returns: Interceptors to use when invoking 'setNewsFeedItems'.
  func makeSetNewsFeedItemsInterceptors() -> [ClientInterceptor<Appelis_Newsfeed_V1_SetNewsFeedItemsRequest, Appelis_Newsfeed_V1_SetNewsFeedItemsResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteNewsFeedItems'.
  func makeDeleteNewsFeedItemsInterceptors() -> [ClientInterceptor<Appelis_Newsfeed_V1_DeleteNewsFeedItemsRequest, Appelis_Newsfeed_V1_DeleteNewsFeedItemsResponse>]
}

public enum Appelis_Newsfeed_V1_AdminClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Admin",
    fullName: "appelis.newsfeed.v1.Admin",
    methods: [
      Appelis_Newsfeed_V1_AdminClientMetadata.Methods.getNewsFeedItems,
      Appelis_Newsfeed_V1_AdminClientMetadata.Methods.setNewsFeedItems,
      Appelis_Newsfeed_V1_AdminClientMetadata.Methods.deleteNewsFeedItems,
    ]
  )

  public enum Methods {
    public static let getNewsFeedItems = GRPCMethodDescriptor(
      name: "GetNewsFeedItems",
      path: "/appelis.newsfeed.v1.Admin/GetNewsFeedItems",
      type: GRPCCallType.unary
    )

    public static let setNewsFeedItems = GRPCMethodDescriptor(
      name: "SetNewsFeedItems",
      path: "/appelis.newsfeed.v1.Admin/SetNewsFeedItems",
      type: GRPCCallType.unary
    )

    public static let deleteNewsFeedItems = GRPCMethodDescriptor(
      name: "DeleteNewsFeedItems",
      path: "/appelis.newsfeed.v1.Admin/DeleteNewsFeedItems",
      type: GRPCCallType.unary
    )
  }
}

