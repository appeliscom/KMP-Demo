//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: user_service/userService.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_UserService_Users_V1_MobileUsersPrivateAdminClient`, then call methods of this protocol to make API calls.
public protocol Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol? { get }

  func companyUsers(
    _ request: Appelis_UserService_Users_V1_CompanyUsersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_CompanyUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func companiesUsers(
    _ request: Appelis_UserService_Users_V1_CompaniesUsersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_CompaniesUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func getUser(
    _ request: Appelis_UserService_Users_V1_IdRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_IdRequest, Appelis_UserService_Users_V1_GetUserResponse>

  func getUsers(
    _ request: Appelis_UserService_Users_V1_IdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_IdsRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func getUsersByEmail(
    _ request: Appelis_UserService_Users_V1_GetUsersByEmailRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_GetUsersByEmailRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func setUsers(
    _ request: Appelis_UserService_Users_V1_SetUsersPrivateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_SetUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func deleteUsers(
    _ request: Appelis_UserService_Users_V1_DeleteUsersPrivateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_DeleteUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func getUsersByMobileNumber(
    _ request: Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest, Appelis_UserService_Users_V1_MobileUsersArray>
}

extension Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientProtocol {
  public var serviceName: String {
    return "appelis.userService.users.v1.MobileUsersPrivateAdmin"
  }

  /// List users by idCompany from database...
  ///
  /// - Parameters:
  ///   - request: Request to send to CompanyUsers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func companyUsers(
    _ request: Appelis_UserService_Users_V1_CompanyUsersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_CompanyUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companyUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompanyUsersInterceptors() ?? []
    )
  }

  /// List users by array of idCompany from database.
  ///
  /// - Parameters:
  ///   - request: Request to send to CompaniesUsers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func companiesUsers(
    _ request: Appelis_UserService_Users_V1_CompaniesUsersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_CompaniesUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companiesUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompaniesUsersInterceptors() ?? []
    )
  }

  /// Get user by idUser from database...
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUser.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUser(
    _ request: Appelis_UserService_Users_V1_IdRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_IdRequest, Appelis_UserService_Users_V1_GetUserResponse> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserInterceptors() ?? []
    )
  }

  /// Get more users by ids from database...
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUsers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUsers(
    _ request: Appelis_UserService_Users_V1_IdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_IdsRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersInterceptors() ?? []
    )
  }

  /// Get users by email aj project from database...
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUsersByEmail.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUsersByEmail(
    _ request: Appelis_UserService_Users_V1_GetUsersByEmailRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_GetUsersByEmailRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByEmail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersByEmailInterceptors() ?? []
    )
  }

  /// Creates users for selected project. If ids will be provided users will be also updated.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetUsers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setUsers(
    _ request: Appelis_UserService_Users_V1_SetUsersPrivateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_SetUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.setUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetUsersInterceptors() ?? []
    )
  }

  /// Delete users by ids.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUsers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteUsers(
    _ request: Appelis_UserService_Users_V1_DeleteUsersPrivateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_DeleteUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.deleteUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUsersInterceptors() ?? []
    )
  }

  /// Unary call to GetUsersByMobileNumber
  ///
  /// - Parameters:
  ///   - request: Request to send to GetUsersByMobileNumber.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getUsersByMobileNumber(
    _ request: Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByMobileNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersByMobileNumberInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_UserService_Users_V1_MobileUsersPrivateAdminClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_UserService_Users_V1_MobileUsersPrivateAdminNIOClient")
public final class Appelis_UserService_Users_V1_MobileUsersPrivateAdminClient: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.userService.users.v1.MobileUsersPrivateAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_UserService_Users_V1_MobileUsersPrivateAdminNIOClient: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.userService.users.v1.MobileUsersPrivateAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_UserService_Users_V1_MobileUsersPrivateAdminAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol? { get }

  func makeCompanyUsersCall(
    _ request: Appelis_UserService_Users_V1_CompanyUsersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_CompanyUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func makeCompaniesUsersCall(
    _ request: Appelis_UserService_Users_V1_CompaniesUsersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_CompaniesUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func makeGetUserCall(
    _ request: Appelis_UserService_Users_V1_IdRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_IdRequest, Appelis_UserService_Users_V1_GetUserResponse>

  func makeGetUsersCall(
    _ request: Appelis_UserService_Users_V1_IdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_IdsRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func makeGetUsersByEmailCall(
    _ request: Appelis_UserService_Users_V1_GetUsersByEmailRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_GetUsersByEmailRequest, Appelis_UserService_Users_V1_MobileUsersArray>

  func makeSetUsersCall(
    _ request: Appelis_UserService_Users_V1_SetUsersPrivateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_SetUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeDeleteUsersCall(
    _ request: Appelis_UserService_Users_V1_DeleteUsersPrivateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_DeleteUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty>

  func makeGetUsersByMobileNumberCall(
    _ request: Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest, Appelis_UserService_Users_V1_MobileUsersArray>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_UserService_Users_V1_MobileUsersPrivateAdminAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeCompanyUsersCall(
    _ request: Appelis_UserService_Users_V1_CompanyUsersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_CompanyUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companyUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompanyUsersInterceptors() ?? []
    )
  }

  public func makeCompaniesUsersCall(
    _ request: Appelis_UserService_Users_V1_CompaniesUsersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_CompaniesUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companiesUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompaniesUsersInterceptors() ?? []
    )
  }

  public func makeGetUserCall(
    _ request: Appelis_UserService_Users_V1_IdRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_IdRequest, Appelis_UserService_Users_V1_GetUserResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserInterceptors() ?? []
    )
  }

  public func makeGetUsersCall(
    _ request: Appelis_UserService_Users_V1_IdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_IdsRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersInterceptors() ?? []
    )
  }

  public func makeGetUsersByEmailCall(
    _ request: Appelis_UserService_Users_V1_GetUsersByEmailRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_GetUsersByEmailRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByEmail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersByEmailInterceptors() ?? []
    )
  }

  public func makeSetUsersCall(
    _ request: Appelis_UserService_Users_V1_SetUsersPrivateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_SetUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.setUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetUsersInterceptors() ?? []
    )
  }

  public func makeDeleteUsersCall(
    _ request: Appelis_UserService_Users_V1_DeleteUsersPrivateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_DeleteUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.deleteUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUsersInterceptors() ?? []
    )
  }

  public func makeGetUsersByMobileNumberCall(
    _ request: Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest, Appelis_UserService_Users_V1_MobileUsersArray> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByMobileNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersByMobileNumberInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_UserService_Users_V1_MobileUsersPrivateAdminAsyncClientProtocol {
  public func companyUsers(
    _ request: Appelis_UserService_Users_V1_CompanyUsersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Users_V1_MobileUsersArray {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companyUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompanyUsersInterceptors() ?? []
    )
  }

  public func companiesUsers(
    _ request: Appelis_UserService_Users_V1_CompaniesUsersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Users_V1_MobileUsersArray {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companiesUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCompaniesUsersInterceptors() ?? []
    )
  }

  public func getUser(
    _ request: Appelis_UserService_Users_V1_IdRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Users_V1_GetUserResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUser.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUserInterceptors() ?? []
    )
  }

  public func getUsers(
    _ request: Appelis_UserService_Users_V1_IdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Users_V1_MobileUsersArray {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersInterceptors() ?? []
    )
  }

  public func getUsersByEmail(
    _ request: Appelis_UserService_Users_V1_GetUsersByEmailRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Users_V1_MobileUsersArray {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByEmail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersByEmailInterceptors() ?? []
    )
  }

  public func setUsers(
    _ request: Appelis_UserService_Users_V1_SetUsersPrivateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.setUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetUsersInterceptors() ?? []
    )
  }

  public func deleteUsers(
    _ request: Appelis_UserService_Users_V1_DeleteUsersPrivateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.deleteUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUsersInterceptors() ?? []
    )
  }

  public func getUsersByMobileNumber(
    _ request: Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Users_V1_MobileUsersArray {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByMobileNumber.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetUsersByMobileNumberInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_UserService_Users_V1_MobileUsersPrivateAdminAsyncClient: Appelis_UserService_Users_V1_MobileUsersPrivateAdminAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'companyUsers'.
  func makeCompanyUsersInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_CompanyUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray>]

  /// - Returns: Interceptors to use when invoking 'companiesUsers'.
  func makeCompaniesUsersInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_CompaniesUsersRequest, Appelis_UserService_Users_V1_MobileUsersArray>]

  /// - Returns: Interceptors to use when invoking 'getUser'.
  func makeGetUserInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_IdRequest, Appelis_UserService_Users_V1_GetUserResponse>]

  /// - Returns: Interceptors to use when invoking 'getUsers'.
  func makeGetUsersInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_IdsRequest, Appelis_UserService_Users_V1_MobileUsersArray>]

  /// - Returns: Interceptors to use when invoking 'getUsersByEmail'.
  func makeGetUsersByEmailInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_GetUsersByEmailRequest, Appelis_UserService_Users_V1_MobileUsersArray>]

  /// - Returns: Interceptors to use when invoking 'setUsers'.
  func makeSetUsersInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_SetUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'deleteUsers'.
  func makeDeleteUsersInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_DeleteUsersPrivateRequest, SwiftProtobuf.Google_Protobuf_Empty>]

  /// - Returns: Interceptors to use when invoking 'getUsersByMobileNumber'.
  func makeGetUsersByMobileNumberInterceptors() -> [ClientInterceptor<Appelis_UserService_Users_V1_GetUsersByMobileNumberRequest, Appelis_UserService_Users_V1_MobileUsersArray>]
}

public enum Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MobileUsersPrivateAdmin",
    fullName: "appelis.userService.users.v1.MobileUsersPrivateAdmin",
    methods: [
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companyUsers,
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.companiesUsers,
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUser,
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsers,
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByEmail,
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.setUsers,
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.deleteUsers,
      Appelis_UserService_Users_V1_MobileUsersPrivateAdminClientMetadata.Methods.getUsersByMobileNumber,
    ]
  )

  public enum Methods {
    public static let companyUsers = GRPCMethodDescriptor(
      name: "CompanyUsers",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/CompanyUsers",
      type: GRPCCallType.unary
    )

    public static let companiesUsers = GRPCMethodDescriptor(
      name: "CompaniesUsers",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/CompaniesUsers",
      type: GRPCCallType.unary
    )

    public static let getUser = GRPCMethodDescriptor(
      name: "GetUser",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/GetUser",
      type: GRPCCallType.unary
    )

    public static let getUsers = GRPCMethodDescriptor(
      name: "GetUsers",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/GetUsers",
      type: GRPCCallType.unary
    )

    public static let getUsersByEmail = GRPCMethodDescriptor(
      name: "GetUsersByEmail",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/GetUsersByEmail",
      type: GRPCCallType.unary
    )

    public static let setUsers = GRPCMethodDescriptor(
      name: "SetUsers",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/SetUsers",
      type: GRPCCallType.unary
    )

    public static let deleteUsers = GRPCMethodDescriptor(
      name: "DeleteUsers",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/DeleteUsers",
      type: GRPCCallType.unary
    )

    public static let getUsersByMobileNumber = GRPCMethodDescriptor(
      name: "GetUsersByMobileNumber",
      path: "/appelis.userService.users.v1.MobileUsersPrivateAdmin/GetUsersByMobileNumber",
      type: GRPCCallType.unary
    )
  }
}

