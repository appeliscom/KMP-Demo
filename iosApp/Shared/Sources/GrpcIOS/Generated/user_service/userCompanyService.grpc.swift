//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: user_service/userCompanyService.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_UserService_Companies_V1_CompanyPrivateAdminClient`, then call methods of this protocol to make API calls.
public protocol Appelis_UserService_Companies_V1_CompanyPrivateAdminClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol? { get }

  func byExternal(
    _ request: Appelis_UserService_Companies_V1_ByExternalRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Companies_V1_ByExternalRequest, Appelis_UserService_Companies_V1_ByExternalResponse>

  func getCompany(
    _ request: Appelis_UserService_Companies_V1_GetCompanyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompanyRequest, Appelis_UserService_Companies_V1_GetCompanyResponse>

  func getCompanies(
    _ request: Appelis_UserService_Companies_V1_GetCompaniesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompaniesRequest, Appelis_UserService_Companies_V1_GetCompaniesResponse>

  func getCompanySegmentsByMobileUserIds(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsResponse>

  func getCompanySegmentsMapByMobileUserIds(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsResponse>
}

extension Appelis_UserService_Companies_V1_CompanyPrivateAdminClientProtocol {
  public var serviceName: String {
    return "appelis.userService.companies.v1.CompanyPrivateAdmin"
  }

  /// List Company by external identifiers.
  ///
  /// - Parameters:
  ///   - request: Request to send to ByExternal.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func byExternal(
    _ request: Appelis_UserService_Companies_V1_ByExternalRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Companies_V1_ByExternalRequest, Appelis_UserService_Companies_V1_ByExternalResponse> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.byExternal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByExternalInterceptors() ?? []
    )
  }

  /// Get Company by id
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCompany.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCompany(
    _ request: Appelis_UserService_Companies_V1_GetCompanyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompanyRequest, Appelis_UserService_Companies_V1_GetCompanyResponse> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompany.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanyInterceptors() ?? []
    )
  }

  /// Get Companies by ids
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCompanies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCompanies(
    _ request: Appelis_UserService_Companies_V1_GetCompaniesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompaniesRequest, Appelis_UserService_Companies_V1_GetCompaniesResponse> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanies.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompaniesInterceptors() ?? []
    )
  }

  /// Get segment (SCO/HORECA/TRADERS) of idMobileUser
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCompanySegmentsByMobileUserIds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCompanySegmentsByMobileUserIds(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsResponse> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsByMobileUserIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanySegmentsByMobileUserIdsInterceptors() ?? []
    )
  }

  /// Get map of segment counts (SCO/HORECA/TRADERS) of idMobileUsers
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCompanySegmentsMapByMobileUserIds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getCompanySegmentsMapByMobileUserIds(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsResponse> {
    return self.makeUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsMapByMobileUserIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanySegmentsMapByMobileUserIdsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_UserService_Companies_V1_CompanyPrivateAdminClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_UserService_Companies_V1_CompanyPrivateAdminNIOClient")
public final class Appelis_UserService_Companies_V1_CompanyPrivateAdminClient: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.userService.companies.v1.CompanyPrivateAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_UserService_Companies_V1_CompanyPrivateAdminNIOClient: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.userService.companies.v1.CompanyPrivateAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_UserService_Companies_V1_CompanyPrivateAdminAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol? { get }

  func makeByExternalCall(
    _ request: Appelis_UserService_Companies_V1_ByExternalRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_ByExternalRequest, Appelis_UserService_Companies_V1_ByExternalResponse>

  func makeGetCompanyCall(
    _ request: Appelis_UserService_Companies_V1_GetCompanyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompanyRequest, Appelis_UserService_Companies_V1_GetCompanyResponse>

  func makeGetCompaniesCall(
    _ request: Appelis_UserService_Companies_V1_GetCompaniesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompaniesRequest, Appelis_UserService_Companies_V1_GetCompaniesResponse>

  func makeGetCompanySegmentsByMobileUserIdsCall(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsResponse>

  func makeGetCompanySegmentsMapByMobileUserIdsCall(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_UserService_Companies_V1_CompanyPrivateAdminAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeByExternalCall(
    _ request: Appelis_UserService_Companies_V1_ByExternalRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_ByExternalRequest, Appelis_UserService_Companies_V1_ByExternalResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.byExternal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByExternalInterceptors() ?? []
    )
  }

  public func makeGetCompanyCall(
    _ request: Appelis_UserService_Companies_V1_GetCompanyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompanyRequest, Appelis_UserService_Companies_V1_GetCompanyResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompany.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanyInterceptors() ?? []
    )
  }

  public func makeGetCompaniesCall(
    _ request: Appelis_UserService_Companies_V1_GetCompaniesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompaniesRequest, Appelis_UserService_Companies_V1_GetCompaniesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanies.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompaniesInterceptors() ?? []
    )
  }

  public func makeGetCompanySegmentsByMobileUserIdsCall(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsByMobileUserIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanySegmentsByMobileUserIdsInterceptors() ?? []
    )
  }

  public func makeGetCompanySegmentsMapByMobileUserIdsCall(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsMapByMobileUserIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanySegmentsMapByMobileUserIdsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_UserService_Companies_V1_CompanyPrivateAdminAsyncClientProtocol {
  public func byExternal(
    _ request: Appelis_UserService_Companies_V1_ByExternalRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Companies_V1_ByExternalResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.byExternal.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByExternalInterceptors() ?? []
    )
  }

  public func getCompany(
    _ request: Appelis_UserService_Companies_V1_GetCompanyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Companies_V1_GetCompanyResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompany.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanyInterceptors() ?? []
    )
  }

  public func getCompanies(
    _ request: Appelis_UserService_Companies_V1_GetCompaniesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Companies_V1_GetCompaniesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanies.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompaniesInterceptors() ?? []
    )
  }

  public func getCompanySegmentsByMobileUserIds(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsByMobileUserIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanySegmentsByMobileUserIdsInterceptors() ?? []
    )
  }

  public func getCompanySegmentsMapByMobileUserIds(
    _ request: Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsMapByMobileUserIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCompanySegmentsMapByMobileUserIdsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_UserService_Companies_V1_CompanyPrivateAdminAsyncClient: Appelis_UserService_Companies_V1_CompanyPrivateAdminAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_UserService_Companies_V1_CompanyPrivateAdminClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'byExternal'.
  func makeByExternalInterceptors() -> [ClientInterceptor<Appelis_UserService_Companies_V1_ByExternalRequest, Appelis_UserService_Companies_V1_ByExternalResponse>]

  /// - Returns: Interceptors to use when invoking 'getCompany'.
  func makeGetCompanyInterceptors() -> [ClientInterceptor<Appelis_UserService_Companies_V1_GetCompanyRequest, Appelis_UserService_Companies_V1_GetCompanyResponse>]

  /// - Returns: Interceptors to use when invoking 'getCompanies'.
  func makeGetCompaniesInterceptors() -> [ClientInterceptor<Appelis_UserService_Companies_V1_GetCompaniesRequest, Appelis_UserService_Companies_V1_GetCompaniesResponse>]

  /// - Returns: Interceptors to use when invoking 'getCompanySegmentsByMobileUserIds'.
  func makeGetCompanySegmentsByMobileUserIdsInterceptors() -> [ClientInterceptor<Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsByMobileUserIdsResponse>]

  /// - Returns: Interceptors to use when invoking 'getCompanySegmentsMapByMobileUserIds'.
  func makeGetCompanySegmentsMapByMobileUserIdsInterceptors() -> [ClientInterceptor<Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsRequest, Appelis_UserService_Companies_V1_GetCompanySegmentsMapByMobileUserIdsResponse>]
}

public enum Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "CompanyPrivateAdmin",
    fullName: "appelis.userService.companies.v1.CompanyPrivateAdmin",
    methods: [
      Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.byExternal,
      Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompany,
      Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanies,
      Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsByMobileUserIds,
      Appelis_UserService_Companies_V1_CompanyPrivateAdminClientMetadata.Methods.getCompanySegmentsMapByMobileUserIds,
    ]
  )

  public enum Methods {
    public static let byExternal = GRPCMethodDescriptor(
      name: "ByExternal",
      path: "/appelis.userService.companies.v1.CompanyPrivateAdmin/ByExternal",
      type: GRPCCallType.unary
    )

    public static let getCompany = GRPCMethodDescriptor(
      name: "GetCompany",
      path: "/appelis.userService.companies.v1.CompanyPrivateAdmin/GetCompany",
      type: GRPCCallType.unary
    )

    public static let getCompanies = GRPCMethodDescriptor(
      name: "GetCompanies",
      path: "/appelis.userService.companies.v1.CompanyPrivateAdmin/GetCompanies",
      type: GRPCCallType.unary
    )

    public static let getCompanySegmentsByMobileUserIds = GRPCMethodDescriptor(
      name: "GetCompanySegmentsByMobileUserIds",
      path: "/appelis.userService.companies.v1.CompanyPrivateAdmin/GetCompanySegmentsByMobileUserIds",
      type: GRPCCallType.unary
    )

    public static let getCompanySegmentsMapByMobileUserIds = GRPCMethodDescriptor(
      name: "GetCompanySegmentsMapByMobileUserIds",
      path: "/appelis.userService.companies.v1.CompanyPrivateAdmin/GetCompanySegmentsMapByMobileUserIds",
      type: GRPCCallType.unary
    )
  }
}

