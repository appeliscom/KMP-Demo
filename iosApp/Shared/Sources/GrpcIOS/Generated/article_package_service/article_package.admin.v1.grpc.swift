//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: article_package_service/article_package.admin.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClient`, then call methods of this protocol to make API calls.
public protocol Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol? { get }

  func getPackages(
    _ request: Appelis_ArticlePackage_Admin_V1_GetPackagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_GetPackagesRequest, Appelis_ArticlePackage_Admin_V1_GetPackagesResponse>

  func setPackages(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>

  func deletePackages(
    _ request: Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>

  func getArticlePackages(
    _ request: Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest, Appelis_ArticlePackage_Admin_V1_GetArticlePackagesResponse>

  func setPackagesToArticles(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>
}

extension Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientProtocol {
  public var serviceName: String {
    return "appelis.article_package.admin.v1.ArticlePackageAdminService"
  }

  /// Gets all packages for current project.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPackages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPackages(
    _ request: Appelis_ArticlePackage_Admin_V1_GetPackagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_GetPackagesRequest, Appelis_ArticlePackage_Admin_V1_GetPackagesResponse> {
    return self.makeUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPackagesInterceptors() ?? []
    )
  }

  /// Create and update array of packages for project.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetPackages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setPackages(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse> {
    return self.makeUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPackagesInterceptors() ?? []
    )
  }

  /// Delete packages by ids.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePackages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deletePackages(
    _ request: Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse> {
    return self.makeUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.deletePackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePackagesInterceptors() ?? []
    )
  }

  /// Get all packages for one article identified by article id.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticlePackages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticlePackages(
    _ request: Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest, Appelis_ArticlePackage_Admin_V1_GetArticlePackagesResponse> {
    return self.makeUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getArticlePackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlePackagesInterceptors() ?? []
    )
  }

  /// Set packages to articles in map <article,[package ids]>. Deletes all previous and sets a new ones.
  ///
  /// - Parameters:
  ///   - request: Request to send to SetPackagesToArticles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setPackagesToArticles(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse> {
    return self.makeUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackagesToArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPackagesToArticlesInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceNIOClient")
public final class Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClient: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.article_package.admin.v1.ArticlePackageAdminService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceNIOClient: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.article_package.admin.v1.ArticlePackageAdminService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol? { get }

  func makeGetPackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_GetPackagesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_GetPackagesRequest, Appelis_ArticlePackage_Admin_V1_GetPackagesResponse>

  func makeSetPackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>

  func makeDeletePackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>

  func makeGetArticlePackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest, Appelis_ArticlePackage_Admin_V1_GetArticlePackagesResponse>

  func makeSetPackagesToArticlesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetPackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_GetPackagesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_GetPackagesRequest, Appelis_ArticlePackage_Admin_V1_GetPackagesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPackagesInterceptors() ?? []
    )
  }

  public func makeSetPackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPackagesInterceptors() ?? []
    )
  }

  public func makeDeletePackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.deletePackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePackagesInterceptors() ?? []
    )
  }

  public func makeGetArticlePackagesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest, Appelis_ArticlePackage_Admin_V1_GetArticlePackagesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getArticlePackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlePackagesInterceptors() ?? []
    )
  }

  public func makeSetPackagesToArticlesCall(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackagesToArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPackagesToArticlesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceAsyncClientProtocol {
  public func getPackages(
    _ request: Appelis_ArticlePackage_Admin_V1_GetPackagesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_ArticlePackage_Admin_V1_GetPackagesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPackagesInterceptors() ?? []
    )
  }

  public func setPackages(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_ArticlePackage_Admin_V1_ErrorResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPackagesInterceptors() ?? []
    )
  }

  public func deletePackages(
    _ request: Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_ArticlePackage_Admin_V1_ErrorResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.deletePackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePackagesInterceptors() ?? []
    )
  }

  public func getArticlePackages(
    _ request: Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_ArticlePackage_Admin_V1_GetArticlePackagesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getArticlePackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlePackagesInterceptors() ?? []
    )
  }

  public func setPackagesToArticles(
    _ request: Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_ArticlePackage_Admin_V1_ErrorResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackagesToArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetPackagesToArticlesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceAsyncClient: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getPackages'.
  func makeGetPackagesInterceptors() -> [ClientInterceptor<Appelis_ArticlePackage_Admin_V1_GetPackagesRequest, Appelis_ArticlePackage_Admin_V1_GetPackagesResponse>]

  /// - Returns: Interceptors to use when invoking 'setPackages'.
  func makeSetPackagesInterceptors() -> [ClientInterceptor<Appelis_ArticlePackage_Admin_V1_SetPackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>]

  /// - Returns: Interceptors to use when invoking 'deletePackages'.
  func makeDeletePackagesInterceptors() -> [ClientInterceptor<Appelis_ArticlePackage_Admin_V1_DeletePackagesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticlePackages'.
  func makeGetArticlePackagesInterceptors() -> [ClientInterceptor<Appelis_ArticlePackage_Admin_V1_GetArticlePackagesRequest, Appelis_ArticlePackage_Admin_V1_GetArticlePackagesResponse>]

  /// - Returns: Interceptors to use when invoking 'setPackagesToArticles'.
  func makeSetPackagesToArticlesInterceptors() -> [ClientInterceptor<Appelis_ArticlePackage_Admin_V1_SetPackagesToArticlesRequest, Appelis_ArticlePackage_Admin_V1_ErrorResponse>]
}

public enum Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "ArticlePackageAdminService",
    fullName: "appelis.article_package.admin.v1.ArticlePackageAdminService",
    methods: [
      Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getPackages,
      Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackages,
      Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.deletePackages,
      Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.getArticlePackages,
      Appelis_ArticlePackage_Admin_V1_ArticlePackageAdminServiceClientMetadata.Methods.setPackagesToArticles,
    ]
  )

  public enum Methods {
    public static let getPackages = GRPCMethodDescriptor(
      name: "GetPackages",
      path: "/appelis.article_package.admin.v1.ArticlePackageAdminService/GetPackages",
      type: GRPCCallType.unary
    )

    public static let setPackages = GRPCMethodDescriptor(
      name: "SetPackages",
      path: "/appelis.article_package.admin.v1.ArticlePackageAdminService/SetPackages",
      type: GRPCCallType.unary
    )

    public static let deletePackages = GRPCMethodDescriptor(
      name: "DeletePackages",
      path: "/appelis.article_package.admin.v1.ArticlePackageAdminService/DeletePackages",
      type: GRPCCallType.unary
    )

    public static let getArticlePackages = GRPCMethodDescriptor(
      name: "GetArticlePackages",
      path: "/appelis.article_package.admin.v1.ArticlePackageAdminService/GetArticlePackages",
      type: GRPCCallType.unary
    )

    public static let setPackagesToArticles = GRPCMethodDescriptor(
      name: "SetPackagesToArticles",
      path: "/appelis.article_package.admin.v1.ArticlePackageAdminService/SetPackagesToArticles",
      type: GRPCCallType.unary
    )
  }
}

