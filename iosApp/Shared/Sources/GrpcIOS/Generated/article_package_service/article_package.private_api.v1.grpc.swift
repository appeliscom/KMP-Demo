//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: article_package_service/article_package.private_api.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClient`, then call methods of this protocol to make API calls.
public protocol Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol? { get }

  func getArticlesPackages(
    _ request: Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest, Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesResponse>
}

extension Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientProtocol {
  public var serviceName: String {
    return "appelis.article_package.private_api.v1.ArticlePackagePrivateService"
  }

  /// Get package map <articleId,[packages]> for article ids on defined project.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticlesPackages.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticlesPackages(
    _ request: Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest, Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesResponse> {
    return self.makeUnaryCall(
      path: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientMetadata.Methods.getArticlesPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesPackagesInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceNIOClient")
public final class Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClient: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.article_package.private_api.v1.ArticlePackagePrivateService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceNIOClient: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.article_package.private_api.v1.ArticlePackagePrivateService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol? { get }

  func makeGetArticlesPackagesCall(
    _ request: Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest, Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetArticlesPackagesCall(
    _ request: Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest, Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientMetadata.Methods.getArticlesPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesPackagesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceAsyncClientProtocol {
  public func getArticlesPackages(
    _ request: Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientMetadata.Methods.getArticlesPackages.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesPackagesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceAsyncClient: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getArticlesPackages'.
  func makeGetArticlesPackagesInterceptors() -> [ClientInterceptor<Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesRequest, Appelis_ArticlePackage_PrivateApi_V1_GetArticlesPackagesResponse>]
}

public enum Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "ArticlePackagePrivateService",
    fullName: "appelis.article_package.private_api.v1.ArticlePackagePrivateService",
    methods: [
      Appelis_ArticlePackage_PrivateApi_V1_ArticlePackagePrivateServiceClientMetadata.Methods.getArticlesPackages,
    ]
  )

  public enum Methods {
    public static let getArticlesPackages = GRPCMethodDescriptor(
      name: "GetArticlesPackages",
      path: "/appelis.article_package.private_api.v1.ArticlePackagePrivateService/GetArticlesPackages",
      type: GRPCCallType.unary
    )
  }
}

