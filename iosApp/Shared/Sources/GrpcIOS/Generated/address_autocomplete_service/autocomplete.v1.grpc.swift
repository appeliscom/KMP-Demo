//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: address_autocomplete_service/autocomplete.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Address_Autocomplete_V1_AddressAutocompleteClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Address_Autocomplete_V1_AddressAutocompleteClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol? { get }

  func addressAutocomplete(
    callOptions: CallOptions?,
    handler: @escaping (Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse) -> Void
  ) -> BidirectionalStreamingCall<Appelis_Address_Autocomplete_V1_AddressAutoCompleteRequest, Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse>

  func placeDetails(
    _ request: Appelis_Address_Autocomplete_V1_PlaceDetailsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Address_Autocomplete_V1_PlaceDetailsRequest, Appelis_Address_Autocomplete_V1_PlaceDetailsResponse>
}

extension Appelis_Address_Autocomplete_V1_AddressAutocompleteClientProtocol {
  public var serviceName: String {
    return "appelis.address.autocomplete.v1.AddressAutocomplete"
  }

  /// Token (from first data in stream) will be used to check AutoComplete session.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata and status.
  public func addressAutocomplete(
    callOptions: CallOptions? = nil,
    handler: @escaping (Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse) -> Void
  ) -> BidirectionalStreamingCall<Appelis_Address_Autocomplete_V1_AddressAutoCompleteRequest, Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse> {
    return self.makeBidirectionalStreamingCall(
      path: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.addressAutocomplete.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddressAutocompleteInterceptors() ?? [],
      handler: handler
    )
  }

  /// Returns place details, if place exists in external api.
  ///
  /// - Parameters:
  ///   - request: Request to send to PlaceDetails.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func placeDetails(
    _ request: Appelis_Address_Autocomplete_V1_PlaceDetailsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Address_Autocomplete_V1_PlaceDetailsRequest, Appelis_Address_Autocomplete_V1_PlaceDetailsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.placeDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePlaceDetailsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Address_Autocomplete_V1_AddressAutocompleteClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Address_Autocomplete_V1_AddressAutocompleteNIOClient")
public final class Appelis_Address_Autocomplete_V1_AddressAutocompleteClient: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.address.autocomplete.v1.AddressAutocomplete service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Address_Autocomplete_V1_AddressAutocompleteNIOClient: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.address.autocomplete.v1.AddressAutocomplete service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Address_Autocomplete_V1_AddressAutocompleteAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol? { get }

  func makeAddressAutocompleteCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncBidirectionalStreamingCall<Appelis_Address_Autocomplete_V1_AddressAutoCompleteRequest, Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse>

  func makePlaceDetailsCall(
    _ request: Appelis_Address_Autocomplete_V1_PlaceDetailsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Address_Autocomplete_V1_PlaceDetailsRequest, Appelis_Address_Autocomplete_V1_PlaceDetailsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Address_Autocomplete_V1_AddressAutocompleteAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeAddressAutocompleteCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncBidirectionalStreamingCall<Appelis_Address_Autocomplete_V1_AddressAutoCompleteRequest, Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse> {
    return self.makeAsyncBidirectionalStreamingCall(
      path: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.addressAutocomplete.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddressAutocompleteInterceptors() ?? []
    )
  }

  public func makePlaceDetailsCall(
    _ request: Appelis_Address_Autocomplete_V1_PlaceDetailsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Address_Autocomplete_V1_PlaceDetailsRequest, Appelis_Address_Autocomplete_V1_PlaceDetailsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.placeDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePlaceDetailsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Address_Autocomplete_V1_AddressAutocompleteAsyncClientProtocol {
  public func addressAutocomplete<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse> where RequestStream: Sequence, RequestStream.Element == Appelis_Address_Autocomplete_V1_AddressAutoCompleteRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.addressAutocomplete.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddressAutocompleteInterceptors() ?? []
    )
  }

  public func addressAutocomplete<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse> where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Appelis_Address_Autocomplete_V1_AddressAutoCompleteRequest {
    return self.performAsyncBidirectionalStreamingCall(
      path: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.addressAutocomplete.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddressAutocompleteInterceptors() ?? []
    )
  }

  public func placeDetails(
    _ request: Appelis_Address_Autocomplete_V1_PlaceDetailsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Address_Autocomplete_V1_PlaceDetailsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.placeDetails.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePlaceDetailsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Address_Autocomplete_V1_AddressAutocompleteAsyncClient: Appelis_Address_Autocomplete_V1_AddressAutocompleteAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Address_Autocomplete_V1_AddressAutocompleteClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'addressAutocomplete'.
  func makeAddressAutocompleteInterceptors() -> [ClientInterceptor<Appelis_Address_Autocomplete_V1_AddressAutoCompleteRequest, Appelis_Address_Autocomplete_V1_AddressAutoCompleteResponse>]

  /// - Returns: Interceptors to use when invoking 'placeDetails'.
  func makePlaceDetailsInterceptors() -> [ClientInterceptor<Appelis_Address_Autocomplete_V1_PlaceDetailsRequest, Appelis_Address_Autocomplete_V1_PlaceDetailsResponse>]
}

public enum Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "AddressAutocomplete",
    fullName: "appelis.address.autocomplete.v1.AddressAutocomplete",
    methods: [
      Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.addressAutocomplete,
      Appelis_Address_Autocomplete_V1_AddressAutocompleteClientMetadata.Methods.placeDetails,
    ]
  )

  public enum Methods {
    public static let addressAutocomplete = GRPCMethodDescriptor(
      name: "AddressAutocomplete",
      path: "/appelis.address.autocomplete.v1.AddressAutocomplete/AddressAutocomplete",
      type: GRPCCallType.bidirectionalStreaming
    )

    public static let placeDetails = GRPCMethodDescriptor(
      name: "PlaceDetails",
      path: "/appelis.address.autocomplete.v1.AddressAutocomplete/PlaceDetails",
      type: GRPCCallType.unary
    )
  }
}

