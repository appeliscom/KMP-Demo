//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: metro_autosuggest/autosuggestService.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Used by mobile devices to get assortment and category auto suggest.
///
/// Usage: instantiate `Metro_Autosuggest_V1_SearchClient`, then call methods of this protocol to make API calls.
public protocol Metro_Autosuggest_V1_SearchClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol? { get }

  func autoSuggest(
    _ request: Metro_Autosuggest_V1_AutoSuggestRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Autosuggest_V1_AutoSuggestRequest, Metro_Autosuggest_V1_AutoSuggestResponse>

  func addSearchKeyword(
    _ request: Metro_Autosuggest_V1_AddSearchKeywordRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Autosuggest_V1_AddSearchKeywordRequest, Metro_Autosuggest_V1_AddSearchKeywordResponse>
}

extension Metro_Autosuggest_V1_SearchClientProtocol {
  public var serviceName: String {
    return "metro.autosuggest.v1.Search"
  }

  ///  Call returns suggested results according to sent keyword.
  ///
  /// - Parameters:
  ///   - request: Request to send to AutoSuggest.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func autoSuggest(
    _ request: Metro_Autosuggest_V1_AutoSuggestRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Autosuggest_V1_AutoSuggestRequest, Metro_Autosuggest_V1_AutoSuggestResponse> {
    return self.makeUnaryCall(
      path: Metro_Autosuggest_V1_SearchClientMetadata.Methods.autoSuggest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAutoSuggestInterceptors() ?? []
    )
  }

  ///  After user search. Keyword should be sent using this rpc call to populate collection with searching words.
  ///
  /// - Parameters:
  ///   - request: Request to send to AddSearchKeyword.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func addSearchKeyword(
    _ request: Metro_Autosuggest_V1_AddSearchKeywordRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Autosuggest_V1_AddSearchKeywordRequest, Metro_Autosuggest_V1_AddSearchKeywordResponse> {
    return self.makeUnaryCall(
      path: Metro_Autosuggest_V1_SearchClientMetadata.Methods.addSearchKeyword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSearchKeywordInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Metro_Autosuggest_V1_SearchClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Metro_Autosuggest_V1_SearchNIOClient")
public final class Metro_Autosuggest_V1_SearchClient: Metro_Autosuggest_V1_SearchClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the metro.autosuggest.v1.Search service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Metro_Autosuggest_V1_SearchNIOClient: Metro_Autosuggest_V1_SearchClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol?

  /// Creates a client for the metro.autosuggest.v1.Search service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Used by mobile devices to get assortment and category auto suggest.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Metro_Autosuggest_V1_SearchAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol? { get }

  func makeAutoSuggestCall(
    _ request: Metro_Autosuggest_V1_AutoSuggestRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Autosuggest_V1_AutoSuggestRequest, Metro_Autosuggest_V1_AutoSuggestResponse>

  func makeAddSearchKeywordCall(
    _ request: Metro_Autosuggest_V1_AddSearchKeywordRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Autosuggest_V1_AddSearchKeywordRequest, Metro_Autosuggest_V1_AddSearchKeywordResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Autosuggest_V1_SearchAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Metro_Autosuggest_V1_SearchClientMetadata.serviceDescriptor
  }

  public var interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeAutoSuggestCall(
    _ request: Metro_Autosuggest_V1_AutoSuggestRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Autosuggest_V1_AutoSuggestRequest, Metro_Autosuggest_V1_AutoSuggestResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Autosuggest_V1_SearchClientMetadata.Methods.autoSuggest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAutoSuggestInterceptors() ?? []
    )
  }

  public func makeAddSearchKeywordCall(
    _ request: Metro_Autosuggest_V1_AddSearchKeywordRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Autosuggest_V1_AddSearchKeywordRequest, Metro_Autosuggest_V1_AddSearchKeywordResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Autosuggest_V1_SearchClientMetadata.Methods.addSearchKeyword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSearchKeywordInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Autosuggest_V1_SearchAsyncClientProtocol {
  public func autoSuggest(
    _ request: Metro_Autosuggest_V1_AutoSuggestRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Autosuggest_V1_AutoSuggestResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Autosuggest_V1_SearchClientMetadata.Methods.autoSuggest.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAutoSuggestInterceptors() ?? []
    )
  }

  public func addSearchKeyword(
    _ request: Metro_Autosuggest_V1_AddSearchKeywordRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Autosuggest_V1_AddSearchKeywordResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Autosuggest_V1_SearchClientMetadata.Methods.addSearchKeyword.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddSearchKeywordInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Metro_Autosuggest_V1_SearchAsyncClient: Metro_Autosuggest_V1_SearchAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Metro_Autosuggest_V1_SearchClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'autoSuggest'.
  func makeAutoSuggestInterceptors() -> [ClientInterceptor<Metro_Autosuggest_V1_AutoSuggestRequest, Metro_Autosuggest_V1_AutoSuggestResponse>]

  /// - Returns: Interceptors to use when invoking 'addSearchKeyword'.
  func makeAddSearchKeywordInterceptors() -> [ClientInterceptor<Metro_Autosuggest_V1_AddSearchKeywordRequest, Metro_Autosuggest_V1_AddSearchKeywordResponse>]
}

public enum Metro_Autosuggest_V1_SearchClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Search",
    fullName: "metro.autosuggest.v1.Search",
    methods: [
      Metro_Autosuggest_V1_SearchClientMetadata.Methods.autoSuggest,
      Metro_Autosuggest_V1_SearchClientMetadata.Methods.addSearchKeyword,
    ]
  )

  public enum Methods {
    public static let autoSuggest = GRPCMethodDescriptor(
      name: "AutoSuggest",
      path: "/metro.autosuggest.v1.Search/AutoSuggest",
      type: GRPCCallType.unary
    )

    public static let addSearchKeyword = GRPCMethodDescriptor(
      name: "AddSearchKeyword",
      path: "/metro.autosuggest.v1.Search/AddSearchKeyword",
      type: GRPCCallType.unary
    )
  }
}

