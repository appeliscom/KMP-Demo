//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: user_favourites/userFavourites.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Favourites_V1_UserFavouritesClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Favourites_V1_UserFavouritesClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol? { get }

  func getPagedFavourites(
    _ request: Appelis_Favourites_V1_GetPagedFavouritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Favourites_V1_GetPagedFavouritesRequest, Appelis_Favourites_V1_GetPagedFavouritesResponse>

  func getSelectedFavourites(
    _ request: Appelis_Favourites_V1_GetSelectedFavouritesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Favourites_V1_GetSelectedFavouritesRequest, Appelis_Favourites_V1_GetSelectedFavouritesResponse>

  func removeFavourite(
    _ request: Appelis_Favourites_V1_RemoveFavouriteRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Favourites_V1_RemoveFavouriteRequest, Appelis_Favourites_V1_RemoveFavouriteResponse>

  func setFavourite(
    _ request: Appelis_Favourites_V1_SetFavouriteRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Favourites_V1_SetFavouriteRequest, Appelis_Favourites_V1_SetFavouriteResponse>

  func favouriteChanges(
    _ request: Appelis_Favourites_V1_FavouriteChangesRequest,
    callOptions: CallOptions?,
    handler: @escaping (Appelis_Favourites_V1_FavouriteChangesResponse) -> Void
  ) -> ServerStreamingCall<Appelis_Favourites_V1_FavouriteChangesRequest, Appelis_Favourites_V1_FavouriteChangesResponse>
}

extension Appelis_Favourites_V1_UserFavouritesClientProtocol {
  public var serviceName: String {
    return "appelis.favourites.v1.UserFavourites"
  }

  /// Unary call to GetPagedFavourites
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPagedFavourites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getPagedFavourites(
    _ request: Appelis_Favourites_V1_GetPagedFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Favourites_V1_GetPagedFavouritesRequest, Appelis_Favourites_V1_GetPagedFavouritesResponse> {
    return self.makeUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getPagedFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPagedFavouritesInterceptors() ?? []
    )
  }

  /// Unary call to GetSelectedFavourites
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSelectedFavourites.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSelectedFavourites(
    _ request: Appelis_Favourites_V1_GetSelectedFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Favourites_V1_GetSelectedFavouritesRequest, Appelis_Favourites_V1_GetSelectedFavouritesResponse> {
    return self.makeUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getSelectedFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSelectedFavouritesInterceptors() ?? []
    )
  }

  /// Unary call to RemoveFavourite
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveFavourite.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func removeFavourite(
    _ request: Appelis_Favourites_V1_RemoveFavouriteRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Favourites_V1_RemoveFavouriteRequest, Appelis_Favourites_V1_RemoveFavouriteResponse> {
    return self.makeUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.removeFavourite.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFavouriteInterceptors() ?? []
    )
  }

  /// Unary call to SetFavourite
  ///
  /// - Parameters:
  ///   - request: Request to send to SetFavourite.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setFavourite(
    _ request: Appelis_Favourites_V1_SetFavouriteRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Favourites_V1_SetFavouriteRequest, Appelis_Favourites_V1_SetFavouriteResponse> {
    return self.makeUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.setFavourite.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetFavouriteInterceptors() ?? []
    )
  }

  /// Server streaming call to FavouriteChanges
  ///
  /// - Parameters:
  ///   - request: Request to send to FavouriteChanges.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func favouriteChanges(
    _ request: Appelis_Favourites_V1_FavouriteChangesRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Appelis_Favourites_V1_FavouriteChangesResponse) -> Void
  ) -> ServerStreamingCall<Appelis_Favourites_V1_FavouriteChangesRequest, Appelis_Favourites_V1_FavouriteChangesResponse> {
    return self.makeServerStreamingCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.favouriteChanges.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFavouriteChangesInterceptors() ?? [],
      handler: handler
    )
  }
}

@available(*, deprecated)
extension Appelis_Favourites_V1_UserFavouritesClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Favourites_V1_UserFavouritesNIOClient")
public final class Appelis_Favourites_V1_UserFavouritesClient: Appelis_Favourites_V1_UserFavouritesClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.favourites.v1.UserFavourites service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Favourites_V1_UserFavouritesNIOClient: Appelis_Favourites_V1_UserFavouritesClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.favourites.v1.UserFavourites service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Favourites_V1_UserFavouritesAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol? { get }

  func makeGetPagedFavouritesCall(
    _ request: Appelis_Favourites_V1_GetPagedFavouritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_GetPagedFavouritesRequest, Appelis_Favourites_V1_GetPagedFavouritesResponse>

  func makeGetSelectedFavouritesCall(
    _ request: Appelis_Favourites_V1_GetSelectedFavouritesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_GetSelectedFavouritesRequest, Appelis_Favourites_V1_GetSelectedFavouritesResponse>

  func makeRemoveFavouriteCall(
    _ request: Appelis_Favourites_V1_RemoveFavouriteRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_RemoveFavouriteRequest, Appelis_Favourites_V1_RemoveFavouriteResponse>

  func makeSetFavouriteCall(
    _ request: Appelis_Favourites_V1_SetFavouriteRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_SetFavouriteRequest, Appelis_Favourites_V1_SetFavouriteResponse>

  func makeFavouriteChangesCall(
    _ request: Appelis_Favourites_V1_FavouriteChangesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Appelis_Favourites_V1_FavouriteChangesRequest, Appelis_Favourites_V1_FavouriteChangesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Favourites_V1_UserFavouritesAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Favourites_V1_UserFavouritesClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetPagedFavouritesCall(
    _ request: Appelis_Favourites_V1_GetPagedFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_GetPagedFavouritesRequest, Appelis_Favourites_V1_GetPagedFavouritesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getPagedFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPagedFavouritesInterceptors() ?? []
    )
  }

  public func makeGetSelectedFavouritesCall(
    _ request: Appelis_Favourites_V1_GetSelectedFavouritesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_GetSelectedFavouritesRequest, Appelis_Favourites_V1_GetSelectedFavouritesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getSelectedFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSelectedFavouritesInterceptors() ?? []
    )
  }

  public func makeRemoveFavouriteCall(
    _ request: Appelis_Favourites_V1_RemoveFavouriteRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_RemoveFavouriteRequest, Appelis_Favourites_V1_RemoveFavouriteResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.removeFavourite.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFavouriteInterceptors() ?? []
    )
  }

  public func makeSetFavouriteCall(
    _ request: Appelis_Favourites_V1_SetFavouriteRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Favourites_V1_SetFavouriteRequest, Appelis_Favourites_V1_SetFavouriteResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.setFavourite.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetFavouriteInterceptors() ?? []
    )
  }

  public func makeFavouriteChangesCall(
    _ request: Appelis_Favourites_V1_FavouriteChangesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Appelis_Favourites_V1_FavouriteChangesRequest, Appelis_Favourites_V1_FavouriteChangesResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.favouriteChanges.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFavouriteChangesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Favourites_V1_UserFavouritesAsyncClientProtocol {
  public func getPagedFavourites(
    _ request: Appelis_Favourites_V1_GetPagedFavouritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Favourites_V1_GetPagedFavouritesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getPagedFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPagedFavouritesInterceptors() ?? []
    )
  }

  public func getSelectedFavourites(
    _ request: Appelis_Favourites_V1_GetSelectedFavouritesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Favourites_V1_GetSelectedFavouritesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getSelectedFavourites.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSelectedFavouritesInterceptors() ?? []
    )
  }

  public func removeFavourite(
    _ request: Appelis_Favourites_V1_RemoveFavouriteRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Favourites_V1_RemoveFavouriteResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.removeFavourite.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFavouriteInterceptors() ?? []
    )
  }

  public func setFavourite(
    _ request: Appelis_Favourites_V1_SetFavouriteRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Favourites_V1_SetFavouriteResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.setFavourite.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetFavouriteInterceptors() ?? []
    )
  }

  public func favouriteChanges(
    _ request: Appelis_Favourites_V1_FavouriteChangesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Appelis_Favourites_V1_FavouriteChangesResponse> {
    return self.performAsyncServerStreamingCall(
      path: Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.favouriteChanges.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFavouriteChangesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Favourites_V1_UserFavouritesAsyncClient: Appelis_Favourites_V1_UserFavouritesAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Favourites_V1_UserFavouritesClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getPagedFavourites'.
  func makeGetPagedFavouritesInterceptors() -> [ClientInterceptor<Appelis_Favourites_V1_GetPagedFavouritesRequest, Appelis_Favourites_V1_GetPagedFavouritesResponse>]

  /// - Returns: Interceptors to use when invoking 'getSelectedFavourites'.
  func makeGetSelectedFavouritesInterceptors() -> [ClientInterceptor<Appelis_Favourites_V1_GetSelectedFavouritesRequest, Appelis_Favourites_V1_GetSelectedFavouritesResponse>]

  /// - Returns: Interceptors to use when invoking 'removeFavourite'.
  func makeRemoveFavouriteInterceptors() -> [ClientInterceptor<Appelis_Favourites_V1_RemoveFavouriteRequest, Appelis_Favourites_V1_RemoveFavouriteResponse>]

  /// - Returns: Interceptors to use when invoking 'setFavourite'.
  func makeSetFavouriteInterceptors() -> [ClientInterceptor<Appelis_Favourites_V1_SetFavouriteRequest, Appelis_Favourites_V1_SetFavouriteResponse>]

  /// - Returns: Interceptors to use when invoking 'favouriteChanges'.
  func makeFavouriteChangesInterceptors() -> [ClientInterceptor<Appelis_Favourites_V1_FavouriteChangesRequest, Appelis_Favourites_V1_FavouriteChangesResponse>]
}

public enum Appelis_Favourites_V1_UserFavouritesClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "UserFavourites",
    fullName: "appelis.favourites.v1.UserFavourites",
    methods: [
      Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getPagedFavourites,
      Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.getSelectedFavourites,
      Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.removeFavourite,
      Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.setFavourite,
      Appelis_Favourites_V1_UserFavouritesClientMetadata.Methods.favouriteChanges,
    ]
  )

  public enum Methods {
    public static let getPagedFavourites = GRPCMethodDescriptor(
      name: "GetPagedFavourites",
      path: "/appelis.favourites.v1.UserFavourites/GetPagedFavourites",
      type: GRPCCallType.unary
    )

    public static let getSelectedFavourites = GRPCMethodDescriptor(
      name: "GetSelectedFavourites",
      path: "/appelis.favourites.v1.UserFavourites/GetSelectedFavourites",
      type: GRPCCallType.unary
    )

    public static let removeFavourite = GRPCMethodDescriptor(
      name: "RemoveFavourite",
      path: "/appelis.favourites.v1.UserFavourites/RemoveFavourite",
      type: GRPCCallType.unary
    )

    public static let setFavourite = GRPCMethodDescriptor(
      name: "SetFavourite",
      path: "/appelis.favourites.v1.UserFavourites/SetFavourite",
      type: GRPCCallType.unary
    )

    public static let favouriteChanges = GRPCMethodDescriptor(
      name: "FavouriteChanges",
      path: "/appelis.favourites.v1.UserFavourites/FavouriteChanges",
      type: GRPCCallType.serverStreaming
    )
  }
}

