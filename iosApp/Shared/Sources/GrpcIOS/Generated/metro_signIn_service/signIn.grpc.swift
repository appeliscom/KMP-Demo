//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: metro_signIn_service/signIn.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Metro_SignIn_V1_CardUpdaterClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Metro_SignIn_V1_CardUpdaterClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol? { get }

  func updateUsersCards(
    _ request: Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest, Appelis_Metro_SignIn_V1_UpdateUsersCardsResponse>
}

extension Appelis_Metro_SignIn_V1_CardUpdaterClientProtocol {
  public var serviceName: String {
    return "appelis.metro.signIn.v1.CardUpdater"
  }

  /// Unary call to UpdateUsersCards
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateUsersCards.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateUsersCards(
    _ request: Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest, Appelis_Metro_SignIn_V1_UpdateUsersCardsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Metro_SignIn_V1_CardUpdaterClientMetadata.Methods.updateUsersCards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUsersCardsInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Metro_SignIn_V1_CardUpdaterClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Metro_SignIn_V1_CardUpdaterNIOClient")
public final class Appelis_Metro_SignIn_V1_CardUpdaterClient: Appelis_Metro_SignIn_V1_CardUpdaterClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.metro.signIn.v1.CardUpdater service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Metro_SignIn_V1_CardUpdaterNIOClient: Appelis_Metro_SignIn_V1_CardUpdaterClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.metro.signIn.v1.CardUpdater service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Metro_SignIn_V1_CardUpdaterAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol? { get }

  func makeUpdateUsersCardsCall(
    _ request: Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest, Appelis_Metro_SignIn_V1_UpdateUsersCardsResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_CardUpdaterAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Metro_SignIn_V1_CardUpdaterClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeUpdateUsersCardsCall(
    _ request: Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest, Appelis_Metro_SignIn_V1_UpdateUsersCardsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_CardUpdaterClientMetadata.Methods.updateUsersCards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUsersCardsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_CardUpdaterAsyncClientProtocol {
  public func updateUsersCards(
    _ request: Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Metro_SignIn_V1_UpdateUsersCardsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_CardUpdaterClientMetadata.Methods.updateUsersCards.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateUsersCardsInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Metro_SignIn_V1_CardUpdaterAsyncClient: Appelis_Metro_SignIn_V1_CardUpdaterAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Metro_SignIn_V1_CardUpdaterClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'updateUsersCards'.
  func makeUpdateUsersCardsInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_UpdateUsersCardsRequest, Appelis_Metro_SignIn_V1_UpdateUsersCardsResponse>]
}

public enum Appelis_Metro_SignIn_V1_CardUpdaterClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "CardUpdater",
    fullName: "appelis.metro.signIn.v1.CardUpdater",
    methods: [
      Appelis_Metro_SignIn_V1_CardUpdaterClientMetadata.Methods.updateUsersCards,
    ]
  )

  public enum Methods {
    public static let updateUsersCards = GRPCMethodDescriptor(
      name: "UpdateUsersCards",
      path: "/appelis.metro.signIn.v1.CardUpdater/UpdateUsersCards",
      type: GRPCCallType.unary
    )
  }
}

/// Usage: instantiate `Appelis_Metro_SignIn_V1_ExportClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Metro_SignIn_V1_ExportClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol? { get }

  func exportLogin(
    _ request: Appelis_Metro_SignIn_V1_AipToken,
    callOptions: CallOptions?,
    handler: @escaping (Appelis_Metro_SignIn_V1_ExportLoginResponse) -> Void
  ) -> ServerStreamingCall<Appelis_Metro_SignIn_V1_AipToken, Appelis_Metro_SignIn_V1_ExportLoginResponse>
}

extension Appelis_Metro_SignIn_V1_ExportClientProtocol {
  public var serviceName: String {
    return "appelis.metro.signIn.v1.Export"
  }

  /// Server streaming call to ExportLogin
  ///
  /// - Parameters:
  ///   - request: Request to send to ExportLogin.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func exportLogin(
    _ request: Appelis_Metro_SignIn_V1_AipToken,
    callOptions: CallOptions? = nil,
    handler: @escaping (Appelis_Metro_SignIn_V1_ExportLoginResponse) -> Void
  ) -> ServerStreamingCall<Appelis_Metro_SignIn_V1_AipToken, Appelis_Metro_SignIn_V1_ExportLoginResponse> {
    return self.makeServerStreamingCall(
      path: Appelis_Metro_SignIn_V1_ExportClientMetadata.Methods.exportLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportLoginInterceptors() ?? [],
      handler: handler
    )
  }
}

@available(*, deprecated)
extension Appelis_Metro_SignIn_V1_ExportClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Metro_SignIn_V1_ExportNIOClient")
public final class Appelis_Metro_SignIn_V1_ExportClient: Appelis_Metro_SignIn_V1_ExportClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.metro.signIn.v1.Export service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Metro_SignIn_V1_ExportNIOClient: Appelis_Metro_SignIn_V1_ExportClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.metro.signIn.v1.Export service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Metro_SignIn_V1_ExportAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol? { get }

  func makeExportLoginCall(
    _ request: Appelis_Metro_SignIn_V1_AipToken,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Appelis_Metro_SignIn_V1_AipToken, Appelis_Metro_SignIn_V1_ExportLoginResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_ExportAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Metro_SignIn_V1_ExportClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeExportLoginCall(
    _ request: Appelis_Metro_SignIn_V1_AipToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Appelis_Metro_SignIn_V1_AipToken, Appelis_Metro_SignIn_V1_ExportLoginResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Appelis_Metro_SignIn_V1_ExportClientMetadata.Methods.exportLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportLoginInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_ExportAsyncClientProtocol {
  public func exportLogin(
    _ request: Appelis_Metro_SignIn_V1_AipToken,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Appelis_Metro_SignIn_V1_ExportLoginResponse> {
    return self.performAsyncServerStreamingCall(
      path: Appelis_Metro_SignIn_V1_ExportClientMetadata.Methods.exportLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeExportLoginInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Metro_SignIn_V1_ExportAsyncClient: Appelis_Metro_SignIn_V1_ExportAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Metro_SignIn_V1_ExportClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'exportLogin'.
  func makeExportLoginInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_AipToken, Appelis_Metro_SignIn_V1_ExportLoginResponse>]
}

public enum Appelis_Metro_SignIn_V1_ExportClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Export",
    fullName: "appelis.metro.signIn.v1.Export",
    methods: [
      Appelis_Metro_SignIn_V1_ExportClientMetadata.Methods.exportLogin,
    ]
  )

  public enum Methods {
    public static let exportLogin = GRPCMethodDescriptor(
      name: "ExportLogin",
      path: "/appelis.metro.signIn.v1.Export/ExportLogin",
      type: GRPCCallType.serverStreaming
    )
  }
}

/// Usage: instantiate `Appelis_Metro_SignIn_V1_VerificationClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Metro_SignIn_V1_VerificationClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol? { get }

  func emailVerify(
    _ request: Appelis_Metro_SignIn_V1_EmailVerifyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_EmailVerifyRequest, Appelis_Metro_SignIn_V1_EmailVerifyResponse>

  func phoneVerify(
    _ request: Appelis_Metro_SignIn_V1_PhoneVerifyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_PhoneVerifyRequest, Appelis_Metro_SignIn_V1_PhoneVerifyResponse>
}

extension Appelis_Metro_SignIn_V1_VerificationClientProtocol {
  public var serviceName: String {
    return "appelis.metro.signIn.v1.Verification"
  }

  /// Sends verification code to email.
  ///
  /// - Parameters:
  ///   - request: Request to send to emailVerify.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func emailVerify(
    _ request: Appelis_Metro_SignIn_V1_EmailVerifyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_EmailVerifyRequest, Appelis_Metro_SignIn_V1_EmailVerifyResponse> {
    return self.makeUnaryCall(
      path: Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.emailVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeemailVerifyInterceptors() ?? []
    )
  }

  /// Sends verification code to phone number in mobileUser data.
  ///
  /// - Parameters:
  ///   - request: Request to send to phoneVerify.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func phoneVerify(
    _ request: Appelis_Metro_SignIn_V1_PhoneVerifyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_PhoneVerifyRequest, Appelis_Metro_SignIn_V1_PhoneVerifyResponse> {
    return self.makeUnaryCall(
      path: Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.phoneVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makephoneVerifyInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Metro_SignIn_V1_VerificationClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Metro_SignIn_V1_VerificationNIOClient")
public final class Appelis_Metro_SignIn_V1_VerificationClient: Appelis_Metro_SignIn_V1_VerificationClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.metro.signIn.v1.Verification service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Metro_SignIn_V1_VerificationNIOClient: Appelis_Metro_SignIn_V1_VerificationClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.metro.signIn.v1.Verification service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Metro_SignIn_V1_VerificationAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol? { get }

  func makeEmailVerifyCall(
    _ request: Appelis_Metro_SignIn_V1_EmailVerifyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_EmailVerifyRequest, Appelis_Metro_SignIn_V1_EmailVerifyResponse>

  func makePhoneVerifyCall(
    _ request: Appelis_Metro_SignIn_V1_PhoneVerifyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_PhoneVerifyRequest, Appelis_Metro_SignIn_V1_PhoneVerifyResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_VerificationAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Metro_SignIn_V1_VerificationClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeEmailVerifyCall(
    _ request: Appelis_Metro_SignIn_V1_EmailVerifyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_EmailVerifyRequest, Appelis_Metro_SignIn_V1_EmailVerifyResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.emailVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeemailVerifyInterceptors() ?? []
    )
  }

  public func makePhoneVerifyCall(
    _ request: Appelis_Metro_SignIn_V1_PhoneVerifyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_PhoneVerifyRequest, Appelis_Metro_SignIn_V1_PhoneVerifyResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.phoneVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makephoneVerifyInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_VerificationAsyncClientProtocol {
  public func emailVerify(
    _ request: Appelis_Metro_SignIn_V1_EmailVerifyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Metro_SignIn_V1_EmailVerifyResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.emailVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeemailVerifyInterceptors() ?? []
    )
  }

  public func phoneVerify(
    _ request: Appelis_Metro_SignIn_V1_PhoneVerifyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Metro_SignIn_V1_PhoneVerifyResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.phoneVerify.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makephoneVerifyInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Metro_SignIn_V1_VerificationAsyncClient: Appelis_Metro_SignIn_V1_VerificationAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Metro_SignIn_V1_VerificationClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'emailVerify'.
  func makeemailVerifyInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_EmailVerifyRequest, Appelis_Metro_SignIn_V1_EmailVerifyResponse>]

  /// - Returns: Interceptors to use when invoking 'phoneVerify'.
  func makephoneVerifyInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_PhoneVerifyRequest, Appelis_Metro_SignIn_V1_PhoneVerifyResponse>]
}

public enum Appelis_Metro_SignIn_V1_VerificationClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Verification",
    fullName: "appelis.metro.signIn.v1.Verification",
    methods: [
      Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.emailVerify,
      Appelis_Metro_SignIn_V1_VerificationClientMetadata.Methods.phoneVerify,
    ]
  )

  public enum Methods {
    public static let emailVerify = GRPCMethodDescriptor(
      name: "emailVerify",
      path: "/appelis.metro.signIn.v1.Verification/emailVerify",
      type: GRPCCallType.unary
    )

    public static let phoneVerify = GRPCMethodDescriptor(
      name: "phoneVerify",
      path: "/appelis.metro.signIn.v1.Verification/phoneVerify",
      type: GRPCCallType.unary
    )
  }
}

/// Logs user directly on AIP service...
///
/// Usage: instantiate `Appelis_Metro_SignIn_V1_DirectLoginClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Metro_SignIn_V1_DirectLoginClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol? { get }

  func login(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse>

  func firebaseLogin(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse>
}

extension Appelis_Metro_SignIn_V1_DirectLoginClientProtocol {
  public var serviceName: String {
    return "appelis.metro.signIn.v1.DirectLogin"
  }

  /// Login using verification code from sms/email
  ///
  /// - Parameters:
  ///   - request: Request to send to Login.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func login(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse> {
    return self.makeUnaryCall(
      path: Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.login.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLoginInterceptors() ?? []
    )
  }

  /// Login using firebase id token.
  ///
  /// - Parameters:
  ///   - request: Request to send to FirebaseLogin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func firebaseLogin(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse> {
    return self.makeUnaryCall(
      path: Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.firebaseLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFirebaseLoginInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Metro_SignIn_V1_DirectLoginClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Metro_SignIn_V1_DirectLoginNIOClient")
public final class Appelis_Metro_SignIn_V1_DirectLoginClient: Appelis_Metro_SignIn_V1_DirectLoginClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.metro.signIn.v1.DirectLogin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Metro_SignIn_V1_DirectLoginNIOClient: Appelis_Metro_SignIn_V1_DirectLoginClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.metro.signIn.v1.DirectLogin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Logs user directly on AIP service...
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Metro_SignIn_V1_DirectLoginAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol? { get }

  func makeLoginCall(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse>

  func makeFirebaseLoginCall(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_DirectLoginAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeLoginCall(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.login.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLoginInterceptors() ?? []
    )
  }

  public func makeFirebaseLoginCall(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.firebaseLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFirebaseLoginInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_DirectLoginAsyncClientProtocol {
  public func login(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Metro_SignIn_V1_LoginResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.login.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLoginInterceptors() ?? []
    )
  }

  public func firebaseLogin(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Metro_SignIn_V1_FirebaseLoginResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.firebaseLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFirebaseLoginInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Metro_SignIn_V1_DirectLoginAsyncClient: Appelis_Metro_SignIn_V1_DirectLoginAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Metro_SignIn_V1_DirectLoginClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'login'.
  func makeLoginInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse>]

  /// - Returns: Interceptors to use when invoking 'firebaseLogin'.
  func makeFirebaseLoginInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse>]
}

public enum Appelis_Metro_SignIn_V1_DirectLoginClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "DirectLogin",
    fullName: "appelis.metro.signIn.v1.DirectLogin",
    methods: [
      Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.login,
      Appelis_Metro_SignIn_V1_DirectLoginClientMetadata.Methods.firebaseLogin,
    ]
  )

  public enum Methods {
    public static let login = GRPCMethodDescriptor(
      name: "Login",
      path: "/appelis.metro.signIn.v1.DirectLogin/Login",
      type: GRPCCallType.unary
    )

    public static let firebaseLogin = GRPCMethodDescriptor(
      name: "FirebaseLogin",
      path: "/appelis.metro.signIn.v1.DirectLogin/FirebaseLogin",
      type: GRPCCallType.unary
    )
  }
}

/// Service for creating profiles in MultiProfile service
///
/// Usage: instantiate `Appelis_Metro_SignIn_V1_MultiProfileLoginClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Metro_SignIn_V1_MultiProfileLoginClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol? { get }

  func login(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse>

  func firebaseLogin(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse>
}

extension Appelis_Metro_SignIn_V1_MultiProfileLoginClientProtocol {
  public var serviceName: String {
    return "appelis.metro.signIn.v1.MultiProfileLogin"
  }

  /// Login using verification code from sms/email
  ///
  /// - Parameters:
  ///   - request: Request to send to Login.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func login(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse> {
    return self.makeUnaryCall(
      path: Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.login.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLoginInterceptors() ?? []
    )
  }

  /// Login using firebase id token.
  ///
  /// - Parameters:
  ///   - request: Request to send to FirebaseLogin.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func firebaseLogin(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse> {
    return self.makeUnaryCall(
      path: Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.firebaseLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFirebaseLoginInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Metro_SignIn_V1_MultiProfileLoginClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Metro_SignIn_V1_MultiProfileLoginNIOClient")
public final class Appelis_Metro_SignIn_V1_MultiProfileLoginClient: Appelis_Metro_SignIn_V1_MultiProfileLoginClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.metro.signIn.v1.MultiProfileLogin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Metro_SignIn_V1_MultiProfileLoginNIOClient: Appelis_Metro_SignIn_V1_MultiProfileLoginClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.metro.signIn.v1.MultiProfileLogin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Service for creating profiles in MultiProfile service
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Metro_SignIn_V1_MultiProfileLoginAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol? { get }

  func makeLoginCall(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse>

  func makeFirebaseLoginCall(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_MultiProfileLoginAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeLoginCall(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.login.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLoginInterceptors() ?? []
    )
  }

  public func makeFirebaseLoginCall(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.firebaseLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFirebaseLoginInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Metro_SignIn_V1_MultiProfileLoginAsyncClientProtocol {
  public func login(
    _ request: Appelis_Metro_SignIn_V1_LoginRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Metro_SignIn_V1_LoginResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.login.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeLoginInterceptors() ?? []
    )
  }

  public func firebaseLogin(
    _ request: Appelis_Metro_SignIn_V1_FirebaseLoginRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Metro_SignIn_V1_FirebaseLoginResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.firebaseLogin.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFirebaseLoginInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Metro_SignIn_V1_MultiProfileLoginAsyncClient: Appelis_Metro_SignIn_V1_MultiProfileLoginAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Metro_SignIn_V1_MultiProfileLoginClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'login'.
  func makeLoginInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_LoginRequest, Appelis_Metro_SignIn_V1_LoginResponse>]

  /// - Returns: Interceptors to use when invoking 'firebaseLogin'.
  func makeFirebaseLoginInterceptors() -> [ClientInterceptor<Appelis_Metro_SignIn_V1_FirebaseLoginRequest, Appelis_Metro_SignIn_V1_FirebaseLoginResponse>]
}

public enum Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "MultiProfileLogin",
    fullName: "appelis.metro.signIn.v1.MultiProfileLogin",
    methods: [
      Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.login,
      Appelis_Metro_SignIn_V1_MultiProfileLoginClientMetadata.Methods.firebaseLogin,
    ]
  )

  public enum Methods {
    public static let login = GRPCMethodDescriptor(
      name: "Login",
      path: "/appelis.metro.signIn.v1.MultiProfileLogin/Login",
      type: GRPCCallType.unary
    )

    public static let firebaseLogin = GRPCMethodDescriptor(
      name: "FirebaseLogin",
      path: "/appelis.metro.signIn.v1.MultiProfileLogin/FirebaseLogin",
      type: GRPCCallType.unary
    )
  }
}

