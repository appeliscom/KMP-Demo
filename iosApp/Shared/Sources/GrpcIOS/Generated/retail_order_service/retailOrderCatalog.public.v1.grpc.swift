//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: retail_order_service/retailOrderCatalog.public.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_RetailOrder_Catalog_V1_OrderCatalogClient`, then call methods of this protocol to make API calls.
public protocol Appelis_RetailOrder_Catalog_V1_OrderCatalogClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol? { get }

  func orderChanges(
    _ request: Appelis_RetailOrder_Catalog_V1_OrderChangesRequest,
    callOptions: CallOptions?,
    handler: @escaping (Appelis_RetailOrder_Catalog_V1_OrderChangesResponse) -> Void
  ) -> ServerStreamingCall<Appelis_RetailOrder_Catalog_V1_OrderChangesRequest, Appelis_RetailOrder_Catalog_V1_OrderChangesResponse>
}

extension Appelis_RetailOrder_Catalog_V1_OrderCatalogClientProtocol {
  public var serviceName: String {
    return "appelis.retailOrder.catalog.v1.OrderCatalog"
  }

  /// Server streaming call to OrderChanges
  ///
  /// - Parameters:
  ///   - request: Request to send to OrderChanges.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func orderChanges(
    _ request: Appelis_RetailOrder_Catalog_V1_OrderChangesRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Appelis_RetailOrder_Catalog_V1_OrderChangesResponse) -> Void
  ) -> ServerStreamingCall<Appelis_RetailOrder_Catalog_V1_OrderChangesRequest, Appelis_RetailOrder_Catalog_V1_OrderChangesResponse> {
    return self.makeServerStreamingCall(
      path: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientMetadata.Methods.orderChanges.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeOrderChangesInterceptors() ?? [],
      handler: handler
    )
  }
}

@available(*, deprecated)
extension Appelis_RetailOrder_Catalog_V1_OrderCatalogClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_RetailOrder_Catalog_V1_OrderCatalogNIOClient")
public final class Appelis_RetailOrder_Catalog_V1_OrderCatalogClient: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.retailOrder.catalog.v1.OrderCatalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_RetailOrder_Catalog_V1_OrderCatalogNIOClient: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.retailOrder.catalog.v1.OrderCatalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_RetailOrder_Catalog_V1_OrderCatalogAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol? { get }

  func makeOrderChangesCall(
    _ request: Appelis_RetailOrder_Catalog_V1_OrderChangesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Appelis_RetailOrder_Catalog_V1_OrderChangesRequest, Appelis_RetailOrder_Catalog_V1_OrderChangesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_RetailOrder_Catalog_V1_OrderCatalogAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_RetailOrder_Catalog_V1_OrderCatalogClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeOrderChangesCall(
    _ request: Appelis_RetailOrder_Catalog_V1_OrderChangesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Appelis_RetailOrder_Catalog_V1_OrderChangesRequest, Appelis_RetailOrder_Catalog_V1_OrderChangesResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientMetadata.Methods.orderChanges.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeOrderChangesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_RetailOrder_Catalog_V1_OrderCatalogAsyncClientProtocol {
  public func orderChanges(
    _ request: Appelis_RetailOrder_Catalog_V1_OrderChangesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Appelis_RetailOrder_Catalog_V1_OrderChangesResponse> {
    return self.performAsyncServerStreamingCall(
      path: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientMetadata.Methods.orderChanges.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeOrderChangesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_RetailOrder_Catalog_V1_OrderCatalogAsyncClient: Appelis_RetailOrder_Catalog_V1_OrderCatalogAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_RetailOrder_Catalog_V1_OrderCatalogClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'orderChanges'.
  func makeOrderChangesInterceptors() -> [ClientInterceptor<Appelis_RetailOrder_Catalog_V1_OrderChangesRequest, Appelis_RetailOrder_Catalog_V1_OrderChangesResponse>]
}

public enum Appelis_RetailOrder_Catalog_V1_OrderCatalogClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "OrderCatalog",
    fullName: "appelis.retailOrder.catalog.v1.OrderCatalog",
    methods: [
      Appelis_RetailOrder_Catalog_V1_OrderCatalogClientMetadata.Methods.orderChanges,
    ]
  )

  public enum Methods {
    public static let orderChanges = GRPCMethodDescriptor(
      name: "OrderChanges",
      path: "/appelis.retailOrder.catalog.v1.OrderCatalog/OrderChanges",
      type: GRPCCallType.serverStreaming
    )
  }
}

