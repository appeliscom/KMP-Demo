//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: payment_gateway_service/supportedGateways.private.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol? { get }

  func supportedGateways(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Appelis_Payment_Gateway_V1_SupportedGatewaysResponse>

  func isActive(
    _ request: Appelis_Payment_Gateway_V1_IsActiveRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Payment_Gateway_V1_IsActiveRequest, Appelis_Payment_Gateway_V1_IsActiveResponse>
}

extension Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientProtocol {
  public var serviceName: String {
    return "appelis.payment.gateway.v1.PrivateGatewaySettings"
  }

  /// Rpc will return all supported gateways implemented by PrivateGatewayPayments service.
  ///
  /// - Parameters:
  ///   - request: Request to send to SupportedGateways.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func supportedGateways(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Appelis_Payment_Gateway_V1_SupportedGatewaysResponse> {
    return self.makeUnaryCall(
      path: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.supportedGateways.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSupportedGatewaysInterceptors() ?? []
    )
  }

  /// Rpc will be used to determine if project has all set and gate is available.
  ///
  /// - Parameters:
  ///   - request: Request to send to IsActive.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func isActive(
    _ request: Appelis_Payment_Gateway_V1_IsActiveRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Payment_Gateway_V1_IsActiveRequest, Appelis_Payment_Gateway_V1_IsActiveResponse> {
    return self.makeUnaryCall(
      path: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.isActive.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIsActiveInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Payment_Gateway_V1_PrivateGatewaySettingsNIOClient")
public final class Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClient: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.payment.gateway.v1.PrivateGatewaySettings service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Payment_Gateway_V1_PrivateGatewaySettingsNIOClient: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.payment.gateway.v1.PrivateGatewaySettings service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Payment_Gateway_V1_PrivateGatewaySettingsAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol? { get }

  func makeSupportedGatewaysCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Appelis_Payment_Gateway_V1_SupportedGatewaysResponse>

  func makeIsActiveCall(
    _ request: Appelis_Payment_Gateway_V1_IsActiveRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Payment_Gateway_V1_IsActiveRequest, Appelis_Payment_Gateway_V1_IsActiveResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Payment_Gateway_V1_PrivateGatewaySettingsAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeSupportedGatewaysCall(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<SwiftProtobuf.Google_Protobuf_Empty, Appelis_Payment_Gateway_V1_SupportedGatewaysResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.supportedGateways.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSupportedGatewaysInterceptors() ?? []
    )
  }

  public func makeIsActiveCall(
    _ request: Appelis_Payment_Gateway_V1_IsActiveRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Payment_Gateway_V1_IsActiveRequest, Appelis_Payment_Gateway_V1_IsActiveResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.isActive.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIsActiveInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Payment_Gateway_V1_PrivateGatewaySettingsAsyncClientProtocol {
  public func supportedGateways(
    _ request: SwiftProtobuf.Google_Protobuf_Empty,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Payment_Gateway_V1_SupportedGatewaysResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.supportedGateways.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSupportedGatewaysInterceptors() ?? []
    )
  }

  public func isActive(
    _ request: Appelis_Payment_Gateway_V1_IsActiveRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Payment_Gateway_V1_IsActiveResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.isActive.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeIsActiveInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Payment_Gateway_V1_PrivateGatewaySettingsAsyncClient: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'supportedGateways'.
  func makeSupportedGatewaysInterceptors() -> [ClientInterceptor<SwiftProtobuf.Google_Protobuf_Empty, Appelis_Payment_Gateway_V1_SupportedGatewaysResponse>]

  /// - Returns: Interceptors to use when invoking 'isActive'.
  func makeIsActiveInterceptors() -> [ClientInterceptor<Appelis_Payment_Gateway_V1_IsActiveRequest, Appelis_Payment_Gateway_V1_IsActiveResponse>]
}

public enum Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "PrivateGatewaySettings",
    fullName: "appelis.payment.gateway.v1.PrivateGatewaySettings",
    methods: [
      Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.supportedGateways,
      Appelis_Payment_Gateway_V1_PrivateGatewaySettingsClientMetadata.Methods.isActive,
    ]
  )

  public enum Methods {
    public static let supportedGateways = GRPCMethodDescriptor(
      name: "SupportedGateways",
      path: "/appelis.payment.gateway.v1.PrivateGatewaySettings/SupportedGateways",
      type: GRPCCallType.unary
    )

    public static let isActive = GRPCMethodDescriptor(
      name: "IsActive",
      path: "/appelis.payment.gateway.v1.PrivateGatewaySettings/IsActive",
      type: GRPCCallType.unary
    )
  }
}

