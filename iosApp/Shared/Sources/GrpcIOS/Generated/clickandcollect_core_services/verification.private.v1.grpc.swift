//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: clickandcollect_core_services/verification.private.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Will be used in private communication. Without token logic.
///
/// Usage: instantiate `Appelis_Clickandcollect_V1_PrivateVerificationClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Clickandcollect_V1_PrivateVerificationClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol? { get }

  func addUsers(
    _ request: Appelis_Clickandcollect_V1_AddUsersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_V1_AddUsersRequest, Appelis_Clickandcollect_V1_AddUsersResponse>

  func deleteUsers(
    _ request: Appelis_Clickandcollect_V1_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Clickandcollect_V1_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

extension Appelis_Clickandcollect_V1_PrivateVerificationClientProtocol {
  public var serviceName: String {
    return "appelis.clickandcollect.v1.PrivateVerification"
  }

  /// Add user verified by some user approvals service. If there is saved record, returns data.
  ///
  /// - Parameters:
  ///   - request: Request to send to AddUsers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func addUsers(
    _ request: Appelis_Clickandcollect_V1_AddUsersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_V1_AddUsersRequest, Appelis_Clickandcollect_V1_AddUsersResponse> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.addUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddUsersInterceptors() ?? []
    )
  }

  /// Delete user from verified users.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteUsers.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteUsers(
    _ request: Appelis_Clickandcollect_V1_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Clickandcollect_V1_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeUnaryCall(
      path: Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.deleteUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUsersInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Clickandcollect_V1_PrivateVerificationClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Clickandcollect_V1_PrivateVerificationNIOClient")
public final class Appelis_Clickandcollect_V1_PrivateVerificationClient: Appelis_Clickandcollect_V1_PrivateVerificationClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.clickandcollect.v1.PrivateVerification service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Clickandcollect_V1_PrivateVerificationNIOClient: Appelis_Clickandcollect_V1_PrivateVerificationClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.clickandcollect.v1.PrivateVerification service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Will be used in private communication. Without token logic.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Clickandcollect_V1_PrivateVerificationAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol? { get }

  func makeAddUsersCall(
    _ request: Appelis_Clickandcollect_V1_AddUsersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_V1_AddUsersRequest, Appelis_Clickandcollect_V1_AddUsersResponse>

  func makeDeleteUsersCall(
    _ request: Appelis_Clickandcollect_V1_DeleteUserRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_V1_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_V1_PrivateVerificationAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeAddUsersCall(
    _ request: Appelis_Clickandcollect_V1_AddUsersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_V1_AddUsersRequest, Appelis_Clickandcollect_V1_AddUsersResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.addUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddUsersInterceptors() ?? []
    )
  }

  public func makeDeleteUsersCall(
    _ request: Appelis_Clickandcollect_V1_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Clickandcollect_V1_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.deleteUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUsersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Clickandcollect_V1_PrivateVerificationAsyncClientProtocol {
  public func addUsers(
    _ request: Appelis_Clickandcollect_V1_AddUsersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Clickandcollect_V1_AddUsersResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.addUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddUsersInterceptors() ?? []
    )
  }

  public func deleteUsers(
    _ request: Appelis_Clickandcollect_V1_DeleteUserRequest,
    callOptions: CallOptions? = nil
  ) async throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.deleteUsers.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteUsersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Clickandcollect_V1_PrivateVerificationAsyncClient: Appelis_Clickandcollect_V1_PrivateVerificationAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Clickandcollect_V1_PrivateVerificationClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'addUsers'.
  func makeAddUsersInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_V1_AddUsersRequest, Appelis_Clickandcollect_V1_AddUsersResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteUsers'.
  func makeDeleteUsersInterceptors() -> [ClientInterceptor<Appelis_Clickandcollect_V1_DeleteUserRequest, SwiftProtobuf.Google_Protobuf_Empty>]
}

public enum Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "PrivateVerification",
    fullName: "appelis.clickandcollect.v1.PrivateVerification",
    methods: [
      Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.addUsers,
      Appelis_Clickandcollect_V1_PrivateVerificationClientMetadata.Methods.deleteUsers,
    ]
  )

  public enum Methods {
    public static let addUsers = GRPCMethodDescriptor(
      name: "AddUsers",
      path: "/appelis.clickandcollect.v1.PrivateVerification/AddUsers",
      type: GRPCCallType.unary
    )

    public static let deleteUsers = GRPCMethodDescriptor(
      name: "DeleteUsers",
      path: "/appelis.clickandcollect.v1.PrivateVerification/DeleteUsers",
      type: GRPCCallType.unary
    )
  }
}

