//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: category_service/categories.catalog.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Category catalog is meant for mobile devices so tokens will be validated for device claims.
///
/// Usage: instantiate `Appelis_Category_V1_CategoryCatalogClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Category_V1_CategoryCatalogClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol? { get }

  func byIds(
    _ request: Appelis_Category_V1_ByIdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Category_V1_ByIdsRequest, Appelis_Category_V1_ByIdsResponse>

  func byCategoryKey(
    _ request: Appelis_Category_V1_ByCategoryKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Category_V1_ByCategoryKeyRequest, Appelis_Category_V1_ByCategoryKeyResponse>

  func childCategories(
    _ request: Appelis_Category_V1_ChildCategoriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Category_V1_ChildCategoriesRequest, Appelis_Category_V1_ChildCategoriesResponse>
}

extension Appelis_Category_V1_CategoryCatalogClientProtocol {
  public var serviceName: String {
    return "appelis.category.v1.CategoryCatalog"
  }

  /// Rpc load categories by ids.
  ///
  /// - Parameters:
  ///   - request: Request to send to ByIds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func byIds(
    _ request: Appelis_Category_V1_ByIdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Category_V1_ByIdsRequest, Appelis_Category_V1_ByIdsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByIdsInterceptors() ?? []
    )
  }

  /// Rpc will return category searched by category_key.
  /// In case that category is not found, empty response will be returned.
  ///
  /// - Parameters:
  ///   - request: Request to send to ByCategoryKey.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func byCategoryKey(
    _ request: Appelis_Category_V1_ByCategoryKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Category_V1_ByCategoryKeyRequest, Appelis_Category_V1_ByCategoryKeyResponse> {
    return self.makeUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byCategoryKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByCategoryKeyInterceptors() ?? []
    )
  }

  /// Rpc will return child categories of parent category.
  ///
  /// - Parameters:
  ///   - request: Request to send to ChildCategories.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func childCategories(
    _ request: Appelis_Category_V1_ChildCategoriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Category_V1_ChildCategoriesRequest, Appelis_Category_V1_ChildCategoriesResponse> {
    return self.makeUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.childCategories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChildCategoriesInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Category_V1_CategoryCatalogClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Category_V1_CategoryCatalogNIOClient")
public final class Appelis_Category_V1_CategoryCatalogClient: Appelis_Category_V1_CategoryCatalogClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.category.v1.CategoryCatalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Category_V1_CategoryCatalogNIOClient: Appelis_Category_V1_CategoryCatalogClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.category.v1.CategoryCatalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Category catalog is meant for mobile devices so tokens will be validated for device claims.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Category_V1_CategoryCatalogAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol? { get }

  func makeByIdsCall(
    _ request: Appelis_Category_V1_ByIdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Category_V1_ByIdsRequest, Appelis_Category_V1_ByIdsResponse>

  func makeByCategoryKeyCall(
    _ request: Appelis_Category_V1_ByCategoryKeyRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Category_V1_ByCategoryKeyRequest, Appelis_Category_V1_ByCategoryKeyResponse>

  func makeChildCategoriesCall(
    _ request: Appelis_Category_V1_ChildCategoriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Category_V1_ChildCategoriesRequest, Appelis_Category_V1_ChildCategoriesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Category_V1_CategoryCatalogAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Category_V1_CategoryCatalogClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeByIdsCall(
    _ request: Appelis_Category_V1_ByIdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Category_V1_ByIdsRequest, Appelis_Category_V1_ByIdsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByIdsInterceptors() ?? []
    )
  }

  public func makeByCategoryKeyCall(
    _ request: Appelis_Category_V1_ByCategoryKeyRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Category_V1_ByCategoryKeyRequest, Appelis_Category_V1_ByCategoryKeyResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byCategoryKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByCategoryKeyInterceptors() ?? []
    )
  }

  public func makeChildCategoriesCall(
    _ request: Appelis_Category_V1_ChildCategoriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Category_V1_ChildCategoriesRequest, Appelis_Category_V1_ChildCategoriesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.childCategories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChildCategoriesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Category_V1_CategoryCatalogAsyncClientProtocol {
  public func byIds(
    _ request: Appelis_Category_V1_ByIdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Category_V1_ByIdsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByIdsInterceptors() ?? []
    )
  }

  public func byCategoryKey(
    _ request: Appelis_Category_V1_ByCategoryKeyRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Category_V1_ByCategoryKeyResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byCategoryKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeByCategoryKeyInterceptors() ?? []
    )
  }

  public func childCategories(
    _ request: Appelis_Category_V1_ChildCategoriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Category_V1_ChildCategoriesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.childCategories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeChildCategoriesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Category_V1_CategoryCatalogAsyncClient: Appelis_Category_V1_CategoryCatalogAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Category_V1_CategoryCatalogClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'byIds'.
  func makeByIdsInterceptors() -> [ClientInterceptor<Appelis_Category_V1_ByIdsRequest, Appelis_Category_V1_ByIdsResponse>]

  /// - Returns: Interceptors to use when invoking 'byCategoryKey'.
  func makeByCategoryKeyInterceptors() -> [ClientInterceptor<Appelis_Category_V1_ByCategoryKeyRequest, Appelis_Category_V1_ByCategoryKeyResponse>]

  /// - Returns: Interceptors to use when invoking 'childCategories'.
  func makeChildCategoriesInterceptors() -> [ClientInterceptor<Appelis_Category_V1_ChildCategoriesRequest, Appelis_Category_V1_ChildCategoriesResponse>]
}

public enum Appelis_Category_V1_CategoryCatalogClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "CategoryCatalog",
    fullName: "appelis.category.v1.CategoryCatalog",
    methods: [
      Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byIds,
      Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.byCategoryKey,
      Appelis_Category_V1_CategoryCatalogClientMetadata.Methods.childCategories,
    ]
  )

  public enum Methods {
    public static let byIds = GRPCMethodDescriptor(
      name: "ByIds",
      path: "/appelis.category.v1.CategoryCatalog/ByIds",
      type: GRPCCallType.unary
    )

    public static let byCategoryKey = GRPCMethodDescriptor(
      name: "ByCategoryKey",
      path: "/appelis.category.v1.CategoryCatalog/ByCategoryKey",
      type: GRPCCallType.unary
    )

    public static let childCategories = GRPCMethodDescriptor(
      name: "ChildCategories",
      path: "/appelis.category.v1.CategoryCatalog/ChildCategories",
      type: GRPCCallType.unary
    )
  }
}

