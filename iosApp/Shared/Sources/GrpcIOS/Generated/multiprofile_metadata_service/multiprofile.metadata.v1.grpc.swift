//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: multiprofile_metadata_service/multiprofile.metadata.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol? { get }

  func deviceMetadata(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Multiprofile_Metadata_V1_ProfileUsersResponse>
}

extension Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientProtocol {
  public var serviceName: String {
    return "appelis.multiprofile.metadata.v1.ProfilesMetadata"
  }

  /// List profiles attached to device defined by token. Returns profiles+users data for profile.
  ///
  /// - Parameters:
  ///   - request: Request to send to DeviceMetadata.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deviceMetadata(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Multiprofile_Metadata_V1_ProfileUsersResponse> {
    return self.makeUnaryCall(
      path: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientMetadata.Methods.deviceMetadata.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeviceMetadataInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Multiprofile_Metadata_V1_ProfilesMetadataNIOClient")
public final class Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClient: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.multiprofile.metadata.v1.ProfilesMetadata service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Multiprofile_Metadata_V1_ProfilesMetadataNIOClient: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.multiprofile.metadata.v1.ProfilesMetadata service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Multiprofile_Metadata_V1_ProfilesMetadataAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol? { get }

  func makeDeviceMetadataCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Multiprofile_Metadata_V1_ProfileUsersResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Multiprofile_Metadata_V1_ProfilesMetadataAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeDeviceMetadataCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Multiprofile_Metadata_V1_ProfileUsersResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientMetadata.Methods.deviceMetadata.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeviceMetadataInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Multiprofile_Metadata_V1_ProfilesMetadataAsyncClientProtocol {
  public func deviceMetadata(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Multiprofile_Metadata_V1_ProfileUsersResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientMetadata.Methods.deviceMetadata.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeviceMetadataInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Multiprofile_Metadata_V1_ProfilesMetadataAsyncClient: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'deviceMetadata'.
  func makeDeviceMetadataInterceptors() -> [ClientInterceptor<Appelis_Identity_Common_V1_Token, Appelis_Multiprofile_Metadata_V1_ProfileUsersResponse>]
}

public enum Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "ProfilesMetadata",
    fullName: "appelis.multiprofile.metadata.v1.ProfilesMetadata",
    methods: [
      Appelis_Multiprofile_Metadata_V1_ProfilesMetadataClientMetadata.Methods.deviceMetadata,
    ]
  )

  public enum Methods {
    public static let deviceMetadata = GRPCMethodDescriptor(
      name: "DeviceMetadata",
      path: "/appelis.multiprofile.metadata.v1.ProfilesMetadata/DeviceMetadata",
      type: GRPCCallType.unary
    )
  }
}

