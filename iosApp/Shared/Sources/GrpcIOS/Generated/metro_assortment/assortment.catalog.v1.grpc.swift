//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: metro_assortment/assortment.catalog.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Metro_Assortment_V1_CatalogClient`, then call methods of this protocol to make API calls.
public protocol Metro_Assortment_V1_CatalogClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol? { get }

  func getArticles(
    _ request: Metro_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Assortment_V1_GetArticlesRequest, Metro_Assortment_V1_GetArticleResponse>

  func getAssortment(
    _ request: Metro_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Assortment_V1_GetAssortmentRequest, Metro_Assortment_V1_GetAssortmentResponse>

  func getArticleCountByCategoryIds(
    _ request: Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest, Metro_Assortment_V1_GetArticleCountByCategoryIdsResponse>

  func getAssortmentFilter(
    _ request: Metro_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Assortment_V1_GetAssortmentFilterRequest, Metro_Assortment_V1_GetAssortmentFilterResponse>

  func getArticleRelatedArticles(
    _ request: Metro_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Assortment_V1_GetArticleRelatedArticlesRequest, Metro_Assortment_V1_GetArticleResponse>

  func scanArticle(
    _ request: Metro_Assortment_V1_ScanArticleRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Assortment_V1_ScanArticleRequest, Metro_Assortment_V1_ScanArticleResponse>
}

extension Metro_Assortment_V1_CatalogClientProtocol {
  public var serviceName: String {
    return "metro.assortment.v1.Catalog"
  }

  /// Unary call to GetArticles
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticles(
    _ request: Metro_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Assortment_V1_GetArticlesRequest, Metro_Assortment_V1_GetArticleResponse> {
    return self.makeUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesInterceptors() ?? []
    )
  }

  /// Unary call to GetAssortment
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssortment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssortment(
    _ request: Metro_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Assortment_V1_GetAssortmentRequest, Metro_Assortment_V1_GetAssortmentResponse> {
    return self.makeUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentInterceptors() ?? []
    )
  }

  /// Unary call to GetArticleCountByCategoryIds
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticleCountByCategoryIds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticleCountByCategoryIds(
    _ request: Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest, Metro_Assortment_V1_GetArticleCountByCategoryIdsResponse> {
    return self.makeUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleCountByCategoryIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleCountByCategoryIdsInterceptors() ?? []
    )
  }

  /// Unary call to GetAssortmentFilter
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssortmentFilter.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssortmentFilter(
    _ request: Metro_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Assortment_V1_GetAssortmentFilterRequest, Metro_Assortment_V1_GetAssortmentFilterResponse> {
    return self.makeUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortmentFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentFilterInterceptors() ?? []
    )
  }

  /// Unary call to GetArticleRelatedArticles
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticleRelatedArticles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticleRelatedArticles(
    _ request: Metro_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Assortment_V1_GetArticleRelatedArticlesRequest, Metro_Assortment_V1_GetArticleResponse> {
    return self.makeUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleRelatedArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleRelatedArticlesInterceptors() ?? []
    )
  }

  /// Rpc for scanning articles
  ///
  /// - Parameters:
  ///   - request: Request to send to ScanArticle.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func scanArticle(
    _ request: Metro_Assortment_V1_ScanArticleRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Assortment_V1_ScanArticleRequest, Metro_Assortment_V1_ScanArticleResponse> {
    return self.makeUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.scanArticle.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScanArticleInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Metro_Assortment_V1_CatalogClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Metro_Assortment_V1_CatalogNIOClient")
public final class Metro_Assortment_V1_CatalogClient: Metro_Assortment_V1_CatalogClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the metro.assortment.v1.Catalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Metro_Assortment_V1_CatalogNIOClient: Metro_Assortment_V1_CatalogClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol?

  /// Creates a client for the metro.assortment.v1.Catalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Metro_Assortment_V1_CatalogAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol? { get }

  func makeGetArticlesCall(
    _ request: Metro_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetArticlesRequest, Metro_Assortment_V1_GetArticleResponse>

  func makeGetAssortmentCall(
    _ request: Metro_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetAssortmentRequest, Metro_Assortment_V1_GetAssortmentResponse>

  func makeGetArticleCountByCategoryIdsCall(
    _ request: Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest, Metro_Assortment_V1_GetArticleCountByCategoryIdsResponse>

  func makeGetAssortmentFilterCall(
    _ request: Metro_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetAssortmentFilterRequest, Metro_Assortment_V1_GetAssortmentFilterResponse>

  func makeGetArticleRelatedArticlesCall(
    _ request: Metro_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetArticleRelatedArticlesRequest, Metro_Assortment_V1_GetArticleResponse>

  func makeScanArticleCall(
    _ request: Metro_Assortment_V1_ScanArticleRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_ScanArticleRequest, Metro_Assortment_V1_ScanArticleResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Assortment_V1_CatalogAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Metro_Assortment_V1_CatalogClientMetadata.serviceDescriptor
  }

  public var interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetArticlesCall(
    _ request: Metro_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetArticlesRequest, Metro_Assortment_V1_GetArticleResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesInterceptors() ?? []
    )
  }

  public func makeGetAssortmentCall(
    _ request: Metro_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetAssortmentRequest, Metro_Assortment_V1_GetAssortmentResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentInterceptors() ?? []
    )
  }

  public func makeGetArticleCountByCategoryIdsCall(
    _ request: Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest, Metro_Assortment_V1_GetArticleCountByCategoryIdsResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleCountByCategoryIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleCountByCategoryIdsInterceptors() ?? []
    )
  }

  public func makeGetAssortmentFilterCall(
    _ request: Metro_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetAssortmentFilterRequest, Metro_Assortment_V1_GetAssortmentFilterResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortmentFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentFilterInterceptors() ?? []
    )
  }

  public func makeGetArticleRelatedArticlesCall(
    _ request: Metro_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_GetArticleRelatedArticlesRequest, Metro_Assortment_V1_GetArticleResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleRelatedArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleRelatedArticlesInterceptors() ?? []
    )
  }

  public func makeScanArticleCall(
    _ request: Metro_Assortment_V1_ScanArticleRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Assortment_V1_ScanArticleRequest, Metro_Assortment_V1_ScanArticleResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.scanArticle.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScanArticleInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Assortment_V1_CatalogAsyncClientProtocol {
  public func getArticles(
    _ request: Metro_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Assortment_V1_GetArticleResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesInterceptors() ?? []
    )
  }

  public func getAssortment(
    _ request: Metro_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Assortment_V1_GetAssortmentResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentInterceptors() ?? []
    )
  }

  public func getArticleCountByCategoryIds(
    _ request: Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Assortment_V1_GetArticleCountByCategoryIdsResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleCountByCategoryIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleCountByCategoryIdsInterceptors() ?? []
    )
  }

  public func getAssortmentFilter(
    _ request: Metro_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Assortment_V1_GetAssortmentFilterResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortmentFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentFilterInterceptors() ?? []
    )
  }

  public func getArticleRelatedArticles(
    _ request: Metro_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Assortment_V1_GetArticleResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleRelatedArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleRelatedArticlesInterceptors() ?? []
    )
  }

  public func scanArticle(
    _ request: Metro_Assortment_V1_ScanArticleRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Assortment_V1_ScanArticleResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Assortment_V1_CatalogClientMetadata.Methods.scanArticle.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeScanArticleInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Metro_Assortment_V1_CatalogAsyncClient: Metro_Assortment_V1_CatalogAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Metro_Assortment_V1_CatalogClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getArticles'.
  func makeGetArticlesInterceptors() -> [ClientInterceptor<Metro_Assortment_V1_GetArticlesRequest, Metro_Assortment_V1_GetArticleResponse>]

  /// - Returns: Interceptors to use when invoking 'getAssortment'.
  func makeGetAssortmentInterceptors() -> [ClientInterceptor<Metro_Assortment_V1_GetAssortmentRequest, Metro_Assortment_V1_GetAssortmentResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticleCountByCategoryIds'.
  func makeGetArticleCountByCategoryIdsInterceptors() -> [ClientInterceptor<Metro_Assortment_V1_GetArticleCountByCategoryIdsRequest, Metro_Assortment_V1_GetArticleCountByCategoryIdsResponse>]

  /// - Returns: Interceptors to use when invoking 'getAssortmentFilter'.
  func makeGetAssortmentFilterInterceptors() -> [ClientInterceptor<Metro_Assortment_V1_GetAssortmentFilterRequest, Metro_Assortment_V1_GetAssortmentFilterResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticleRelatedArticles'.
  func makeGetArticleRelatedArticlesInterceptors() -> [ClientInterceptor<Metro_Assortment_V1_GetArticleRelatedArticlesRequest, Metro_Assortment_V1_GetArticleResponse>]

  /// - Returns: Interceptors to use when invoking 'scanArticle'.
  func makeScanArticleInterceptors() -> [ClientInterceptor<Metro_Assortment_V1_ScanArticleRequest, Metro_Assortment_V1_ScanArticleResponse>]
}

public enum Metro_Assortment_V1_CatalogClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Catalog",
    fullName: "metro.assortment.v1.Catalog",
    methods: [
      Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticles,
      Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortment,
      Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleCountByCategoryIds,
      Metro_Assortment_V1_CatalogClientMetadata.Methods.getAssortmentFilter,
      Metro_Assortment_V1_CatalogClientMetadata.Methods.getArticleRelatedArticles,
      Metro_Assortment_V1_CatalogClientMetadata.Methods.scanArticle,
    ]
  )

  public enum Methods {
    public static let getArticles = GRPCMethodDescriptor(
      name: "GetArticles",
      path: "/metro.assortment.v1.Catalog/GetArticles",
      type: GRPCCallType.unary
    )

    public static let getAssortment = GRPCMethodDescriptor(
      name: "GetAssortment",
      path: "/metro.assortment.v1.Catalog/GetAssortment",
      type: GRPCCallType.unary
    )

    public static let getArticleCountByCategoryIds = GRPCMethodDescriptor(
      name: "GetArticleCountByCategoryIds",
      path: "/metro.assortment.v1.Catalog/GetArticleCountByCategoryIds",
      type: GRPCCallType.unary
    )

    public static let getAssortmentFilter = GRPCMethodDescriptor(
      name: "GetAssortmentFilter",
      path: "/metro.assortment.v1.Catalog/GetAssortmentFilter",
      type: GRPCCallType.unary
    )

    public static let getArticleRelatedArticles = GRPCMethodDescriptor(
      name: "GetArticleRelatedArticles",
      path: "/metro.assortment.v1.Catalog/GetArticleRelatedArticles",
      type: GRPCCallType.unary
    )

    public static let scanArticle = GRPCMethodDescriptor(
      name: "ScanArticle",
      path: "/metro.assortment.v1.Catalog/ScanArticle",
      type: GRPCCallType.unary
    )
  }
}

