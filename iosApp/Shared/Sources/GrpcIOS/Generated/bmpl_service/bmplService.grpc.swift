//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: bmpl_service/bmplService.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Bmpl_V1_PriceAdminClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Bmpl_V1_PriceAdminClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol? { get }

  func getAllPrices(
    _ request: Appelis_Bmpl_V1_Token,
    callOptions: CallOptions?,
    handler: @escaping (Appelis_Bmpl_V1_PricesResponse) -> Void
  ) -> ServerStreamingCall<Appelis_Bmpl_V1_Token, Appelis_Bmpl_V1_PricesResponse>

  func createOrUpdatePrices(
    _ request: Appelis_Bmpl_V1_CreateOrUpdatePricesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Bmpl_V1_CreateOrUpdatePricesRequest, Appelis_Bmpl_V1_PricesResponse>

  func deletePrices(
    _ request: Appelis_Bmpl_V1_DeletePricesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Bmpl_V1_DeletePricesRequest, Appelis_Bmpl_V1_DeletePricesResponse>
}

extension Appelis_Bmpl_V1_PriceAdminClientProtocol {
  public var serviceName: String {
    return "appelis.bmpl.v1.PriceAdmin"
  }

  /// Server streaming call to GetAllPrices
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAllPrices.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func getAllPrices(
    _ request: Appelis_Bmpl_V1_Token,
    callOptions: CallOptions? = nil,
    handler: @escaping (Appelis_Bmpl_V1_PricesResponse) -> Void
  ) -> ServerStreamingCall<Appelis_Bmpl_V1_Token, Appelis_Bmpl_V1_PricesResponse> {
    return self.makeServerStreamingCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.getAllPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAllPricesInterceptors() ?? [],
      handler: handler
    )
  }

  /// Unary call to CreateOrUpdatePrices
  ///
  /// - Parameters:
  ///   - request: Request to send to CreateOrUpdatePrices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func createOrUpdatePrices(
    _ request: Appelis_Bmpl_V1_CreateOrUpdatePricesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Bmpl_V1_CreateOrUpdatePricesRequest, Appelis_Bmpl_V1_PricesResponse> {
    return self.makeUnaryCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.createOrUpdatePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOrUpdatePricesInterceptors() ?? []
    )
  }

  /// Unary call to DeletePrices
  ///
  /// - Parameters:
  ///   - request: Request to send to DeletePrices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deletePrices(
    _ request: Appelis_Bmpl_V1_DeletePricesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Bmpl_V1_DeletePricesRequest, Appelis_Bmpl_V1_DeletePricesResponse> {
    return self.makeUnaryCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.deletePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePricesInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Bmpl_V1_PriceAdminClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Bmpl_V1_PriceAdminNIOClient")
public final class Appelis_Bmpl_V1_PriceAdminClient: Appelis_Bmpl_V1_PriceAdminClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.bmpl.v1.PriceAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Bmpl_V1_PriceAdminNIOClient: Appelis_Bmpl_V1_PriceAdminClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.bmpl.v1.PriceAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Bmpl_V1_PriceAdminAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol? { get }

  func makeGetAllPricesCall(
    _ request: Appelis_Bmpl_V1_Token,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Appelis_Bmpl_V1_Token, Appelis_Bmpl_V1_PricesResponse>

  func makeCreateOrUpdatePricesCall(
    _ request: Appelis_Bmpl_V1_CreateOrUpdatePricesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Bmpl_V1_CreateOrUpdatePricesRequest, Appelis_Bmpl_V1_PricesResponse>

  func makeDeletePricesCall(
    _ request: Appelis_Bmpl_V1_DeletePricesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Bmpl_V1_DeletePricesRequest, Appelis_Bmpl_V1_DeletePricesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Bmpl_V1_PriceAdminAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Bmpl_V1_PriceAdminClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetAllPricesCall(
    _ request: Appelis_Bmpl_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Appelis_Bmpl_V1_Token, Appelis_Bmpl_V1_PricesResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.getAllPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAllPricesInterceptors() ?? []
    )
  }

  public func makeCreateOrUpdatePricesCall(
    _ request: Appelis_Bmpl_V1_CreateOrUpdatePricesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Bmpl_V1_CreateOrUpdatePricesRequest, Appelis_Bmpl_V1_PricesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.createOrUpdatePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOrUpdatePricesInterceptors() ?? []
    )
  }

  public func makeDeletePricesCall(
    _ request: Appelis_Bmpl_V1_DeletePricesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Bmpl_V1_DeletePricesRequest, Appelis_Bmpl_V1_DeletePricesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.deletePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePricesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Bmpl_V1_PriceAdminAsyncClientProtocol {
  public func getAllPrices(
    _ request: Appelis_Bmpl_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Appelis_Bmpl_V1_PricesResponse> {
    return self.performAsyncServerStreamingCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.getAllPrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAllPricesInterceptors() ?? []
    )
  }

  public func createOrUpdatePrices(
    _ request: Appelis_Bmpl_V1_CreateOrUpdatePricesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Bmpl_V1_PricesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.createOrUpdatePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeCreateOrUpdatePricesInterceptors() ?? []
    )
  }

  public func deletePrices(
    _ request: Appelis_Bmpl_V1_DeletePricesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Bmpl_V1_DeletePricesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.deletePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeletePricesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Bmpl_V1_PriceAdminAsyncClient: Appelis_Bmpl_V1_PriceAdminAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Bmpl_V1_PriceAdminClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getAllPrices'.
  func makeGetAllPricesInterceptors() -> [ClientInterceptor<Appelis_Bmpl_V1_Token, Appelis_Bmpl_V1_PricesResponse>]

  /// - Returns: Interceptors to use when invoking 'createOrUpdatePrices'.
  func makeCreateOrUpdatePricesInterceptors() -> [ClientInterceptor<Appelis_Bmpl_V1_CreateOrUpdatePricesRequest, Appelis_Bmpl_V1_PricesResponse>]

  /// - Returns: Interceptors to use when invoking 'deletePrices'.
  func makeDeletePricesInterceptors() -> [ClientInterceptor<Appelis_Bmpl_V1_DeletePricesRequest, Appelis_Bmpl_V1_DeletePricesResponse>]
}

public enum Appelis_Bmpl_V1_PriceAdminClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "PriceAdmin",
    fullName: "appelis.bmpl.v1.PriceAdmin",
    methods: [
      Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.getAllPrices,
      Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.createOrUpdatePrices,
      Appelis_Bmpl_V1_PriceAdminClientMetadata.Methods.deletePrices,
    ]
  )

  public enum Methods {
    public static let getAllPrices = GRPCMethodDescriptor(
      name: "GetAllPrices",
      path: "/appelis.bmpl.v1.PriceAdmin/GetAllPrices",
      type: GRPCCallType.serverStreaming
    )

    public static let createOrUpdatePrices = GRPCMethodDescriptor(
      name: "CreateOrUpdatePrices",
      path: "/appelis.bmpl.v1.PriceAdmin/CreateOrUpdatePrices",
      type: GRPCCallType.unary
    )

    public static let deletePrices = GRPCMethodDescriptor(
      name: "DeletePrices",
      path: "/appelis.bmpl.v1.PriceAdmin/DeletePrices",
      type: GRPCCallType.unary
    )
  }
}

/// Usage: instantiate `Appelis_Bmpl_V1_DevicePricesClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Bmpl_V1_DevicePricesClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol? { get }

  func getArticlePrices(
    _ request: Appelis_Bmpl_V1_GetArticlePricesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Bmpl_V1_GetArticlePricesRequest, Appelis_Bmpl_V1_GetArticlePricesResponse>
}

extension Appelis_Bmpl_V1_DevicePricesClientProtocol {
  public var serviceName: String {
    return "appelis.bmpl.v1.DevicePrices"
  }

  /// Unary call to GetArticlePrices
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticlePrices.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticlePrices(
    _ request: Appelis_Bmpl_V1_GetArticlePricesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Bmpl_V1_GetArticlePricesRequest, Appelis_Bmpl_V1_GetArticlePricesResponse> {
    return self.makeUnaryCall(
      path: Appelis_Bmpl_V1_DevicePricesClientMetadata.Methods.getArticlePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlePricesInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Bmpl_V1_DevicePricesClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Bmpl_V1_DevicePricesNIOClient")
public final class Appelis_Bmpl_V1_DevicePricesClient: Appelis_Bmpl_V1_DevicePricesClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.bmpl.v1.DevicePrices service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Bmpl_V1_DevicePricesNIOClient: Appelis_Bmpl_V1_DevicePricesClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.bmpl.v1.DevicePrices service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Bmpl_V1_DevicePricesAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol? { get }

  func makeGetArticlePricesCall(
    _ request: Appelis_Bmpl_V1_GetArticlePricesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Bmpl_V1_GetArticlePricesRequest, Appelis_Bmpl_V1_GetArticlePricesResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Bmpl_V1_DevicePricesAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Bmpl_V1_DevicePricesClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetArticlePricesCall(
    _ request: Appelis_Bmpl_V1_GetArticlePricesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Bmpl_V1_GetArticlePricesRequest, Appelis_Bmpl_V1_GetArticlePricesResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Bmpl_V1_DevicePricesClientMetadata.Methods.getArticlePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlePricesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Bmpl_V1_DevicePricesAsyncClientProtocol {
  public func getArticlePrices(
    _ request: Appelis_Bmpl_V1_GetArticlePricesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Bmpl_V1_GetArticlePricesResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Bmpl_V1_DevicePricesClientMetadata.Methods.getArticlePrices.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlePricesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Bmpl_V1_DevicePricesAsyncClient: Appelis_Bmpl_V1_DevicePricesAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Bmpl_V1_DevicePricesClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getArticlePrices'.
  func makeGetArticlePricesInterceptors() -> [ClientInterceptor<Appelis_Bmpl_V1_GetArticlePricesRequest, Appelis_Bmpl_V1_GetArticlePricesResponse>]
}

public enum Appelis_Bmpl_V1_DevicePricesClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "DevicePrices",
    fullName: "appelis.bmpl.v1.DevicePrices",
    methods: [
      Appelis_Bmpl_V1_DevicePricesClientMetadata.Methods.getArticlePrices,
    ]
  )

  public enum Methods {
    public static let getArticlePrices = GRPCMethodDescriptor(
      name: "GetArticlePrices",
      path: "/appelis.bmpl.v1.DevicePrices/GetArticlePrices",
      type: GRPCCallType.unary
    )
  }
}

