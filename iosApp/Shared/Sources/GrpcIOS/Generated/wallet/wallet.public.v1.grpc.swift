//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: wallet/wallet.public.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Metro_Wallet_V1_WalletPublicClient`, then call methods of this protocol to make API calls.
public protocol Metro_Wallet_V1_WalletPublicClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol? { get }

  func getWalletOverview(
    _ request: Metro_Wallet_V1_GetWalletOverviewRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Wallet_V1_GetWalletOverviewRequest, Metro_Wallet_V1_GetWalletOverviewResponse>

  func getFundDetail(
    _ request: Metro_Wallet_V1_GetFundDetailRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Wallet_V1_GetFundDetailRequest, Metro_Wallet_V1_GetFundDetailResponse>

  func spend(
    _ request: Metro_Wallet_V1_SpendRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Wallet_V1_SpendRequest, Metro_Wallet_V1_SpendResponse>

  func getFundHistory(
    _ request: Metro_Wallet_V1_GetFundHistoryRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Wallet_V1_GetFundHistoryRequest, Metro_Wallet_V1_GetFundHistoryResponse>

  func getSpendingsReport(
    _ request: Metro_Wallet_V1_GetSpendingsReportRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Metro_Wallet_V1_GetSpendingsReportRequest, Metro_Wallet_V1_GetSpendingsReportResponse>
}

extension Metro_Wallet_V1_WalletPublicClientProtocol {
  public var serviceName: String {
    return "metro.wallet.v1.WalletPublic"
  }

  /// Unary call to GetWalletOverview
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWalletOverview.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getWalletOverview(
    _ request: Metro_Wallet_V1_GetWalletOverviewRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Wallet_V1_GetWalletOverviewRequest, Metro_Wallet_V1_GetWalletOverviewResponse> {
    return self.makeUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getWalletOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWalletOverviewInterceptors() ?? []
    )
  }

  /// Unary call to GetFundDetail
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFundDetail.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFundDetail(
    _ request: Metro_Wallet_V1_GetFundDetailRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Wallet_V1_GetFundDetailRequest, Metro_Wallet_V1_GetFundDetailResponse> {
    return self.makeUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundDetail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFundDetailInterceptors() ?? []
    )
  }

  /// Unary call to Spend
  ///
  /// - Parameters:
  ///   - request: Request to send to Spend.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func spend(
    _ request: Metro_Wallet_V1_SpendRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Wallet_V1_SpendRequest, Metro_Wallet_V1_SpendResponse> {
    return self.makeUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.spend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSpendInterceptors() ?? []
    )
  }

  /// Unary call to GetFundHistory
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFundHistory.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getFundHistory(
    _ request: Metro_Wallet_V1_GetFundHistoryRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Wallet_V1_GetFundHistoryRequest, Metro_Wallet_V1_GetFundHistoryResponse> {
    return self.makeUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFundHistoryInterceptors() ?? []
    )
  }

  /// Unary call to GetSpendingsReport
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSpendingsReport.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getSpendingsReport(
    _ request: Metro_Wallet_V1_GetSpendingsReportRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Metro_Wallet_V1_GetSpendingsReportRequest, Metro_Wallet_V1_GetSpendingsReportResponse> {
    return self.makeUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getSpendingsReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSpendingsReportInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Metro_Wallet_V1_WalletPublicClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Metro_Wallet_V1_WalletPublicNIOClient")
public final class Metro_Wallet_V1_WalletPublicClient: Metro_Wallet_V1_WalletPublicClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the metro.wallet.v1.WalletPublic service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Metro_Wallet_V1_WalletPublicNIOClient: Metro_Wallet_V1_WalletPublicClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol?

  /// Creates a client for the metro.wallet.v1.WalletPublic service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Metro_Wallet_V1_WalletPublicAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol? { get }

  func makeGetWalletOverviewCall(
    _ request: Metro_Wallet_V1_GetWalletOverviewRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetWalletOverviewRequest, Metro_Wallet_V1_GetWalletOverviewResponse>

  func makeGetFundDetailCall(
    _ request: Metro_Wallet_V1_GetFundDetailRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetFundDetailRequest, Metro_Wallet_V1_GetFundDetailResponse>

  func makeSpendCall(
    _ request: Metro_Wallet_V1_SpendRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_SpendRequest, Metro_Wallet_V1_SpendResponse>

  func makeGetFundHistoryCall(
    _ request: Metro_Wallet_V1_GetFundHistoryRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetFundHistoryRequest, Metro_Wallet_V1_GetFundHistoryResponse>

  func makeGetSpendingsReportCall(
    _ request: Metro_Wallet_V1_GetSpendingsReportRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetSpendingsReportRequest, Metro_Wallet_V1_GetSpendingsReportResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Wallet_V1_WalletPublicAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Metro_Wallet_V1_WalletPublicClientMetadata.serviceDescriptor
  }

  public var interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetWalletOverviewCall(
    _ request: Metro_Wallet_V1_GetWalletOverviewRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetWalletOverviewRequest, Metro_Wallet_V1_GetWalletOverviewResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getWalletOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWalletOverviewInterceptors() ?? []
    )
  }

  public func makeGetFundDetailCall(
    _ request: Metro_Wallet_V1_GetFundDetailRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetFundDetailRequest, Metro_Wallet_V1_GetFundDetailResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundDetail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFundDetailInterceptors() ?? []
    )
  }

  public func makeSpendCall(
    _ request: Metro_Wallet_V1_SpendRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_SpendRequest, Metro_Wallet_V1_SpendResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.spend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSpendInterceptors() ?? []
    )
  }

  public func makeGetFundHistoryCall(
    _ request: Metro_Wallet_V1_GetFundHistoryRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetFundHistoryRequest, Metro_Wallet_V1_GetFundHistoryResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFundHistoryInterceptors() ?? []
    )
  }

  public func makeGetSpendingsReportCall(
    _ request: Metro_Wallet_V1_GetSpendingsReportRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Metro_Wallet_V1_GetSpendingsReportRequest, Metro_Wallet_V1_GetSpendingsReportResponse> {
    return self.makeAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getSpendingsReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSpendingsReportInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Metro_Wallet_V1_WalletPublicAsyncClientProtocol {
  public func getWalletOverview(
    _ request: Metro_Wallet_V1_GetWalletOverviewRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Wallet_V1_GetWalletOverviewResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getWalletOverview.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWalletOverviewInterceptors() ?? []
    )
  }

  public func getFundDetail(
    _ request: Metro_Wallet_V1_GetFundDetailRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Wallet_V1_GetFundDetailResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundDetail.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFundDetailInterceptors() ?? []
    )
  }

  public func spend(
    _ request: Metro_Wallet_V1_SpendRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Wallet_V1_SpendResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.spend.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSpendInterceptors() ?? []
    )
  }

  public func getFundHistory(
    _ request: Metro_Wallet_V1_GetFundHistoryRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Wallet_V1_GetFundHistoryResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundHistory.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFundHistoryInterceptors() ?? []
    )
  }

  public func getSpendingsReport(
    _ request: Metro_Wallet_V1_GetSpendingsReportRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Metro_Wallet_V1_GetSpendingsReportResponse {
    return try await self.performAsyncUnaryCall(
      path: Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getSpendingsReport.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSpendingsReportInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Metro_Wallet_V1_WalletPublicAsyncClient: Metro_Wallet_V1_WalletPublicAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Metro_Wallet_V1_WalletPublicClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getWalletOverview'.
  func makeGetWalletOverviewInterceptors() -> [ClientInterceptor<Metro_Wallet_V1_GetWalletOverviewRequest, Metro_Wallet_V1_GetWalletOverviewResponse>]

  /// - Returns: Interceptors to use when invoking 'getFundDetail'.
  func makeGetFundDetailInterceptors() -> [ClientInterceptor<Metro_Wallet_V1_GetFundDetailRequest, Metro_Wallet_V1_GetFundDetailResponse>]

  /// - Returns: Interceptors to use when invoking 'spend'.
  func makeSpendInterceptors() -> [ClientInterceptor<Metro_Wallet_V1_SpendRequest, Metro_Wallet_V1_SpendResponse>]

  /// - Returns: Interceptors to use when invoking 'getFundHistory'.
  func makeGetFundHistoryInterceptors() -> [ClientInterceptor<Metro_Wallet_V1_GetFundHistoryRequest, Metro_Wallet_V1_GetFundHistoryResponse>]

  /// - Returns: Interceptors to use when invoking 'getSpendingsReport'.
  func makeGetSpendingsReportInterceptors() -> [ClientInterceptor<Metro_Wallet_V1_GetSpendingsReportRequest, Metro_Wallet_V1_GetSpendingsReportResponse>]
}

public enum Metro_Wallet_V1_WalletPublicClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "WalletPublic",
    fullName: "metro.wallet.v1.WalletPublic",
    methods: [
      Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getWalletOverview,
      Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundDetail,
      Metro_Wallet_V1_WalletPublicClientMetadata.Methods.spend,
      Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getFundHistory,
      Metro_Wallet_V1_WalletPublicClientMetadata.Methods.getSpendingsReport,
    ]
  )

  public enum Methods {
    public static let getWalletOverview = GRPCMethodDescriptor(
      name: "GetWalletOverview",
      path: "/metro.wallet.v1.WalletPublic/GetWalletOverview",
      type: GRPCCallType.unary
    )

    public static let getFundDetail = GRPCMethodDescriptor(
      name: "GetFundDetail",
      path: "/metro.wallet.v1.WalletPublic/GetFundDetail",
      type: GRPCCallType.unary
    )

    public static let spend = GRPCMethodDescriptor(
      name: "Spend",
      path: "/metro.wallet.v1.WalletPublic/Spend",
      type: GRPCCallType.unary
    )

    public static let getFundHistory = GRPCMethodDescriptor(
      name: "GetFundHistory",
      path: "/metro.wallet.v1.WalletPublic/GetFundHistory",
      type: GRPCCallType.unary
    )

    public static let getSpendingsReport = GRPCMethodDescriptor(
      name: "GetSpendingsReport",
      path: "/metro.wallet.v1.WalletPublic/GetSpendingsReport",
      type: GRPCCallType.unary
    )
  }
}

