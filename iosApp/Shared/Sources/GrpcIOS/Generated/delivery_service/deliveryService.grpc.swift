//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: delivery_service/deliveryService.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Service for drivers delivery.
///
/// Usage: instantiate `Appelis_Order_Delivery_V1_DeliveryClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Order_Delivery_V1_DeliveryClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol? { get }

  func getOrdersReadyForDelivery(
    _ request: Appelis_Order_Delivery_V1_GetOrdersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Order_Delivery_V1_GetOrdersRequest, Appelis_Order_Delivery_V1_GetOrdersReadyForDeliveryResponse>

  func myOrders(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Order_Delivery_V1_MyOrdersResponse>

  func addOrderToMyOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>

  func removeFromMyOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>

  func updateOrdersSorting(
    _ request: Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>

  func startDelivering(
    callOptions: CallOptions?
  ) -> ClientStreamingCall<Appelis_Order_Delivery_V1_StartDeliveringRequest, Appelis_Order_Delivery_V1_StartDeliveringResponse>

  func finishOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>
}

extension Appelis_Order_Delivery_V1_DeliveryClientProtocol {
  public var serviceName: String {
    return "appelis.order.delivery.v1.Delivery"
  }

  /// Returns orders ready for delivery but order is not assigned to any driver.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetOrdersReadyForDelivery.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getOrdersReadyForDelivery(
    _ request: Appelis_Order_Delivery_V1_GetOrdersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Order_Delivery_V1_GetOrdersRequest, Appelis_Order_Delivery_V1_GetOrdersReadyForDeliveryResponse> {
    return self.makeUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.getOrdersReadyForDelivery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOrdersReadyForDeliveryInterceptors() ?? []
    )
  }

  /// Returns array of orders assigned to user. Sorted by order key.
  ///
  /// - Parameters:
  ///   - request: Request to send to MyOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func myOrders(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Order_Delivery_V1_MyOrdersResponse> {
    return self.makeUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.myOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMyOrdersInterceptors() ?? []
    )
  }

  /// Add order to my group. Orders assigned to web user id.
  ///
  /// - Parameters:
  ///   - request: Request to send to AddOrderToMyOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func addOrderToMyOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.addOrderToMyOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddOrderToMyOrdersInterceptors() ?? []
    )
  }

  /// Unary call to RemoveFromMyOrders
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveFromMyOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func removeFromMyOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.removeFromMyOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFromMyOrdersInterceptors() ?? []
    )
  }

  /// Update orderIndex for selected orders
  ///
  /// - Parameters:
  ///   - request: Request to send to UpdateOrdersSorting.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func updateOrdersSorting(
    _ request: Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.updateOrdersSorting.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateOrdersSortingInterceptors() ?? []
    )
  }

  /// Set delivering flag to true. With provided location orders tracking will be populated.
  /// When stream will be committed then delivering will be disabled.
  /// Token will be checked only with first message in stream.
  ///
  /// Callers should use the `send` method on the returned object to send messages
  /// to the server. The caller should send an `.end` after the final message has been sent.
  ///
  /// - Parameters:
  ///   - callOptions: Call options.
  /// - Returns: A `ClientStreamingCall` with futures for the metadata, status and response.
  public func startDelivering(
    callOptions: CallOptions? = nil
  ) -> ClientStreamingCall<Appelis_Order_Delivery_V1_StartDeliveringRequest, Appelis_Order_Delivery_V1_StartDeliveringResponse> {
    return self.makeClientStreamingCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.startDelivering.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStartDeliveringInterceptors() ?? []
    )
  }

  /// Set Order as delivered and remove order from "MyOrders" group. Also tracking will be disabled.
  ///
  /// - Parameters:
  ///   - request: Request to send to FinishOrders.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func finishOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.finishOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFinishOrdersInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Order_Delivery_V1_DeliveryClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Order_Delivery_V1_DeliveryNIOClient")
public final class Appelis_Order_Delivery_V1_DeliveryClient: Appelis_Order_Delivery_V1_DeliveryClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.order.delivery.v1.Delivery service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Order_Delivery_V1_DeliveryNIOClient: Appelis_Order_Delivery_V1_DeliveryClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.order.delivery.v1.Delivery service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Service for drivers delivery.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Order_Delivery_V1_DeliveryAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol? { get }

  func makeGetOrdersReadyForDeliveryCall(
    _ request: Appelis_Order_Delivery_V1_GetOrdersRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_GetOrdersRequest, Appelis_Order_Delivery_V1_GetOrdersReadyForDeliveryResponse>

  func makeMyOrdersCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Order_Delivery_V1_MyOrdersResponse>

  func makeAddOrderToMyOrdersCall(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>

  func makeRemoveFromMyOrdersCall(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>

  func makeUpdateOrdersSortingCall(
    _ request: Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>

  func makeStartDeliveringCall(
    callOptions: CallOptions?
  ) -> GRPCAsyncClientStreamingCall<Appelis_Order_Delivery_V1_StartDeliveringRequest, Appelis_Order_Delivery_V1_StartDeliveringResponse>

  func makeFinishOrdersCall(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Order_Delivery_V1_DeliveryAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Order_Delivery_V1_DeliveryClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetOrdersReadyForDeliveryCall(
    _ request: Appelis_Order_Delivery_V1_GetOrdersRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_GetOrdersRequest, Appelis_Order_Delivery_V1_GetOrdersReadyForDeliveryResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.getOrdersReadyForDelivery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOrdersReadyForDeliveryInterceptors() ?? []
    )
  }

  public func makeMyOrdersCall(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Identity_Common_V1_Token, Appelis_Order_Delivery_V1_MyOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.myOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMyOrdersInterceptors() ?? []
    )
  }

  public func makeAddOrderToMyOrdersCall(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.addOrderToMyOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddOrderToMyOrdersInterceptors() ?? []
    )
  }

  public func makeRemoveFromMyOrdersCall(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.removeFromMyOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFromMyOrdersInterceptors() ?? []
    )
  }

  public func makeUpdateOrdersSortingCall(
    _ request: Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.updateOrdersSorting.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateOrdersSortingInterceptors() ?? []
    )
  }

  public func makeStartDeliveringCall(
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncClientStreamingCall<Appelis_Order_Delivery_V1_StartDeliveringRequest, Appelis_Order_Delivery_V1_StartDeliveringResponse> {
    return self.makeAsyncClientStreamingCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.startDelivering.path,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStartDeliveringInterceptors() ?? []
    )
  }

  public func makeFinishOrdersCall(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.finishOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFinishOrdersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Order_Delivery_V1_DeliveryAsyncClientProtocol {
  public func getOrdersReadyForDelivery(
    _ request: Appelis_Order_Delivery_V1_GetOrdersRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_GetOrdersReadyForDeliveryResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.getOrdersReadyForDelivery.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetOrdersReadyForDeliveryInterceptors() ?? []
    )
  }

  public func myOrders(
    _ request: Appelis_Identity_Common_V1_Token,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_MyOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.myOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeMyOrdersInterceptors() ?? []
    )
  }

  public func addOrderToMyOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_UpdateOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.addOrderToMyOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddOrderToMyOrdersInterceptors() ?? []
    )
  }

  public func removeFromMyOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_UpdateOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.removeFromMyOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFromMyOrdersInterceptors() ?? []
    )
  }

  public func updateOrdersSorting(
    _ request: Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_UpdateOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.updateOrdersSorting.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeUpdateOrdersSortingInterceptors() ?? []
    )
  }

  public func startDelivering<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_StartDeliveringResponse where RequestStream: Sequence, RequestStream.Element == Appelis_Order_Delivery_V1_StartDeliveringRequest {
    return try await self.performAsyncClientStreamingCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.startDelivering.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStartDeliveringInterceptors() ?? []
    )
  }

  public func startDelivering<RequestStream>(
    _ requests: RequestStream,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_StartDeliveringResponse where RequestStream: AsyncSequence & Sendable, RequestStream.Element == Appelis_Order_Delivery_V1_StartDeliveringRequest {
    return try await self.performAsyncClientStreamingCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.startDelivering.path,
      requests: requests,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStartDeliveringInterceptors() ?? []
    )
  }

  public func finishOrders(
    _ request: Appelis_Order_Delivery_V1_UpdateRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Order_Delivery_V1_UpdateOrdersResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.finishOrders.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeFinishOrdersInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Order_Delivery_V1_DeliveryAsyncClient: Appelis_Order_Delivery_V1_DeliveryAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Order_Delivery_V1_DeliveryClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getOrdersReadyForDelivery'.
  func makeGetOrdersReadyForDeliveryInterceptors() -> [ClientInterceptor<Appelis_Order_Delivery_V1_GetOrdersRequest, Appelis_Order_Delivery_V1_GetOrdersReadyForDeliveryResponse>]

  /// - Returns: Interceptors to use when invoking 'myOrders'.
  func makeMyOrdersInterceptors() -> [ClientInterceptor<Appelis_Identity_Common_V1_Token, Appelis_Order_Delivery_V1_MyOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'addOrderToMyOrders'.
  func makeAddOrderToMyOrdersInterceptors() -> [ClientInterceptor<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'removeFromMyOrders'.
  func makeRemoveFromMyOrdersInterceptors() -> [ClientInterceptor<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'updateOrdersSorting'.
  func makeUpdateOrdersSortingInterceptors() -> [ClientInterceptor<Appelis_Order_Delivery_V1_UpdateOrdersSortingRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>]

  /// - Returns: Interceptors to use when invoking 'startDelivering'.
  func makeStartDeliveringInterceptors() -> [ClientInterceptor<Appelis_Order_Delivery_V1_StartDeliveringRequest, Appelis_Order_Delivery_V1_StartDeliveringResponse>]

  /// - Returns: Interceptors to use when invoking 'finishOrders'.
  func makeFinishOrdersInterceptors() -> [ClientInterceptor<Appelis_Order_Delivery_V1_UpdateRequest, Appelis_Order_Delivery_V1_UpdateOrdersResponse>]
}

public enum Appelis_Order_Delivery_V1_DeliveryClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "Delivery",
    fullName: "appelis.order.delivery.v1.Delivery",
    methods: [
      Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.getOrdersReadyForDelivery,
      Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.myOrders,
      Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.addOrderToMyOrders,
      Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.removeFromMyOrders,
      Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.updateOrdersSorting,
      Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.startDelivering,
      Appelis_Order_Delivery_V1_DeliveryClientMetadata.Methods.finishOrders,
    ]
  )

  public enum Methods {
    public static let getOrdersReadyForDelivery = GRPCMethodDescriptor(
      name: "GetOrdersReadyForDelivery",
      path: "/appelis.order.delivery.v1.Delivery/GetOrdersReadyForDelivery",
      type: GRPCCallType.unary
    )

    public static let myOrders = GRPCMethodDescriptor(
      name: "MyOrders",
      path: "/appelis.order.delivery.v1.Delivery/MyOrders",
      type: GRPCCallType.unary
    )

    public static let addOrderToMyOrders = GRPCMethodDescriptor(
      name: "AddOrderToMyOrders",
      path: "/appelis.order.delivery.v1.Delivery/AddOrderToMyOrders",
      type: GRPCCallType.unary
    )

    public static let removeFromMyOrders = GRPCMethodDescriptor(
      name: "RemoveFromMyOrders",
      path: "/appelis.order.delivery.v1.Delivery/RemoveFromMyOrders",
      type: GRPCCallType.unary
    )

    public static let updateOrdersSorting = GRPCMethodDescriptor(
      name: "UpdateOrdersSorting",
      path: "/appelis.order.delivery.v1.Delivery/UpdateOrdersSorting",
      type: GRPCCallType.unary
    )

    public static let startDelivering = GRPCMethodDescriptor(
      name: "StartDelivering",
      path: "/appelis.order.delivery.v1.Delivery/StartDelivering",
      type: GRPCCallType.clientStreaming
    )

    public static let finishOrders = GRPCMethodDescriptor(
      name: "FinishOrders",
      path: "/appelis.order.delivery.v1.Delivery/FinishOrders",
      type: GRPCCallType.unary
    )
  }
}

