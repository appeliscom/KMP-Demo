//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: config_service/config.public.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Config_V1_PublicServiceClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Config_V1_PublicServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol? { get }

  func getConfigurationPublic(
    _ request: Appelis_Config_V1_GetConfigurationPublicRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Config_V1_GetConfigurationPublicRequest, Appelis_Config_V1_GetConfigurationPublicResponse>

  func setConfigurationPublic(
    _ request: Appelis_Config_V1_SetConfigurationPublicRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Config_V1_SetConfigurationPublicRequest, Appelis_Config_V1_SetConfigurationPublicResponse>
}

extension Appelis_Config_V1_PublicServiceClientProtocol {
  public var serviceName: String {
    return "appelis.config.v1.PublicService"
  }

  /// Unary call to GetConfigurationPublic
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfigurationPublic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getConfigurationPublic(
    _ request: Appelis_Config_V1_GetConfigurationPublicRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Config_V1_GetConfigurationPublicRequest, Appelis_Config_V1_GetConfigurationPublicResponse> {
    return self.makeUnaryCall(
      path: Appelis_Config_V1_PublicServiceClientMetadata.Methods.getConfigurationPublic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigurationPublicInterceptors() ?? []
    )
  }

  /// Unary call to SetConfigurationPublic
  ///
  /// - Parameters:
  ///   - request: Request to send to SetConfigurationPublic.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setConfigurationPublic(
    _ request: Appelis_Config_V1_SetConfigurationPublicRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Config_V1_SetConfigurationPublicRequest, Appelis_Config_V1_SetConfigurationPublicResponse> {
    return self.makeUnaryCall(
      path: Appelis_Config_V1_PublicServiceClientMetadata.Methods.setConfigurationPublic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigurationPublicInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Config_V1_PublicServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Config_V1_PublicServiceNIOClient")
public final class Appelis_Config_V1_PublicServiceClient: Appelis_Config_V1_PublicServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.config.v1.PublicService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Config_V1_PublicServiceNIOClient: Appelis_Config_V1_PublicServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.config.v1.PublicService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Config_V1_PublicServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol? { get }

  func makeGetConfigurationPublicCall(
    _ request: Appelis_Config_V1_GetConfigurationPublicRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_GetConfigurationPublicRequest, Appelis_Config_V1_GetConfigurationPublicResponse>

  func makeSetConfigurationPublicCall(
    _ request: Appelis_Config_V1_SetConfigurationPublicRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_SetConfigurationPublicRequest, Appelis_Config_V1_SetConfigurationPublicResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Config_V1_PublicServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Config_V1_PublicServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetConfigurationPublicCall(
    _ request: Appelis_Config_V1_GetConfigurationPublicRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_GetConfigurationPublicRequest, Appelis_Config_V1_GetConfigurationPublicResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Config_V1_PublicServiceClientMetadata.Methods.getConfigurationPublic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigurationPublicInterceptors() ?? []
    )
  }

  public func makeSetConfigurationPublicCall(
    _ request: Appelis_Config_V1_SetConfigurationPublicRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_SetConfigurationPublicRequest, Appelis_Config_V1_SetConfigurationPublicResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Config_V1_PublicServiceClientMetadata.Methods.setConfigurationPublic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigurationPublicInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Config_V1_PublicServiceAsyncClientProtocol {
  public func getConfigurationPublic(
    _ request: Appelis_Config_V1_GetConfigurationPublicRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Config_V1_GetConfigurationPublicResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Config_V1_PublicServiceClientMetadata.Methods.getConfigurationPublic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigurationPublicInterceptors() ?? []
    )
  }

  public func setConfigurationPublic(
    _ request: Appelis_Config_V1_SetConfigurationPublicRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Config_V1_SetConfigurationPublicResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Config_V1_PublicServiceClientMetadata.Methods.setConfigurationPublic.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigurationPublicInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Config_V1_PublicServiceAsyncClient: Appelis_Config_V1_PublicServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Config_V1_PublicServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getConfigurationPublic'.
  func makeGetConfigurationPublicInterceptors() -> [ClientInterceptor<Appelis_Config_V1_GetConfigurationPublicRequest, Appelis_Config_V1_GetConfigurationPublicResponse>]

  /// - Returns: Interceptors to use when invoking 'setConfigurationPublic'.
  func makeSetConfigurationPublicInterceptors() -> [ClientInterceptor<Appelis_Config_V1_SetConfigurationPublicRequest, Appelis_Config_V1_SetConfigurationPublicResponse>]
}

public enum Appelis_Config_V1_PublicServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "PublicService",
    fullName: "appelis.config.v1.PublicService",
    methods: [
      Appelis_Config_V1_PublicServiceClientMetadata.Methods.getConfigurationPublic,
      Appelis_Config_V1_PublicServiceClientMetadata.Methods.setConfigurationPublic,
    ]
  )

  public enum Methods {
    public static let getConfigurationPublic = GRPCMethodDescriptor(
      name: "GetConfigurationPublic",
      path: "/appelis.config.v1.PublicService/GetConfigurationPublic",
      type: GRPCCallType.unary
    )

    public static let setConfigurationPublic = GRPCMethodDescriptor(
      name: "SetConfigurationPublic",
      path: "/appelis.config.v1.PublicService/SetConfigurationPublic",
      type: GRPCCallType.unary
    )
  }
}

