//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: config_service/config.private.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Appelis_Config_V1_PrivateServiceClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Config_V1_PrivateServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol? { get }

  func getConfiguration(
    _ request: Appelis_Config_V1_GetConfigurationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Config_V1_GetConfigurationRequest, Appelis_Config_V1_GetConfigurationResponse>

  func setConfiguration(
    _ request: Appelis_Config_V1_SetConfigurationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Config_V1_SetConfigurationRequest, Appelis_Config_V1_ErrorResponse>
}

extension Appelis_Config_V1_PrivateServiceClientProtocol {
  public var serviceName: String {
    return "appelis.config.v1.PrivateService"
  }

  /// Unary call to GetConfiguration
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfiguration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getConfiguration(
    _ request: Appelis_Config_V1_GetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Config_V1_GetConfigurationRequest, Appelis_Config_V1_GetConfigurationResponse> {
    return self.makeUnaryCall(
      path: Appelis_Config_V1_PrivateServiceClientMetadata.Methods.getConfiguration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigurationInterceptors() ?? []
    )
  }

  /// Unary call to SetConfiguration
  ///
  /// - Parameters:
  ///   - request: Request to send to SetConfiguration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setConfiguration(
    _ request: Appelis_Config_V1_SetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Config_V1_SetConfigurationRequest, Appelis_Config_V1_ErrorResponse> {
    return self.makeUnaryCall(
      path: Appelis_Config_V1_PrivateServiceClientMetadata.Methods.setConfiguration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigurationInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Config_V1_PrivateServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Config_V1_PrivateServiceNIOClient")
public final class Appelis_Config_V1_PrivateServiceClient: Appelis_Config_V1_PrivateServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.config.v1.PrivateService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Config_V1_PrivateServiceNIOClient: Appelis_Config_V1_PrivateServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.config.v1.PrivateService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Config_V1_PrivateServiceAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol? { get }

  func makeGetConfigurationCall(
    _ request: Appelis_Config_V1_GetConfigurationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_GetConfigurationRequest, Appelis_Config_V1_GetConfigurationResponse>

  func makeSetConfigurationCall(
    _ request: Appelis_Config_V1_SetConfigurationRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_SetConfigurationRequest, Appelis_Config_V1_ErrorResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Config_V1_PrivateServiceAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Config_V1_PrivateServiceClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetConfigurationCall(
    _ request: Appelis_Config_V1_GetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_GetConfigurationRequest, Appelis_Config_V1_GetConfigurationResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Config_V1_PrivateServiceClientMetadata.Methods.getConfiguration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigurationInterceptors() ?? []
    )
  }

  public func makeSetConfigurationCall(
    _ request: Appelis_Config_V1_SetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Config_V1_SetConfigurationRequest, Appelis_Config_V1_ErrorResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Config_V1_PrivateServiceClientMetadata.Methods.setConfiguration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigurationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Config_V1_PrivateServiceAsyncClientProtocol {
  public func getConfiguration(
    _ request: Appelis_Config_V1_GetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Config_V1_GetConfigurationResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Config_V1_PrivateServiceClientMetadata.Methods.getConfiguration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigurationInterceptors() ?? []
    )
  }

  public func setConfiguration(
    _ request: Appelis_Config_V1_SetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Config_V1_ErrorResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Config_V1_PrivateServiceClientMetadata.Methods.setConfiguration.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetConfigurationInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Config_V1_PrivateServiceAsyncClient: Appelis_Config_V1_PrivateServiceAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Config_V1_PrivateServiceClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getConfiguration'.
  func makeGetConfigurationInterceptors() -> [ClientInterceptor<Appelis_Config_V1_GetConfigurationRequest, Appelis_Config_V1_GetConfigurationResponse>]

  /// - Returns: Interceptors to use when invoking 'setConfiguration'.
  func makeSetConfigurationInterceptors() -> [ClientInterceptor<Appelis_Config_V1_SetConfigurationRequest, Appelis_Config_V1_ErrorResponse>]
}

public enum Appelis_Config_V1_PrivateServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "PrivateService",
    fullName: "appelis.config.v1.PrivateService",
    methods: [
      Appelis_Config_V1_PrivateServiceClientMetadata.Methods.getConfiguration,
      Appelis_Config_V1_PrivateServiceClientMetadata.Methods.setConfiguration,
    ]
  )

  public enum Methods {
    public static let getConfiguration = GRPCMethodDescriptor(
      name: "GetConfiguration",
      path: "/appelis.config.v1.PrivateService/GetConfiguration",
      type: GRPCCallType.unary
    )

    public static let setConfiguration = GRPCMethodDescriptor(
      name: "SetConfiguration",
      path: "/appelis.config.v1.PrivateService/SetConfiguration",
      type: GRPCCallType.unary
    )
  }
}

