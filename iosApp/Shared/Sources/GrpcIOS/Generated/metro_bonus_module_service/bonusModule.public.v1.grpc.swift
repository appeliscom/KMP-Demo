//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: metro_bonus_module_service/bonusModule.public.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Usage: instantiate `Cz_Makro_Bonus_V1_BonusModulePublicAdminClient`, then call methods of this protocol to make API calls.
public protocol Cz_Makro_Bonus_V1_BonusModulePublicAdminClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol? { get }

  func setBonusModules(
    _ request: Cz_Makro_Bonus_V1_SetBonusModulesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cz_Makro_Bonus_V1_SetBonusModulesRequest, Cz_Makro_Bonus_V1_SetBonusModulesResponse>

  func setBonusHistories(
    _ request: Cz_Makro_Bonus_V1_SetBonusHistoriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cz_Makro_Bonus_V1_SetBonusHistoriesRequest, Cz_Makro_Bonus_V1_SetBonusHistoriesResponse>

  func deleteBonusHistories(
    _ request: Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest, Cz_Makro_Bonus_V1_DeleteBonusHistoriesResponse>

  func streamCompaniesBonusModulesMapped(
    _ request: Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest,
    callOptions: CallOptions?,
    handler: @escaping (Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse) -> Void
  ) -> ServerStreamingCall<Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest, Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse>

  func streamBonusHistoriesModuleMapped(
    _ request: Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest,
    callOptions: CallOptions?,
    handler: @escaping (Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse) -> Void
  ) -> ServerStreamingCall<Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest, Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse>
}

extension Cz_Makro_Bonus_V1_BonusModulePublicAdminClientProtocol {
  public var serviceName: String {
    return "cz.makro.bonus.v1.BonusModulePublicAdmin"
  }

  /// Unary call to SetBonusModules
  ///
  /// - Parameters:
  ///   - request: Request to send to SetBonusModules.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setBonusModules(
    _ request: Cz_Makro_Bonus_V1_SetBonusModulesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cz_Makro_Bonus_V1_SetBonusModulesRequest, Cz_Makro_Bonus_V1_SetBonusModulesResponse> {
    return self.makeUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusModules.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetBonusModulesInterceptors() ?? []
    )
  }

  /// Unary call to SetBonusHistories
  ///
  /// - Parameters:
  ///   - request: Request to send to SetBonusHistories.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func setBonusHistories(
    _ request: Cz_Makro_Bonus_V1_SetBonusHistoriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cz_Makro_Bonus_V1_SetBonusHistoriesRequest, Cz_Makro_Bonus_V1_SetBonusHistoriesResponse> {
    return self.makeUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusHistories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetBonusHistoriesInterceptors() ?? []
    )
  }

  /// Unary call to DeleteBonusHistories
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteBonusHistories.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func deleteBonusHistories(
    _ request: Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest, Cz_Makro_Bonus_V1_DeleteBonusHistoriesResponse> {
    return self.makeUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.deleteBonusHistories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteBonusHistoriesInterceptors() ?? []
    )
  }

  /// Server streaming call to StreamCompaniesBonusModulesMapped
  ///
  /// - Parameters:
  ///   - request: Request to send to StreamCompaniesBonusModulesMapped.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func streamCompaniesBonusModulesMapped(
    _ request: Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse) -> Void
  ) -> ServerStreamingCall<Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest, Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse> {
    return self.makeServerStreamingCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamCompaniesBonusModulesMapped.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamCompaniesBonusModulesMappedInterceptors() ?? [],
      handler: handler
    )
  }

  /// Server streaming call to StreamBonusHistoriesModuleMapped
  ///
  /// - Parameters:
  ///   - request: Request to send to StreamBonusHistoriesModuleMapped.
  ///   - callOptions: Call options.
  ///   - handler: A closure called when each response is received from the server.
  /// - Returns: A `ServerStreamingCall` with futures for the metadata and status.
  public func streamBonusHistoriesModuleMapped(
    _ request: Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest,
    callOptions: CallOptions? = nil,
    handler: @escaping (Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse) -> Void
  ) -> ServerStreamingCall<Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest, Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse> {
    return self.makeServerStreamingCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamBonusHistoriesModuleMapped.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamBonusHistoriesModuleMappedInterceptors() ?? [],
      handler: handler
    )
  }
}

@available(*, deprecated)
extension Cz_Makro_Bonus_V1_BonusModulePublicAdminClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Cz_Makro_Bonus_V1_BonusModulePublicAdminNIOClient")
public final class Cz_Makro_Bonus_V1_BonusModulePublicAdminClient: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the cz.makro.bonus.v1.BonusModulePublicAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Cz_Makro_Bonus_V1_BonusModulePublicAdminNIOClient: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol?

  /// Creates a client for the cz.makro.bonus.v1.BonusModulePublicAdmin service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Cz_Makro_Bonus_V1_BonusModulePublicAdminAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol? { get }

  func makeSetBonusModulesCall(
    _ request: Cz_Makro_Bonus_V1_SetBonusModulesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cz_Makro_Bonus_V1_SetBonusModulesRequest, Cz_Makro_Bonus_V1_SetBonusModulesResponse>

  func makeSetBonusHistoriesCall(
    _ request: Cz_Makro_Bonus_V1_SetBonusHistoriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cz_Makro_Bonus_V1_SetBonusHistoriesRequest, Cz_Makro_Bonus_V1_SetBonusHistoriesResponse>

  func makeDeleteBonusHistoriesCall(
    _ request: Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest, Cz_Makro_Bonus_V1_DeleteBonusHistoriesResponse>

  func makeStreamCompaniesBonusModulesMappedCall(
    _ request: Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest, Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse>

  func makeStreamBonusHistoriesModuleMappedCall(
    _ request: Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncServerStreamingCall<Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest, Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cz_Makro_Bonus_V1_BonusModulePublicAdminAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.serviceDescriptor
  }

  public var interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeSetBonusModulesCall(
    _ request: Cz_Makro_Bonus_V1_SetBonusModulesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cz_Makro_Bonus_V1_SetBonusModulesRequest, Cz_Makro_Bonus_V1_SetBonusModulesResponse> {
    return self.makeAsyncUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusModules.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetBonusModulesInterceptors() ?? []
    )
  }

  public func makeSetBonusHistoriesCall(
    _ request: Cz_Makro_Bonus_V1_SetBonusHistoriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cz_Makro_Bonus_V1_SetBonusHistoriesRequest, Cz_Makro_Bonus_V1_SetBonusHistoriesResponse> {
    return self.makeAsyncUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusHistories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetBonusHistoriesInterceptors() ?? []
    )
  }

  public func makeDeleteBonusHistoriesCall(
    _ request: Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest, Cz_Makro_Bonus_V1_DeleteBonusHistoriesResponse> {
    return self.makeAsyncUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.deleteBonusHistories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteBonusHistoriesInterceptors() ?? []
    )
  }

  public func makeStreamCompaniesBonusModulesMappedCall(
    _ request: Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest, Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamCompaniesBonusModulesMapped.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamCompaniesBonusModulesMappedInterceptors() ?? []
    )
  }

  public func makeStreamBonusHistoriesModuleMappedCall(
    _ request: Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncServerStreamingCall<Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest, Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse> {
    return self.makeAsyncServerStreamingCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamBonusHistoriesModuleMapped.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamBonusHistoriesModuleMappedInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Cz_Makro_Bonus_V1_BonusModulePublicAdminAsyncClientProtocol {
  public func setBonusModules(
    _ request: Cz_Makro_Bonus_V1_SetBonusModulesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Cz_Makro_Bonus_V1_SetBonusModulesResponse {
    return try await self.performAsyncUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusModules.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetBonusModulesInterceptors() ?? []
    )
  }

  public func setBonusHistories(
    _ request: Cz_Makro_Bonus_V1_SetBonusHistoriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Cz_Makro_Bonus_V1_SetBonusHistoriesResponse {
    return try await self.performAsyncUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusHistories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetBonusHistoriesInterceptors() ?? []
    )
  }

  public func deleteBonusHistories(
    _ request: Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Cz_Makro_Bonus_V1_DeleteBonusHistoriesResponse {
    return try await self.performAsyncUnaryCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.deleteBonusHistories.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteBonusHistoriesInterceptors() ?? []
    )
  }

  public func streamCompaniesBonusModulesMapped(
    _ request: Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse> {
    return self.performAsyncServerStreamingCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamCompaniesBonusModulesMapped.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamCompaniesBonusModulesMappedInterceptors() ?? []
    )
  }

  public func streamBonusHistoriesModuleMapped(
    _ request: Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncResponseStream<Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse> {
    return self.performAsyncServerStreamingCall(
      path: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamBonusHistoriesModuleMapped.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeStreamBonusHistoriesModuleMappedInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Cz_Makro_Bonus_V1_BonusModulePublicAdminAsyncClient: Cz_Makro_Bonus_V1_BonusModulePublicAdminAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Cz_Makro_Bonus_V1_BonusModulePublicAdminClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'setBonusModules'.
  func makeSetBonusModulesInterceptors() -> [ClientInterceptor<Cz_Makro_Bonus_V1_SetBonusModulesRequest, Cz_Makro_Bonus_V1_SetBonusModulesResponse>]

  /// - Returns: Interceptors to use when invoking 'setBonusHistories'.
  func makeSetBonusHistoriesInterceptors() -> [ClientInterceptor<Cz_Makro_Bonus_V1_SetBonusHistoriesRequest, Cz_Makro_Bonus_V1_SetBonusHistoriesResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteBonusHistories'.
  func makeDeleteBonusHistoriesInterceptors() -> [ClientInterceptor<Cz_Makro_Bonus_V1_DeleteBonusHistoriesRequest, Cz_Makro_Bonus_V1_DeleteBonusHistoriesResponse>]

  /// - Returns: Interceptors to use when invoking 'streamCompaniesBonusModulesMapped'.
  func makeStreamCompaniesBonusModulesMappedInterceptors() -> [ClientInterceptor<Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedRequest, Cz_Makro_Bonus_V1_StreamCompaniesBonusModulesMappedResponse>]

  /// - Returns: Interceptors to use when invoking 'streamBonusHistoriesModuleMapped'.
  func makeStreamBonusHistoriesModuleMappedInterceptors() -> [ClientInterceptor<Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedRequest, Cz_Makro_Bonus_V1_StreamBonusHistoriesModuleMappedResponse>]
}

public enum Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "BonusModulePublicAdmin",
    fullName: "cz.makro.bonus.v1.BonusModulePublicAdmin",
    methods: [
      Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusModules,
      Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.setBonusHistories,
      Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.deleteBonusHistories,
      Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamCompaniesBonusModulesMapped,
      Cz_Makro_Bonus_V1_BonusModulePublicAdminClientMetadata.Methods.streamBonusHistoriesModuleMapped,
    ]
  )

  public enum Methods {
    public static let setBonusModules = GRPCMethodDescriptor(
      name: "SetBonusModules",
      path: "/cz.makro.bonus.v1.BonusModulePublicAdmin/SetBonusModules",
      type: GRPCCallType.unary
    )

    public static let setBonusHistories = GRPCMethodDescriptor(
      name: "SetBonusHistories",
      path: "/cz.makro.bonus.v1.BonusModulePublicAdmin/SetBonusHistories",
      type: GRPCCallType.unary
    )

    public static let deleteBonusHistories = GRPCMethodDescriptor(
      name: "DeleteBonusHistories",
      path: "/cz.makro.bonus.v1.BonusModulePublicAdmin/DeleteBonusHistories",
      type: GRPCCallType.unary
    )

    public static let streamCompaniesBonusModulesMapped = GRPCMethodDescriptor(
      name: "StreamCompaniesBonusModulesMapped",
      path: "/cz.makro.bonus.v1.BonusModulePublicAdmin/StreamCompaniesBonusModulesMapped",
      type: GRPCCallType.serverStreaming
    )

    public static let streamBonusHistoriesModuleMapped = GRPCMethodDescriptor(
      name: "StreamBonusHistoriesModuleMapped",
      path: "/cz.makro.bonus.v1.BonusModulePublicAdmin/StreamBonusHistoriesModuleMapped",
      type: GRPCCallType.serverStreaming
    )
  }
}

