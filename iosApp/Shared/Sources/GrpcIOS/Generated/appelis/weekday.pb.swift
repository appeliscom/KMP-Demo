// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: appelis/weekday.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Days enumeration for opening/delivery hours.
public enum Appelis_WeekDay: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case unknownWeekDay // = 0
  case monday // = 1
  case tuesday // = 2
  case wednesday // = 3
  case thursday // = 4
  case friday // = 5
  case saturday // = 6
  case sunday // = 7
  case UNRECOGNIZED(Int)

  public init() {
    self = .unknownWeekDay
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .unknownWeekDay
    case 1: self = .monday
    case 2: self = .tuesday
    case 3: self = .wednesday
    case 4: self = .thursday
    case 5: self = .friday
    case 6: self = .saturday
    case 7: self = .sunday
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unknownWeekDay: return 0
    case .monday: return 1
    case .tuesday: return 2
    case .wednesday: return 3
    case .thursday: return 4
    case .friday: return 5
    case .saturday: return 6
    case .sunday: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Appelis_WeekDay: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static let allCases: [Appelis_WeekDay] = [
    .unknownWeekDay,
    .monday,
    .tuesday,
    .wednesday,
    .thursday,
    .friday,
    .saturday,
    .sunday,
  ]
}

#endif  // swift(>=4.2)

#if swift(>=5.5) && canImport(_Concurrency)
extension Appelis_WeekDay: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Appelis_WeekDay: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN_WEEK_DAY"),
    1: .same(proto: "MONDAY"),
    2: .same(proto: "TUESDAY"),
    3: .same(proto: "WEDNESDAY"),
    4: .same(proto: "THURSDAY"),
    5: .same(proto: "FRIDAY"),
    6: .same(proto: "SATURDAY"),
    7: .same(proto: "SUNDAY"),
  ]
}
