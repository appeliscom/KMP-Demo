//
// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the protocol buffer compiler.
// Source: assortment_services/assortment.v1.proto
//
import GRPC
import NIO
import NIOConcurrencyHelpers
import SwiftProtobuf


/// Service will be protected by jwt device claims.
/// Catalog can be used to browse articles and filter according to provided data.
///
/// Usage: instantiate `Appelis_Assortment_V1_AssortmentCatalogClient`, then call methods of this protocol to make API calls.
public protocol Appelis_Assortment_V1_AssortmentCatalogClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol? { get }

  func getAssortmentFilter(
    _ request: Appelis_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Assortment_V1_GetAssortmentFilterRequest, Appelis_Assortment_V1_GetAssortmentFilterResponse>

  func getArticleCountByCategoryIds(
    _ request: Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest, Appelis_Assortment_V1_GetArticleCountByCategoryIdsResponse>

  func getAssortment(
    _ request: Appelis_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Assortment_V1_GetAssortmentRequest, Appelis_Assortment_V1_GetAssortmentResponse>

  func getArticleExtras(
    _ request: Appelis_Assortment_V1_GetArticleExtrasRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleExtrasRequest, Appelis_Assortment_V1_GetArticleExtrasResponse>

  func getArticles(
    _ request: Appelis_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticlesRequest, Appelis_Assortment_V1_GetArticleResponse>

  func getArticleDescription(
    _ request: Appelis_Assortment_V1_GetArticleDescriptionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleDescriptionRequest, Appelis_Assortment_V1_GetArticleDescriptionResponse>

  func getArticleRelatedArticles(
    _ request: Appelis_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleRelatedArticlesRequest, Appelis_Assortment_V1_GetArticleResponse>
}

extension Appelis_Assortment_V1_AssortmentCatalogClientProtocol {
  public var serviceName: String {
    return "appelis.assortment.v1.AssortmentCatalog"
  }

  /// Returns filter data for searching and filtering assortment page
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssortmentFilter.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssortmentFilter(
    _ request: Appelis_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Assortment_V1_GetAssortmentFilterRequest, Appelis_Assortment_V1_GetAssortmentFilterResponse> {
    return self.makeUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortmentFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentFilterInterceptors() ?? []
    )
  }

  /// Rpc gets article count per selected category.
  /// Result is filtered according to selected businessId and optionally by availability status.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticleCountByCategoryIds.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticleCountByCategoryIds(
    _ request: Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest, Appelis_Assortment_V1_GetArticleCountByCategoryIdsResponse> {
    return self.makeUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleCountByCategoryIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleCountByCategoryIdsInterceptors() ?? []
    )
  }

  /// Gets assortment articles that are filtered according to provided parameters.
  /// If rpc is called with logged user, prices will be filtered according to user price_level.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetAssortment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getAssortment(
    _ request: Appelis_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Assortment_V1_GetAssortmentRequest, Appelis_Assortment_V1_GetAssortmentResponse> {
    return self.makeUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentInterceptors() ?? []
    )
  }

  /// Get article extras. Returns only ids. Ids can be used for getting articles from different rpc call.
  /// Extras are articles which can be bought together with original article.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticleExtras.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticleExtras(
    _ request: Appelis_Assortment_V1_GetArticleExtrasRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleExtrasRequest, Appelis_Assortment_V1_GetArticleExtrasResponse> {
    return self.makeUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleExtras.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleExtrasInterceptors() ?? []
    )
  }

  /// Gets article from db. if article is valid. Filters prices according to user price level.
  /// If case of missing article response will be returned empty.
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticles(
    _ request: Appelis_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticlesRequest, Appelis_Assortment_V1_GetArticleResponse> {
    return self.makeUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesInterceptors() ?? []
    )
  }

  /// Get article description. Standalone call to get big html content
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticleDescription.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticleDescription(
    _ request: Appelis_Assortment_V1_GetArticleDescriptionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleDescriptionRequest, Appelis_Assortment_V1_GetArticleDescriptionResponse> {
    return self.makeUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleDescription.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleDescriptionInterceptors() ?? []
    )
  }

  /// Gets related articles to parent article defined by "articleId".
  /// Related association is defined by similarities in name of articles.
  /// Articles MUST be from same categories as parent article.
  /// Parent article is not part of output.
  /// Impl desc: keyword of article if processed with whitelist, also attributes are part of whitelisting function
  /// Impl desc: articles are also filtered by business prices not only availability
  ///
  /// - Parameters:
  ///   - request: Request to send to GetArticleRelatedArticles.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  public func getArticleRelatedArticles(
    _ request: Appelis_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Appelis_Assortment_V1_GetArticleRelatedArticlesRequest, Appelis_Assortment_V1_GetArticleResponse> {
    return self.makeUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleRelatedArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleRelatedArticlesInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Appelis_Assortment_V1_AssortmentCatalogClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Appelis_Assortment_V1_AssortmentCatalogNIOClient")
public final class Appelis_Assortment_V1_AssortmentCatalogClient: Appelis_Assortment_V1_AssortmentCatalogClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLockVoid { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLockVoid { self._interceptors = newValue } }
  }

  /// Creates a client for the appelis.assortment.v1.AssortmentCatalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Appelis_Assortment_V1_AssortmentCatalogNIOClient: Appelis_Assortment_V1_AssortmentCatalogClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol?

  /// Creates a client for the appelis.assortment.v1.AssortmentCatalog service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

/// Service will be protected by jwt device claims.
/// Catalog can be used to browse articles and filter according to provided data.
@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public protocol Appelis_Assortment_V1_AssortmentCatalogAsyncClientProtocol: GRPCClient {
  static var serviceDescriptor: GRPCServiceDescriptor { get }
  var interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol? { get }

  func makeGetAssortmentFilterCall(
    _ request: Appelis_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetAssortmentFilterRequest, Appelis_Assortment_V1_GetAssortmentFilterResponse>

  func makeGetArticleCountByCategoryIdsCall(
    _ request: Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest, Appelis_Assortment_V1_GetArticleCountByCategoryIdsResponse>

  func makeGetAssortmentCall(
    _ request: Appelis_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetAssortmentRequest, Appelis_Assortment_V1_GetAssortmentResponse>

  func makeGetArticleExtrasCall(
    _ request: Appelis_Assortment_V1_GetArticleExtrasRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleExtrasRequest, Appelis_Assortment_V1_GetArticleExtrasResponse>

  func makeGetArticlesCall(
    _ request: Appelis_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticlesRequest, Appelis_Assortment_V1_GetArticleResponse>

  func makeGetArticleDescriptionCall(
    _ request: Appelis_Assortment_V1_GetArticleDescriptionRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleDescriptionRequest, Appelis_Assortment_V1_GetArticleDescriptionResponse>

  func makeGetArticleRelatedArticlesCall(
    _ request: Appelis_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions?
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleRelatedArticlesRequest, Appelis_Assortment_V1_GetArticleResponse>
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Assortment_V1_AssortmentCatalogAsyncClientProtocol {
  public static var serviceDescriptor: GRPCServiceDescriptor {
    return Appelis_Assortment_V1_AssortmentCatalogClientMetadata.serviceDescriptor
  }

  public var interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol? {
    return nil
  }

  public func makeGetAssortmentFilterCall(
    _ request: Appelis_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetAssortmentFilterRequest, Appelis_Assortment_V1_GetAssortmentFilterResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortmentFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentFilterInterceptors() ?? []
    )
  }

  public func makeGetArticleCountByCategoryIdsCall(
    _ request: Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest, Appelis_Assortment_V1_GetArticleCountByCategoryIdsResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleCountByCategoryIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleCountByCategoryIdsInterceptors() ?? []
    )
  }

  public func makeGetAssortmentCall(
    _ request: Appelis_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetAssortmentRequest, Appelis_Assortment_V1_GetAssortmentResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentInterceptors() ?? []
    )
  }

  public func makeGetArticleExtrasCall(
    _ request: Appelis_Assortment_V1_GetArticleExtrasRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleExtrasRequest, Appelis_Assortment_V1_GetArticleExtrasResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleExtras.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleExtrasInterceptors() ?? []
    )
  }

  public func makeGetArticlesCall(
    _ request: Appelis_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticlesRequest, Appelis_Assortment_V1_GetArticleResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesInterceptors() ?? []
    )
  }

  public func makeGetArticleDescriptionCall(
    _ request: Appelis_Assortment_V1_GetArticleDescriptionRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleDescriptionRequest, Appelis_Assortment_V1_GetArticleDescriptionResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleDescription.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleDescriptionInterceptors() ?? []
    )
  }

  public func makeGetArticleRelatedArticlesCall(
    _ request: Appelis_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions? = nil
  ) -> GRPCAsyncUnaryCall<Appelis_Assortment_V1_GetArticleRelatedArticlesRequest, Appelis_Assortment_V1_GetArticleResponse> {
    return self.makeAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleRelatedArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleRelatedArticlesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
extension Appelis_Assortment_V1_AssortmentCatalogAsyncClientProtocol {
  public func getAssortmentFilter(
    _ request: Appelis_Assortment_V1_GetAssortmentFilterRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Assortment_V1_GetAssortmentFilterResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortmentFilter.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentFilterInterceptors() ?? []
    )
  }

  public func getArticleCountByCategoryIds(
    _ request: Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Assortment_V1_GetArticleCountByCategoryIdsResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleCountByCategoryIds.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleCountByCategoryIdsInterceptors() ?? []
    )
  }

  public func getAssortment(
    _ request: Appelis_Assortment_V1_GetAssortmentRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Assortment_V1_GetAssortmentResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortment.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetAssortmentInterceptors() ?? []
    )
  }

  public func getArticleExtras(
    _ request: Appelis_Assortment_V1_GetArticleExtrasRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Assortment_V1_GetArticleExtrasResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleExtras.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleExtrasInterceptors() ?? []
    )
  }

  public func getArticles(
    _ request: Appelis_Assortment_V1_GetArticlesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Assortment_V1_GetArticleResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticlesInterceptors() ?? []
    )
  }

  public func getArticleDescription(
    _ request: Appelis_Assortment_V1_GetArticleDescriptionRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Assortment_V1_GetArticleDescriptionResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleDescription.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleDescriptionInterceptors() ?? []
    )
  }

  public func getArticleRelatedArticles(
    _ request: Appelis_Assortment_V1_GetArticleRelatedArticlesRequest,
    callOptions: CallOptions? = nil
  ) async throws -> Appelis_Assortment_V1_GetArticleResponse {
    return try await self.performAsyncUnaryCall(
      path: Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleRelatedArticles.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetArticleRelatedArticlesInterceptors() ?? []
    )
  }
}

@available(macOS 10.15, iOS 13, tvOS 13, watchOS 6, *)
public struct Appelis_Assortment_V1_AssortmentCatalogAsyncClient: Appelis_Assortment_V1_AssortmentCatalogAsyncClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Appelis_Assortment_V1_AssortmentCatalogClientInterceptorFactoryProtocol: Sendable {

  /// - Returns: Interceptors to use when invoking 'getAssortmentFilter'.
  func makeGetAssortmentFilterInterceptors() -> [ClientInterceptor<Appelis_Assortment_V1_GetAssortmentFilterRequest, Appelis_Assortment_V1_GetAssortmentFilterResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticleCountByCategoryIds'.
  func makeGetArticleCountByCategoryIdsInterceptors() -> [ClientInterceptor<Appelis_Assortment_V1_GetArticleCountByCategoryIdsRequest, Appelis_Assortment_V1_GetArticleCountByCategoryIdsResponse>]

  /// - Returns: Interceptors to use when invoking 'getAssortment'.
  func makeGetAssortmentInterceptors() -> [ClientInterceptor<Appelis_Assortment_V1_GetAssortmentRequest, Appelis_Assortment_V1_GetAssortmentResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticleExtras'.
  func makeGetArticleExtrasInterceptors() -> [ClientInterceptor<Appelis_Assortment_V1_GetArticleExtrasRequest, Appelis_Assortment_V1_GetArticleExtrasResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticles'.
  func makeGetArticlesInterceptors() -> [ClientInterceptor<Appelis_Assortment_V1_GetArticlesRequest, Appelis_Assortment_V1_GetArticleResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticleDescription'.
  func makeGetArticleDescriptionInterceptors() -> [ClientInterceptor<Appelis_Assortment_V1_GetArticleDescriptionRequest, Appelis_Assortment_V1_GetArticleDescriptionResponse>]

  /// - Returns: Interceptors to use when invoking 'getArticleRelatedArticles'.
  func makeGetArticleRelatedArticlesInterceptors() -> [ClientInterceptor<Appelis_Assortment_V1_GetArticleRelatedArticlesRequest, Appelis_Assortment_V1_GetArticleResponse>]
}

public enum Appelis_Assortment_V1_AssortmentCatalogClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "AssortmentCatalog",
    fullName: "appelis.assortment.v1.AssortmentCatalog",
    methods: [
      Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortmentFilter,
      Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleCountByCategoryIds,
      Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getAssortment,
      Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleExtras,
      Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticles,
      Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleDescription,
      Appelis_Assortment_V1_AssortmentCatalogClientMetadata.Methods.getArticleRelatedArticles,
    ]
  )

  public enum Methods {
    public static let getAssortmentFilter = GRPCMethodDescriptor(
      name: "GetAssortmentFilter",
      path: "/appelis.assortment.v1.AssortmentCatalog/GetAssortmentFilter",
      type: GRPCCallType.unary
    )

    public static let getArticleCountByCategoryIds = GRPCMethodDescriptor(
      name: "GetArticleCountByCategoryIds",
      path: "/appelis.assortment.v1.AssortmentCatalog/GetArticleCountByCategoryIds",
      type: GRPCCallType.unary
    )

    public static let getAssortment = GRPCMethodDescriptor(
      name: "GetAssortment",
      path: "/appelis.assortment.v1.AssortmentCatalog/GetAssortment",
      type: GRPCCallType.unary
    )

    public static let getArticleExtras = GRPCMethodDescriptor(
      name: "GetArticleExtras",
      path: "/appelis.assortment.v1.AssortmentCatalog/GetArticleExtras",
      type: GRPCCallType.unary
    )

    public static let getArticles = GRPCMethodDescriptor(
      name: "GetArticles",
      path: "/appelis.assortment.v1.AssortmentCatalog/GetArticles",
      type: GRPCCallType.unary
    )

    public static let getArticleDescription = GRPCMethodDescriptor(
      name: "GetArticleDescription",
      path: "/appelis.assortment.v1.AssortmentCatalog/GetArticleDescription",
      type: GRPCCallType.unary
    )

    public static let getArticleRelatedArticles = GRPCMethodDescriptor(
      name: "GetArticleRelatedArticles",
      path: "/appelis.assortment.v1.AssortmentCatalog/GetArticleRelatedArticles",
      type: GRPCCallType.unary
    )
  }
}

